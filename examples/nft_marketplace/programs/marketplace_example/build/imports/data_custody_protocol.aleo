import credits.aleo;
import dcp_validator_shares.aleo;
import dcp_open_requests.aleo;
import dcp_validator_fee.aleo;
import dcp_core_protocol.aleo;
program data_custody_protocol.aleo;


struct Custody:
    origin as address;
    custody_key as field;
    threshold as u8;

struct Share:
    share_val as field;
    index as field;

struct ValidatorShareData:
    validator as address;
    share as Share;




struct Proposal:
    validators as [address; 16u32];
    threshold as u8;
    current_validator_set_index as u64;


struct Operation:
    is_addition as boolean;
    operand_value as field;
    is_operand_private as boolean;





function request_open:
    input r0 as field.private;
    input r1 as address.private;
    input r2 as u8.private;
    input r3 as field.public;
    input r4 as [address; 16u32].public;
    input r5 as u64.private;
    input r6 as credits.aleo/credits.record;
    input r7 as u32.public;
    cast self.caller r0 r2 into r8 as Custody;
    hash.bhp256 r8 into r9 as field;
    cast  r4[0u32] r4[1u32] r4[2u32] r4[3u32] r4[4u32] r4[5u32] r4[6u32] r4[7u32] r4[8u32] r4[9u32] r4[10u32] r4[11u32] r4[12u32] r4[13u32] r4[14u32] r4[15u32] into r10 as [address; 16u32];
    add r7 60u32 into r11;
    add r11 180u32 into r12;
    call dcp_open_requests.aleo/submit_requests_to_validators r10 r9 r1 r5 r3 r12 into r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28;
    cast 16u8 into r29 as u64;
    mul r29 r5 into r30;
    call credits.aleo/transfer_private_to_public r6 dcp_validator_fee.aleo r30 into r31 r32;
    call dcp_core_protocol.aleo/request_open r9 r4 r3 into r33;
    async request_open r7 r33 r32 into r34;
    output r31 as credits.aleo/credits.record;
    output r34 as data_custody_protocol.aleo/request_open.future;

finalize request_open:
    input r0 as u32.public;
    input r1 as dcp_core_protocol.aleo/request_open.future;
    input r2 as credits.aleo/transfer_private_to_public.future;
    lte r0 block.height into r3;
    assert.eq r3 true;
    add r0 60u32 into r4;
    lte block.height r4 into r5;
    assert.eq r5 true;
    await r1;
    await r2;








function add_private:
    input r0 as field.private;
    input r1 as field.private;
    input r2 as [field; 15u32].private;
    input r3 as [address; 16u32].public;
    input r4 as u8.private;
    input r5 as scalar.private;
    is.eq r2[0u32] 0field into r6;
    or false r6 into r7;
    is.eq r2[1u32] 0field into r8;
    or r7 r8 into r9;
    is.eq r2[2u32] 0field into r10;
    or r9 r10 into r11;
    is.eq r2[3u32] 0field into r12;
    or r11 r12 into r13;
    is.eq r2[4u32] 0field into r14;
    or r13 r14 into r15;
    is.eq r2[5u32] 0field into r16;
    or r15 r16 into r17;
    is.eq r2[6u32] 0field into r18;
    or r17 r18 into r19;
    is.eq r2[7u32] 0field into r20;
    or r19 r20 into r21;
    is.eq r2[8u32] 0field into r22;
    or r21 r22 into r23;
    is.eq r2[9u32] 0field into r24;
    or r23 r24 into r25;
    is.eq r2[10u32] 0field into r26;
    or r25 r26 into r27;
    is.eq r2[11u32] 0field into r28;
    or r27 r28 into r29;
    is.eq r2[12u32] 0field into r30;
    or r29 r30 into r31;
    is.eq r2[13u32] 0field into r32;
    or r31 r32 into r33;
    is.eq r2[14u32] 0field into r34;
    or r33 r34 into r35;
    not r35 into r36;
    assert.eq r36 true;
    cast true r0 true into r37 as Operation;
    hash.bhp256 r37 into r38 as field;
    commit.bhp256 r38 r5 into r39 as field;
    cast self.caller r1 r4 into r40 as Custody;
    hash.bhp256 r40 into r41 as field;
    mul 1field 1field into r42;
    sub r4 1u8 into r43;
    lt 0u8 r43 into r44;
    mul r2[0u32] r42 into r45;
    ternary r44 r45 0field into r46;
    add r0 r46 into r47;
    mul r42 1field into r48;
    sub r4 1u8 into r49;
    lt 1u8 r49 into r50;
    mul r2[1u32] r48 into r51;
    ternary r50 r51 0field into r52;
    add r47 r52 into r53;
    mul r48 1field into r54;
    sub r4 1u8 into r55;
    lt 2u8 r55 into r56;
    mul r2[2u32] r54 into r57;
    ternary r56 r57 0field into r58;
    add r53 r58 into r59;
    mul r54 1field into r60;
    sub r4 1u8 into r61;
    lt 3u8 r61 into r62;
    mul r2[3u32] r60 into r63;
    ternary r62 r63 0field into r64;
    add r59 r64 into r65;
    mul r60 1field into r66;
    sub r4 1u8 into r67;
    lt 4u8 r67 into r68;
    mul r2[4u32] r66 into r69;
    ternary r68 r69 0field into r70;
    add r65 r70 into r71;
    mul r66 1field into r72;
    sub r4 1u8 into r73;
    lt 5u8 r73 into r74;
    mul r2[5u32] r72 into r75;
    ternary r74 r75 0field into r76;
    add r71 r76 into r77;
    mul r72 1field into r78;
    sub r4 1u8 into r79;
    lt 6u8 r79 into r80;
    mul r2[6u32] r78 into r81;
    ternary r80 r81 0field into r82;
    add r77 r82 into r83;
    mul r78 1field into r84;
    sub r4 1u8 into r85;
    lt 7u8 r85 into r86;
    mul r2[7u32] r84 into r87;
    ternary r86 r87 0field into r88;
    add r83 r88 into r89;
    mul r84 1field into r90;
    sub r4 1u8 into r91;
    lt 8u8 r91 into r92;
    mul r2[8u32] r90 into r93;
    ternary r92 r93 0field into r94;
    add r89 r94 into r95;
    mul r90 1field into r96;
    sub r4 1u8 into r97;
    lt 9u8 r97 into r98;
    mul r2[9u32] r96 into r99;
    ternary r98 r99 0field into r100;
    add r95 r100 into r101;
    mul r96 1field into r102;
    sub r4 1u8 into r103;
    lt 10u8 r103 into r104;
    mul r2[10u32] r102 into r105;
    ternary r104 r105 0field into r106;
    add r101 r106 into r107;
    mul r102 1field into r108;
    sub r4 1u8 into r109;
    lt 11u8 r109 into r110;
    mul r2[11u32] r108 into r111;
    ternary r110 r111 0field into r112;
    add r107 r112 into r113;
    mul r108 1field into r114;
    sub r4 1u8 into r115;
    lt 12u8 r115 into r116;
    mul r2[12u32] r114 into r117;
    ternary r116 r117 0field into r118;
    add r113 r118 into r119;
    mul r114 1field into r120;
    sub r4 1u8 into r121;
    lt 13u8 r121 into r122;
    mul r2[13u32] r120 into r123;
    ternary r122 r123 0field into r124;
    add r119 r124 into r125;
    mul r120 1field into r126;
    sub r4 1u8 into r127;
    lt 14u8 r127 into r128;
    mul r2[14u32] r126 into r129;
    ternary r128 r129 0field into r130;
    add r125 r130 into r131;
    cast r131 1field into r132 as Share;
    cast r3[0u32] r132 into r133 as ValidatorShareData;
    mul 1field 2field into r134;
    sub r4 1u8 into r135;
    lt 0u8 r135 into r136;
    mul r2[0u32] r134 into r137;
    ternary r136 r137 0field into r138;
    add r0 r138 into r139;
    mul r134 2field into r140;
    sub r4 1u8 into r141;
    lt 1u8 r141 into r142;
    mul r2[1u32] r140 into r143;
    ternary r142 r143 0field into r144;
    add r139 r144 into r145;
    mul r140 2field into r146;
    sub r4 1u8 into r147;
    lt 2u8 r147 into r148;
    mul r2[2u32] r146 into r149;
    ternary r148 r149 0field into r150;
    add r145 r150 into r151;
    mul r146 2field into r152;
    sub r4 1u8 into r153;
    lt 3u8 r153 into r154;
    mul r2[3u32] r152 into r155;
    ternary r154 r155 0field into r156;
    add r151 r156 into r157;
    mul r152 2field into r158;
    sub r4 1u8 into r159;
    lt 4u8 r159 into r160;
    mul r2[4u32] r158 into r161;
    ternary r160 r161 0field into r162;
    add r157 r162 into r163;
    mul r158 2field into r164;
    sub r4 1u8 into r165;
    lt 5u8 r165 into r166;
    mul r2[5u32] r164 into r167;
    ternary r166 r167 0field into r168;
    add r163 r168 into r169;
    mul r164 2field into r170;
    sub r4 1u8 into r171;
    lt 6u8 r171 into r172;
    mul r2[6u32] r170 into r173;
    ternary r172 r173 0field into r174;
    add r169 r174 into r175;
    mul r170 2field into r176;
    sub r4 1u8 into r177;
    lt 7u8 r177 into r178;
    mul r2[7u32] r176 into r179;
    ternary r178 r179 0field into r180;
    add r175 r180 into r181;
    mul r176 2field into r182;
    sub r4 1u8 into r183;
    lt 8u8 r183 into r184;
    mul r2[8u32] r182 into r185;
    ternary r184 r185 0field into r186;
    add r181 r186 into r187;
    mul r182 2field into r188;
    sub r4 1u8 into r189;
    lt 9u8 r189 into r190;
    mul r2[9u32] r188 into r191;
    ternary r190 r191 0field into r192;
    add r187 r192 into r193;
    mul r188 2field into r194;
    sub r4 1u8 into r195;
    lt 10u8 r195 into r196;
    mul r2[10u32] r194 into r197;
    ternary r196 r197 0field into r198;
    add r193 r198 into r199;
    mul r194 2field into r200;
    sub r4 1u8 into r201;
    lt 11u8 r201 into r202;
    mul r2[11u32] r200 into r203;
    ternary r202 r203 0field into r204;
    add r199 r204 into r205;
    mul r200 2field into r206;
    sub r4 1u8 into r207;
    lt 12u8 r207 into r208;
    mul r2[12u32] r206 into r209;
    ternary r208 r209 0field into r210;
    add r205 r210 into r211;
    mul r206 2field into r212;
    sub r4 1u8 into r213;
    lt 13u8 r213 into r214;
    mul r2[13u32] r212 into r215;
    ternary r214 r215 0field into r216;
    add r211 r216 into r217;
    mul r212 2field into r218;
    sub r4 1u8 into r219;
    lt 14u8 r219 into r220;
    mul r2[14u32] r218 into r221;
    ternary r220 r221 0field into r222;
    add r217 r222 into r223;
    cast r223 2field into r224 as Share;
    cast r3[1u32] r224 into r225 as ValidatorShareData;
    mul 1field 3field into r226;
    sub r4 1u8 into r227;
    lt 0u8 r227 into r228;
    mul r2[0u32] r226 into r229;
    ternary r228 r229 0field into r230;
    add r0 r230 into r231;
    mul r226 3field into r232;
    sub r4 1u8 into r233;
    lt 1u8 r233 into r234;
    mul r2[1u32] r232 into r235;
    ternary r234 r235 0field into r236;
    add r231 r236 into r237;
    mul r232 3field into r238;
    sub r4 1u8 into r239;
    lt 2u8 r239 into r240;
    mul r2[2u32] r238 into r241;
    ternary r240 r241 0field into r242;
    add r237 r242 into r243;
    mul r238 3field into r244;
    sub r4 1u8 into r245;
    lt 3u8 r245 into r246;
    mul r2[3u32] r244 into r247;
    ternary r246 r247 0field into r248;
    add r243 r248 into r249;
    mul r244 3field into r250;
    sub r4 1u8 into r251;
    lt 4u8 r251 into r252;
    mul r2[4u32] r250 into r253;
    ternary r252 r253 0field into r254;
    add r249 r254 into r255;
    mul r250 3field into r256;
    sub r4 1u8 into r257;
    lt 5u8 r257 into r258;
    mul r2[5u32] r256 into r259;
    ternary r258 r259 0field into r260;
    add r255 r260 into r261;
    mul r256 3field into r262;
    sub r4 1u8 into r263;
    lt 6u8 r263 into r264;
    mul r2[6u32] r262 into r265;
    ternary r264 r265 0field into r266;
    add r261 r266 into r267;
    mul r262 3field into r268;
    sub r4 1u8 into r269;
    lt 7u8 r269 into r270;
    mul r2[7u32] r268 into r271;
    ternary r270 r271 0field into r272;
    add r267 r272 into r273;
    mul r268 3field into r274;
    sub r4 1u8 into r275;
    lt 8u8 r275 into r276;
    mul r2[8u32] r274 into r277;
    ternary r276 r277 0field into r278;
    add r273 r278 into r279;
    mul r274 3field into r280;
    sub r4 1u8 into r281;
    lt 9u8 r281 into r282;
    mul r2[9u32] r280 into r283;
    ternary r282 r283 0field into r284;
    add r279 r284 into r285;
    mul r280 3field into r286;
    sub r4 1u8 into r287;
    lt 10u8 r287 into r288;
    mul r2[10u32] r286 into r289;
    ternary r288 r289 0field into r290;
    add r285 r290 into r291;
    mul r286 3field into r292;
    sub r4 1u8 into r293;
    lt 11u8 r293 into r294;
    mul r2[11u32] r292 into r295;
    ternary r294 r295 0field into r296;
    add r291 r296 into r297;
    mul r292 3field into r298;
    sub r4 1u8 into r299;
    lt 12u8 r299 into r300;
    mul r2[12u32] r298 into r301;
    ternary r300 r301 0field into r302;
    add r297 r302 into r303;
    mul r298 3field into r304;
    sub r4 1u8 into r305;
    lt 13u8 r305 into r306;
    mul r2[13u32] r304 into r307;
    ternary r306 r307 0field into r308;
    add r303 r308 into r309;
    mul r304 3field into r310;
    sub r4 1u8 into r311;
    lt 14u8 r311 into r312;
    mul r2[14u32] r310 into r313;
    ternary r312 r313 0field into r314;
    add r309 r314 into r315;
    cast r315 3field into r316 as Share;
    cast r3[2u32] r316 into r317 as ValidatorShareData;
    mul 1field 4field into r318;
    sub r4 1u8 into r319;
    lt 0u8 r319 into r320;
    mul r2[0u32] r318 into r321;
    ternary r320 r321 0field into r322;
    add r0 r322 into r323;
    mul r318 4field into r324;
    sub r4 1u8 into r325;
    lt 1u8 r325 into r326;
    mul r2[1u32] r324 into r327;
    ternary r326 r327 0field into r328;
    add r323 r328 into r329;
    mul r324 4field into r330;
    sub r4 1u8 into r331;
    lt 2u8 r331 into r332;
    mul r2[2u32] r330 into r333;
    ternary r332 r333 0field into r334;
    add r329 r334 into r335;
    mul r330 4field into r336;
    sub r4 1u8 into r337;
    lt 3u8 r337 into r338;
    mul r2[3u32] r336 into r339;
    ternary r338 r339 0field into r340;
    add r335 r340 into r341;
    mul r336 4field into r342;
    sub r4 1u8 into r343;
    lt 4u8 r343 into r344;
    mul r2[4u32] r342 into r345;
    ternary r344 r345 0field into r346;
    add r341 r346 into r347;
    mul r342 4field into r348;
    sub r4 1u8 into r349;
    lt 5u8 r349 into r350;
    mul r2[5u32] r348 into r351;
    ternary r350 r351 0field into r352;
    add r347 r352 into r353;
    mul r348 4field into r354;
    sub r4 1u8 into r355;
    lt 6u8 r355 into r356;
    mul r2[6u32] r354 into r357;
    ternary r356 r357 0field into r358;
    add r353 r358 into r359;
    mul r354 4field into r360;
    sub r4 1u8 into r361;
    lt 7u8 r361 into r362;
    mul r2[7u32] r360 into r363;
    ternary r362 r363 0field into r364;
    add r359 r364 into r365;
    mul r360 4field into r366;
    sub r4 1u8 into r367;
    lt 8u8 r367 into r368;
    mul r2[8u32] r366 into r369;
    ternary r368 r369 0field into r370;
    add r365 r370 into r371;
    mul r366 4field into r372;
    sub r4 1u8 into r373;
    lt 9u8 r373 into r374;
    mul r2[9u32] r372 into r375;
    ternary r374 r375 0field into r376;
    add r371 r376 into r377;
    mul r372 4field into r378;
    sub r4 1u8 into r379;
    lt 10u8 r379 into r380;
    mul r2[10u32] r378 into r381;
    ternary r380 r381 0field into r382;
    add r377 r382 into r383;
    mul r378 4field into r384;
    sub r4 1u8 into r385;
    lt 11u8 r385 into r386;
    mul r2[11u32] r384 into r387;
    ternary r386 r387 0field into r388;
    add r383 r388 into r389;
    mul r384 4field into r390;
    sub r4 1u8 into r391;
    lt 12u8 r391 into r392;
    mul r2[12u32] r390 into r393;
    ternary r392 r393 0field into r394;
    add r389 r394 into r395;
    mul r390 4field into r396;
    sub r4 1u8 into r397;
    lt 13u8 r397 into r398;
    mul r2[13u32] r396 into r399;
    ternary r398 r399 0field into r400;
    add r395 r400 into r401;
    mul r396 4field into r402;
    sub r4 1u8 into r403;
    lt 14u8 r403 into r404;
    mul r2[14u32] r402 into r405;
    ternary r404 r405 0field into r406;
    add r401 r406 into r407;
    cast r407 4field into r408 as Share;
    cast r3[3u32] r408 into r409 as ValidatorShareData;
    mul 1field 5field into r410;
    sub r4 1u8 into r411;
    lt 0u8 r411 into r412;
    mul r2[0u32] r410 into r413;
    ternary r412 r413 0field into r414;
    add r0 r414 into r415;
    mul r410 5field into r416;
    sub r4 1u8 into r417;
    lt 1u8 r417 into r418;
    mul r2[1u32] r416 into r419;
    ternary r418 r419 0field into r420;
    add r415 r420 into r421;
    mul r416 5field into r422;
    sub r4 1u8 into r423;
    lt 2u8 r423 into r424;
    mul r2[2u32] r422 into r425;
    ternary r424 r425 0field into r426;
    add r421 r426 into r427;
    mul r422 5field into r428;
    sub r4 1u8 into r429;
    lt 3u8 r429 into r430;
    mul r2[3u32] r428 into r431;
    ternary r430 r431 0field into r432;
    add r427 r432 into r433;
    mul r428 5field into r434;
    sub r4 1u8 into r435;
    lt 4u8 r435 into r436;
    mul r2[4u32] r434 into r437;
    ternary r436 r437 0field into r438;
    add r433 r438 into r439;
    mul r434 5field into r440;
    sub r4 1u8 into r441;
    lt 5u8 r441 into r442;
    mul r2[5u32] r440 into r443;
    ternary r442 r443 0field into r444;
    add r439 r444 into r445;
    mul r440 5field into r446;
    sub r4 1u8 into r447;
    lt 6u8 r447 into r448;
    mul r2[6u32] r446 into r449;
    ternary r448 r449 0field into r450;
    add r445 r450 into r451;
    mul r446 5field into r452;
    sub r4 1u8 into r453;
    lt 7u8 r453 into r454;
    mul r2[7u32] r452 into r455;
    ternary r454 r455 0field into r456;
    add r451 r456 into r457;
    mul r452 5field into r458;
    sub r4 1u8 into r459;
    lt 8u8 r459 into r460;
    mul r2[8u32] r458 into r461;
    ternary r460 r461 0field into r462;
    add r457 r462 into r463;
    mul r458 5field into r464;
    sub r4 1u8 into r465;
    lt 9u8 r465 into r466;
    mul r2[9u32] r464 into r467;
    ternary r466 r467 0field into r468;
    add r463 r468 into r469;
    mul r464 5field into r470;
    sub r4 1u8 into r471;
    lt 10u8 r471 into r472;
    mul r2[10u32] r470 into r473;
    ternary r472 r473 0field into r474;
    add r469 r474 into r475;
    mul r470 5field into r476;
    sub r4 1u8 into r477;
    lt 11u8 r477 into r478;
    mul r2[11u32] r476 into r479;
    ternary r478 r479 0field into r480;
    add r475 r480 into r481;
    mul r476 5field into r482;
    sub r4 1u8 into r483;
    lt 12u8 r483 into r484;
    mul r2[12u32] r482 into r485;
    ternary r484 r485 0field into r486;
    add r481 r486 into r487;
    mul r482 5field into r488;
    sub r4 1u8 into r489;
    lt 13u8 r489 into r490;
    mul r2[13u32] r488 into r491;
    ternary r490 r491 0field into r492;
    add r487 r492 into r493;
    mul r488 5field into r494;
    sub r4 1u8 into r495;
    lt 14u8 r495 into r496;
    mul r2[14u32] r494 into r497;
    ternary r496 r497 0field into r498;
    add r493 r498 into r499;
    cast r499 5field into r500 as Share;
    cast r3[4u32] r500 into r501 as ValidatorShareData;
    mul 1field 6field into r502;
    sub r4 1u8 into r503;
    lt 0u8 r503 into r504;
    mul r2[0u32] r502 into r505;
    ternary r504 r505 0field into r506;
    add r0 r506 into r507;
    mul r502 6field into r508;
    sub r4 1u8 into r509;
    lt 1u8 r509 into r510;
    mul r2[1u32] r508 into r511;
    ternary r510 r511 0field into r512;
    add r507 r512 into r513;
    mul r508 6field into r514;
    sub r4 1u8 into r515;
    lt 2u8 r515 into r516;
    mul r2[2u32] r514 into r517;
    ternary r516 r517 0field into r518;
    add r513 r518 into r519;
    mul r514 6field into r520;
    sub r4 1u8 into r521;
    lt 3u8 r521 into r522;
    mul r2[3u32] r520 into r523;
    ternary r522 r523 0field into r524;
    add r519 r524 into r525;
    mul r520 6field into r526;
    sub r4 1u8 into r527;
    lt 4u8 r527 into r528;
    mul r2[4u32] r526 into r529;
    ternary r528 r529 0field into r530;
    add r525 r530 into r531;
    mul r526 6field into r532;
    sub r4 1u8 into r533;
    lt 5u8 r533 into r534;
    mul r2[5u32] r532 into r535;
    ternary r534 r535 0field into r536;
    add r531 r536 into r537;
    mul r532 6field into r538;
    sub r4 1u8 into r539;
    lt 6u8 r539 into r540;
    mul r2[6u32] r538 into r541;
    ternary r540 r541 0field into r542;
    add r537 r542 into r543;
    mul r538 6field into r544;
    sub r4 1u8 into r545;
    lt 7u8 r545 into r546;
    mul r2[7u32] r544 into r547;
    ternary r546 r547 0field into r548;
    add r543 r548 into r549;
    mul r544 6field into r550;
    sub r4 1u8 into r551;
    lt 8u8 r551 into r552;
    mul r2[8u32] r550 into r553;
    ternary r552 r553 0field into r554;
    add r549 r554 into r555;
    mul r550 6field into r556;
    sub r4 1u8 into r557;
    lt 9u8 r557 into r558;
    mul r2[9u32] r556 into r559;
    ternary r558 r559 0field into r560;
    add r555 r560 into r561;
    mul r556 6field into r562;
    sub r4 1u8 into r563;
    lt 10u8 r563 into r564;
    mul r2[10u32] r562 into r565;
    ternary r564 r565 0field into r566;
    add r561 r566 into r567;
    mul r562 6field into r568;
    sub r4 1u8 into r569;
    lt 11u8 r569 into r570;
    mul r2[11u32] r568 into r571;
    ternary r570 r571 0field into r572;
    add r567 r572 into r573;
    mul r568 6field into r574;
    sub r4 1u8 into r575;
    lt 12u8 r575 into r576;
    mul r2[12u32] r574 into r577;
    ternary r576 r577 0field into r578;
    add r573 r578 into r579;
    mul r574 6field into r580;
    sub r4 1u8 into r581;
    lt 13u8 r581 into r582;
    mul r2[13u32] r580 into r583;
    ternary r582 r583 0field into r584;
    add r579 r584 into r585;
    mul r580 6field into r586;
    sub r4 1u8 into r587;
    lt 14u8 r587 into r588;
    mul r2[14u32] r586 into r589;
    ternary r588 r589 0field into r590;
    add r585 r590 into r591;
    cast r591 6field into r592 as Share;
    cast r3[5u32] r592 into r593 as ValidatorShareData;
    mul 1field 7field into r594;
    sub r4 1u8 into r595;
    lt 0u8 r595 into r596;
    mul r2[0u32] r594 into r597;
    ternary r596 r597 0field into r598;
    add r0 r598 into r599;
    mul r594 7field into r600;
    sub r4 1u8 into r601;
    lt 1u8 r601 into r602;
    mul r2[1u32] r600 into r603;
    ternary r602 r603 0field into r604;
    add r599 r604 into r605;
    mul r600 7field into r606;
    sub r4 1u8 into r607;
    lt 2u8 r607 into r608;
    mul r2[2u32] r606 into r609;
    ternary r608 r609 0field into r610;
    add r605 r610 into r611;
    mul r606 7field into r612;
    sub r4 1u8 into r613;
    lt 3u8 r613 into r614;
    mul r2[3u32] r612 into r615;
    ternary r614 r615 0field into r616;
    add r611 r616 into r617;
    mul r612 7field into r618;
    sub r4 1u8 into r619;
    lt 4u8 r619 into r620;
    mul r2[4u32] r618 into r621;
    ternary r620 r621 0field into r622;
    add r617 r622 into r623;
    mul r618 7field into r624;
    sub r4 1u8 into r625;
    lt 5u8 r625 into r626;
    mul r2[5u32] r624 into r627;
    ternary r626 r627 0field into r628;
    add r623 r628 into r629;
    mul r624 7field into r630;
    sub r4 1u8 into r631;
    lt 6u8 r631 into r632;
    mul r2[6u32] r630 into r633;
    ternary r632 r633 0field into r634;
    add r629 r634 into r635;
    mul r630 7field into r636;
    sub r4 1u8 into r637;
    lt 7u8 r637 into r638;
    mul r2[7u32] r636 into r639;
    ternary r638 r639 0field into r640;
    add r635 r640 into r641;
    mul r636 7field into r642;
    sub r4 1u8 into r643;
    lt 8u8 r643 into r644;
    mul r2[8u32] r642 into r645;
    ternary r644 r645 0field into r646;
    add r641 r646 into r647;
    mul r642 7field into r648;
    sub r4 1u8 into r649;
    lt 9u8 r649 into r650;
    mul r2[9u32] r648 into r651;
    ternary r650 r651 0field into r652;
    add r647 r652 into r653;
    mul r648 7field into r654;
    sub r4 1u8 into r655;
    lt 10u8 r655 into r656;
    mul r2[10u32] r654 into r657;
    ternary r656 r657 0field into r658;
    add r653 r658 into r659;
    mul r654 7field into r660;
    sub r4 1u8 into r661;
    lt 11u8 r661 into r662;
    mul r2[11u32] r660 into r663;
    ternary r662 r663 0field into r664;
    add r659 r664 into r665;
    mul r660 7field into r666;
    sub r4 1u8 into r667;
    lt 12u8 r667 into r668;
    mul r2[12u32] r666 into r669;
    ternary r668 r669 0field into r670;
    add r665 r670 into r671;
    mul r666 7field into r672;
    sub r4 1u8 into r673;
    lt 13u8 r673 into r674;
    mul r2[13u32] r672 into r675;
    ternary r674 r675 0field into r676;
    add r671 r676 into r677;
    mul r672 7field into r678;
    sub r4 1u8 into r679;
    lt 14u8 r679 into r680;
    mul r2[14u32] r678 into r681;
    ternary r680 r681 0field into r682;
    add r677 r682 into r683;
    cast r683 7field into r684 as Share;
    cast r3[6u32] r684 into r685 as ValidatorShareData;
    mul 1field 8field into r686;
    sub r4 1u8 into r687;
    lt 0u8 r687 into r688;
    mul r2[0u32] r686 into r689;
    ternary r688 r689 0field into r690;
    add r0 r690 into r691;
    mul r686 8field into r692;
    sub r4 1u8 into r693;
    lt 1u8 r693 into r694;
    mul r2[1u32] r692 into r695;
    ternary r694 r695 0field into r696;
    add r691 r696 into r697;
    mul r692 8field into r698;
    sub r4 1u8 into r699;
    lt 2u8 r699 into r700;
    mul r2[2u32] r698 into r701;
    ternary r700 r701 0field into r702;
    add r697 r702 into r703;
    mul r698 8field into r704;
    sub r4 1u8 into r705;
    lt 3u8 r705 into r706;
    mul r2[3u32] r704 into r707;
    ternary r706 r707 0field into r708;
    add r703 r708 into r709;
    mul r704 8field into r710;
    sub r4 1u8 into r711;
    lt 4u8 r711 into r712;
    mul r2[4u32] r710 into r713;
    ternary r712 r713 0field into r714;
    add r709 r714 into r715;
    mul r710 8field into r716;
    sub r4 1u8 into r717;
    lt 5u8 r717 into r718;
    mul r2[5u32] r716 into r719;
    ternary r718 r719 0field into r720;
    add r715 r720 into r721;
    mul r716 8field into r722;
    sub r4 1u8 into r723;
    lt 6u8 r723 into r724;
    mul r2[6u32] r722 into r725;
    ternary r724 r725 0field into r726;
    add r721 r726 into r727;
    mul r722 8field into r728;
    sub r4 1u8 into r729;
    lt 7u8 r729 into r730;
    mul r2[7u32] r728 into r731;
    ternary r730 r731 0field into r732;
    add r727 r732 into r733;
    mul r728 8field into r734;
    sub r4 1u8 into r735;
    lt 8u8 r735 into r736;
    mul r2[8u32] r734 into r737;
    ternary r736 r737 0field into r738;
    add r733 r738 into r739;
    mul r734 8field into r740;
    sub r4 1u8 into r741;
    lt 9u8 r741 into r742;
    mul r2[9u32] r740 into r743;
    ternary r742 r743 0field into r744;
    add r739 r744 into r745;
    mul r740 8field into r746;
    sub r4 1u8 into r747;
    lt 10u8 r747 into r748;
    mul r2[10u32] r746 into r749;
    ternary r748 r749 0field into r750;
    add r745 r750 into r751;
    mul r746 8field into r752;
    sub r4 1u8 into r753;
    lt 11u8 r753 into r754;
    mul r2[11u32] r752 into r755;
    ternary r754 r755 0field into r756;
    add r751 r756 into r757;
    mul r752 8field into r758;
    sub r4 1u8 into r759;
    lt 12u8 r759 into r760;
    mul r2[12u32] r758 into r761;
    ternary r760 r761 0field into r762;
    add r757 r762 into r763;
    mul r758 8field into r764;
    sub r4 1u8 into r765;
    lt 13u8 r765 into r766;
    mul r2[13u32] r764 into r767;
    ternary r766 r767 0field into r768;
    add r763 r768 into r769;
    mul r764 8field into r770;
    sub r4 1u8 into r771;
    lt 14u8 r771 into r772;
    mul r2[14u32] r770 into r773;
    ternary r772 r773 0field into r774;
    add r769 r774 into r775;
    cast r775 8field into r776 as Share;
    cast r3[7u32] r776 into r777 as ValidatorShareData;
    mul 1field 9field into r778;
    sub r4 1u8 into r779;
    lt 0u8 r779 into r780;
    mul r2[0u32] r778 into r781;
    ternary r780 r781 0field into r782;
    add r0 r782 into r783;
    mul r778 9field into r784;
    sub r4 1u8 into r785;
    lt 1u8 r785 into r786;
    mul r2[1u32] r784 into r787;
    ternary r786 r787 0field into r788;
    add r783 r788 into r789;
    mul r784 9field into r790;
    sub r4 1u8 into r791;
    lt 2u8 r791 into r792;
    mul r2[2u32] r790 into r793;
    ternary r792 r793 0field into r794;
    add r789 r794 into r795;
    mul r790 9field into r796;
    sub r4 1u8 into r797;
    lt 3u8 r797 into r798;
    mul r2[3u32] r796 into r799;
    ternary r798 r799 0field into r800;
    add r795 r800 into r801;
    mul r796 9field into r802;
    sub r4 1u8 into r803;
    lt 4u8 r803 into r804;
    mul r2[4u32] r802 into r805;
    ternary r804 r805 0field into r806;
    add r801 r806 into r807;
    mul r802 9field into r808;
    sub r4 1u8 into r809;
    lt 5u8 r809 into r810;
    mul r2[5u32] r808 into r811;
    ternary r810 r811 0field into r812;
    add r807 r812 into r813;
    mul r808 9field into r814;
    sub r4 1u8 into r815;
    lt 6u8 r815 into r816;
    mul r2[6u32] r814 into r817;
    ternary r816 r817 0field into r818;
    add r813 r818 into r819;
    mul r814 9field into r820;
    sub r4 1u8 into r821;
    lt 7u8 r821 into r822;
    mul r2[7u32] r820 into r823;
    ternary r822 r823 0field into r824;
    add r819 r824 into r825;
    mul r820 9field into r826;
    sub r4 1u8 into r827;
    lt 8u8 r827 into r828;
    mul r2[8u32] r826 into r829;
    ternary r828 r829 0field into r830;
    add r825 r830 into r831;
    mul r826 9field into r832;
    sub r4 1u8 into r833;
    lt 9u8 r833 into r834;
    mul r2[9u32] r832 into r835;
    ternary r834 r835 0field into r836;
    add r831 r836 into r837;
    mul r832 9field into r838;
    sub r4 1u8 into r839;
    lt 10u8 r839 into r840;
    mul r2[10u32] r838 into r841;
    ternary r840 r841 0field into r842;
    add r837 r842 into r843;
    mul r838 9field into r844;
    sub r4 1u8 into r845;
    lt 11u8 r845 into r846;
    mul r2[11u32] r844 into r847;
    ternary r846 r847 0field into r848;
    add r843 r848 into r849;
    mul r844 9field into r850;
    sub r4 1u8 into r851;
    lt 12u8 r851 into r852;
    mul r2[12u32] r850 into r853;
    ternary r852 r853 0field into r854;
    add r849 r854 into r855;
    mul r850 9field into r856;
    sub r4 1u8 into r857;
    lt 13u8 r857 into r858;
    mul r2[13u32] r856 into r859;
    ternary r858 r859 0field into r860;
    add r855 r860 into r861;
    mul r856 9field into r862;
    sub r4 1u8 into r863;
    lt 14u8 r863 into r864;
    mul r2[14u32] r862 into r865;
    ternary r864 r865 0field into r866;
    add r861 r866 into r867;
    cast r867 9field into r868 as Share;
    cast r3[8u32] r868 into r869 as ValidatorShareData;
    mul 1field 10field into r870;
    sub r4 1u8 into r871;
    lt 0u8 r871 into r872;
    mul r2[0u32] r870 into r873;
    ternary r872 r873 0field into r874;
    add r0 r874 into r875;
    mul r870 10field into r876;
    sub r4 1u8 into r877;
    lt 1u8 r877 into r878;
    mul r2[1u32] r876 into r879;
    ternary r878 r879 0field into r880;
    add r875 r880 into r881;
    mul r876 10field into r882;
    sub r4 1u8 into r883;
    lt 2u8 r883 into r884;
    mul r2[2u32] r882 into r885;
    ternary r884 r885 0field into r886;
    add r881 r886 into r887;
    mul r882 10field into r888;
    sub r4 1u8 into r889;
    lt 3u8 r889 into r890;
    mul r2[3u32] r888 into r891;
    ternary r890 r891 0field into r892;
    add r887 r892 into r893;
    mul r888 10field into r894;
    sub r4 1u8 into r895;
    lt 4u8 r895 into r896;
    mul r2[4u32] r894 into r897;
    ternary r896 r897 0field into r898;
    add r893 r898 into r899;
    mul r894 10field into r900;
    sub r4 1u8 into r901;
    lt 5u8 r901 into r902;
    mul r2[5u32] r900 into r903;
    ternary r902 r903 0field into r904;
    add r899 r904 into r905;
    mul r900 10field into r906;
    sub r4 1u8 into r907;
    lt 6u8 r907 into r908;
    mul r2[6u32] r906 into r909;
    ternary r908 r909 0field into r910;
    add r905 r910 into r911;
    mul r906 10field into r912;
    sub r4 1u8 into r913;
    lt 7u8 r913 into r914;
    mul r2[7u32] r912 into r915;
    ternary r914 r915 0field into r916;
    add r911 r916 into r917;
    mul r912 10field into r918;
    sub r4 1u8 into r919;
    lt 8u8 r919 into r920;
    mul r2[8u32] r918 into r921;
    ternary r920 r921 0field into r922;
    add r917 r922 into r923;
    mul r918 10field into r924;
    sub r4 1u8 into r925;
    lt 9u8 r925 into r926;
    mul r2[9u32] r924 into r927;
    ternary r926 r927 0field into r928;
    add r923 r928 into r929;
    mul r924 10field into r930;
    sub r4 1u8 into r931;
    lt 10u8 r931 into r932;
    mul r2[10u32] r930 into r933;
    ternary r932 r933 0field into r934;
    add r929 r934 into r935;
    mul r930 10field into r936;
    sub r4 1u8 into r937;
    lt 11u8 r937 into r938;
    mul r2[11u32] r936 into r939;
    ternary r938 r939 0field into r940;
    add r935 r940 into r941;
    mul r936 10field into r942;
    sub r4 1u8 into r943;
    lt 12u8 r943 into r944;
    mul r2[12u32] r942 into r945;
    ternary r944 r945 0field into r946;
    add r941 r946 into r947;
    mul r942 10field into r948;
    sub r4 1u8 into r949;
    lt 13u8 r949 into r950;
    mul r2[13u32] r948 into r951;
    ternary r950 r951 0field into r952;
    add r947 r952 into r953;
    mul r948 10field into r954;
    sub r4 1u8 into r955;
    lt 14u8 r955 into r956;
    mul r2[14u32] r954 into r957;
    ternary r956 r957 0field into r958;
    add r953 r958 into r959;
    cast r959 10field into r960 as Share;
    cast r3[9u32] r960 into r961 as ValidatorShareData;
    mul 1field 11field into r962;
    sub r4 1u8 into r963;
    lt 0u8 r963 into r964;
    mul r2[0u32] r962 into r965;
    ternary r964 r965 0field into r966;
    add r0 r966 into r967;
    mul r962 11field into r968;
    sub r4 1u8 into r969;
    lt 1u8 r969 into r970;
    mul r2[1u32] r968 into r971;
    ternary r970 r971 0field into r972;
    add r967 r972 into r973;
    mul r968 11field into r974;
    sub r4 1u8 into r975;
    lt 2u8 r975 into r976;
    mul r2[2u32] r974 into r977;
    ternary r976 r977 0field into r978;
    add r973 r978 into r979;
    mul r974 11field into r980;
    sub r4 1u8 into r981;
    lt 3u8 r981 into r982;
    mul r2[3u32] r980 into r983;
    ternary r982 r983 0field into r984;
    add r979 r984 into r985;
    mul r980 11field into r986;
    sub r4 1u8 into r987;
    lt 4u8 r987 into r988;
    mul r2[4u32] r986 into r989;
    ternary r988 r989 0field into r990;
    add r985 r990 into r991;
    mul r986 11field into r992;
    sub r4 1u8 into r993;
    lt 5u8 r993 into r994;
    mul r2[5u32] r992 into r995;
    ternary r994 r995 0field into r996;
    add r991 r996 into r997;
    mul r992 11field into r998;
    sub r4 1u8 into r999;
    lt 6u8 r999 into r1000;
    mul r2[6u32] r998 into r1001;
    ternary r1000 r1001 0field into r1002;
    add r997 r1002 into r1003;
    mul r998 11field into r1004;
    sub r4 1u8 into r1005;
    lt 7u8 r1005 into r1006;
    mul r2[7u32] r1004 into r1007;
    ternary r1006 r1007 0field into r1008;
    add r1003 r1008 into r1009;
    mul r1004 11field into r1010;
    sub r4 1u8 into r1011;
    lt 8u8 r1011 into r1012;
    mul r2[8u32] r1010 into r1013;
    ternary r1012 r1013 0field into r1014;
    add r1009 r1014 into r1015;
    mul r1010 11field into r1016;
    sub r4 1u8 into r1017;
    lt 9u8 r1017 into r1018;
    mul r2[9u32] r1016 into r1019;
    ternary r1018 r1019 0field into r1020;
    add r1015 r1020 into r1021;
    mul r1016 11field into r1022;
    sub r4 1u8 into r1023;
    lt 10u8 r1023 into r1024;
    mul r2[10u32] r1022 into r1025;
    ternary r1024 r1025 0field into r1026;
    add r1021 r1026 into r1027;
    mul r1022 11field into r1028;
    sub r4 1u8 into r1029;
    lt 11u8 r1029 into r1030;
    mul r2[11u32] r1028 into r1031;
    ternary r1030 r1031 0field into r1032;
    add r1027 r1032 into r1033;
    mul r1028 11field into r1034;
    sub r4 1u8 into r1035;
    lt 12u8 r1035 into r1036;
    mul r2[12u32] r1034 into r1037;
    ternary r1036 r1037 0field into r1038;
    add r1033 r1038 into r1039;
    mul r1034 11field into r1040;
    sub r4 1u8 into r1041;
    lt 13u8 r1041 into r1042;
    mul r2[13u32] r1040 into r1043;
    ternary r1042 r1043 0field into r1044;
    add r1039 r1044 into r1045;
    mul r1040 11field into r1046;
    sub r4 1u8 into r1047;
    lt 14u8 r1047 into r1048;
    mul r2[14u32] r1046 into r1049;
    ternary r1048 r1049 0field into r1050;
    add r1045 r1050 into r1051;
    cast r1051 11field into r1052 as Share;
    cast r3[10u32] r1052 into r1053 as ValidatorShareData;
    mul 1field 12field into r1054;
    sub r4 1u8 into r1055;
    lt 0u8 r1055 into r1056;
    mul r2[0u32] r1054 into r1057;
    ternary r1056 r1057 0field into r1058;
    add r0 r1058 into r1059;
    mul r1054 12field into r1060;
    sub r4 1u8 into r1061;
    lt 1u8 r1061 into r1062;
    mul r2[1u32] r1060 into r1063;
    ternary r1062 r1063 0field into r1064;
    add r1059 r1064 into r1065;
    mul r1060 12field into r1066;
    sub r4 1u8 into r1067;
    lt 2u8 r1067 into r1068;
    mul r2[2u32] r1066 into r1069;
    ternary r1068 r1069 0field into r1070;
    add r1065 r1070 into r1071;
    mul r1066 12field into r1072;
    sub r4 1u8 into r1073;
    lt 3u8 r1073 into r1074;
    mul r2[3u32] r1072 into r1075;
    ternary r1074 r1075 0field into r1076;
    add r1071 r1076 into r1077;
    mul r1072 12field into r1078;
    sub r4 1u8 into r1079;
    lt 4u8 r1079 into r1080;
    mul r2[4u32] r1078 into r1081;
    ternary r1080 r1081 0field into r1082;
    add r1077 r1082 into r1083;
    mul r1078 12field into r1084;
    sub r4 1u8 into r1085;
    lt 5u8 r1085 into r1086;
    mul r2[5u32] r1084 into r1087;
    ternary r1086 r1087 0field into r1088;
    add r1083 r1088 into r1089;
    mul r1084 12field into r1090;
    sub r4 1u8 into r1091;
    lt 6u8 r1091 into r1092;
    mul r2[6u32] r1090 into r1093;
    ternary r1092 r1093 0field into r1094;
    add r1089 r1094 into r1095;
    mul r1090 12field into r1096;
    sub r4 1u8 into r1097;
    lt 7u8 r1097 into r1098;
    mul r2[7u32] r1096 into r1099;
    ternary r1098 r1099 0field into r1100;
    add r1095 r1100 into r1101;
    mul r1096 12field into r1102;
    sub r4 1u8 into r1103;
    lt 8u8 r1103 into r1104;
    mul r2[8u32] r1102 into r1105;
    ternary r1104 r1105 0field into r1106;
    add r1101 r1106 into r1107;
    mul r1102 12field into r1108;
    sub r4 1u8 into r1109;
    lt 9u8 r1109 into r1110;
    mul r2[9u32] r1108 into r1111;
    ternary r1110 r1111 0field into r1112;
    add r1107 r1112 into r1113;
    mul r1108 12field into r1114;
    sub r4 1u8 into r1115;
    lt 10u8 r1115 into r1116;
    mul r2[10u32] r1114 into r1117;
    ternary r1116 r1117 0field into r1118;
    add r1113 r1118 into r1119;
    mul r1114 12field into r1120;
    sub r4 1u8 into r1121;
    lt 11u8 r1121 into r1122;
    mul r2[11u32] r1120 into r1123;
    ternary r1122 r1123 0field into r1124;
    add r1119 r1124 into r1125;
    mul r1120 12field into r1126;
    sub r4 1u8 into r1127;
    lt 12u8 r1127 into r1128;
    mul r2[12u32] r1126 into r1129;
    ternary r1128 r1129 0field into r1130;
    add r1125 r1130 into r1131;
    mul r1126 12field into r1132;
    sub r4 1u8 into r1133;
    lt 13u8 r1133 into r1134;
    mul r2[13u32] r1132 into r1135;
    ternary r1134 r1135 0field into r1136;
    add r1131 r1136 into r1137;
    mul r1132 12field into r1138;
    sub r4 1u8 into r1139;
    lt 14u8 r1139 into r1140;
    mul r2[14u32] r1138 into r1141;
    ternary r1140 r1141 0field into r1142;
    add r1137 r1142 into r1143;
    cast r1143 12field into r1144 as Share;
    cast r3[11u32] r1144 into r1145 as ValidatorShareData;
    mul 1field 13field into r1146;
    sub r4 1u8 into r1147;
    lt 0u8 r1147 into r1148;
    mul r2[0u32] r1146 into r1149;
    ternary r1148 r1149 0field into r1150;
    add r0 r1150 into r1151;
    mul r1146 13field into r1152;
    sub r4 1u8 into r1153;
    lt 1u8 r1153 into r1154;
    mul r2[1u32] r1152 into r1155;
    ternary r1154 r1155 0field into r1156;
    add r1151 r1156 into r1157;
    mul r1152 13field into r1158;
    sub r4 1u8 into r1159;
    lt 2u8 r1159 into r1160;
    mul r2[2u32] r1158 into r1161;
    ternary r1160 r1161 0field into r1162;
    add r1157 r1162 into r1163;
    mul r1158 13field into r1164;
    sub r4 1u8 into r1165;
    lt 3u8 r1165 into r1166;
    mul r2[3u32] r1164 into r1167;
    ternary r1166 r1167 0field into r1168;
    add r1163 r1168 into r1169;
    mul r1164 13field into r1170;
    sub r4 1u8 into r1171;
    lt 4u8 r1171 into r1172;
    mul r2[4u32] r1170 into r1173;
    ternary r1172 r1173 0field into r1174;
    add r1169 r1174 into r1175;
    mul r1170 13field into r1176;
    sub r4 1u8 into r1177;
    lt 5u8 r1177 into r1178;
    mul r2[5u32] r1176 into r1179;
    ternary r1178 r1179 0field into r1180;
    add r1175 r1180 into r1181;
    mul r1176 13field into r1182;
    sub r4 1u8 into r1183;
    lt 6u8 r1183 into r1184;
    mul r2[6u32] r1182 into r1185;
    ternary r1184 r1185 0field into r1186;
    add r1181 r1186 into r1187;
    mul r1182 13field into r1188;
    sub r4 1u8 into r1189;
    lt 7u8 r1189 into r1190;
    mul r2[7u32] r1188 into r1191;
    ternary r1190 r1191 0field into r1192;
    add r1187 r1192 into r1193;
    mul r1188 13field into r1194;
    sub r4 1u8 into r1195;
    lt 8u8 r1195 into r1196;
    mul r2[8u32] r1194 into r1197;
    ternary r1196 r1197 0field into r1198;
    add r1193 r1198 into r1199;
    mul r1194 13field into r1200;
    sub r4 1u8 into r1201;
    lt 9u8 r1201 into r1202;
    mul r2[9u32] r1200 into r1203;
    ternary r1202 r1203 0field into r1204;
    add r1199 r1204 into r1205;
    mul r1200 13field into r1206;
    sub r4 1u8 into r1207;
    lt 10u8 r1207 into r1208;
    mul r2[10u32] r1206 into r1209;
    ternary r1208 r1209 0field into r1210;
    add r1205 r1210 into r1211;
    mul r1206 13field into r1212;
    sub r4 1u8 into r1213;
    lt 11u8 r1213 into r1214;
    mul r2[11u32] r1212 into r1215;
    ternary r1214 r1215 0field into r1216;
    add r1211 r1216 into r1217;
    mul r1212 13field into r1218;
    sub r4 1u8 into r1219;
    lt 12u8 r1219 into r1220;
    mul r2[12u32] r1218 into r1221;
    ternary r1220 r1221 0field into r1222;
    add r1217 r1222 into r1223;
    mul r1218 13field into r1224;
    sub r4 1u8 into r1225;
    lt 13u8 r1225 into r1226;
    mul r2[13u32] r1224 into r1227;
    ternary r1226 r1227 0field into r1228;
    add r1223 r1228 into r1229;
    mul r1224 13field into r1230;
    sub r4 1u8 into r1231;
    lt 14u8 r1231 into r1232;
    mul r2[14u32] r1230 into r1233;
    ternary r1232 r1233 0field into r1234;
    add r1229 r1234 into r1235;
    cast r1235 13field into r1236 as Share;
    cast r3[12u32] r1236 into r1237 as ValidatorShareData;
    mul 1field 14field into r1238;
    sub r4 1u8 into r1239;
    lt 0u8 r1239 into r1240;
    mul r2[0u32] r1238 into r1241;
    ternary r1240 r1241 0field into r1242;
    add r0 r1242 into r1243;
    mul r1238 14field into r1244;
    sub r4 1u8 into r1245;
    lt 1u8 r1245 into r1246;
    mul r2[1u32] r1244 into r1247;
    ternary r1246 r1247 0field into r1248;
    add r1243 r1248 into r1249;
    mul r1244 14field into r1250;
    sub r4 1u8 into r1251;
    lt 2u8 r1251 into r1252;
    mul r2[2u32] r1250 into r1253;
    ternary r1252 r1253 0field into r1254;
    add r1249 r1254 into r1255;
    mul r1250 14field into r1256;
    sub r4 1u8 into r1257;
    lt 3u8 r1257 into r1258;
    mul r2[3u32] r1256 into r1259;
    ternary r1258 r1259 0field into r1260;
    add r1255 r1260 into r1261;
    mul r1256 14field into r1262;
    sub r4 1u8 into r1263;
    lt 4u8 r1263 into r1264;
    mul r2[4u32] r1262 into r1265;
    ternary r1264 r1265 0field into r1266;
    add r1261 r1266 into r1267;
    mul r1262 14field into r1268;
    sub r4 1u8 into r1269;
    lt 5u8 r1269 into r1270;
    mul r2[5u32] r1268 into r1271;
    ternary r1270 r1271 0field into r1272;
    add r1267 r1272 into r1273;
    mul r1268 14field into r1274;
    sub r4 1u8 into r1275;
    lt 6u8 r1275 into r1276;
    mul r2[6u32] r1274 into r1277;
    ternary r1276 r1277 0field into r1278;
    add r1273 r1278 into r1279;
    mul r1274 14field into r1280;
    sub r4 1u8 into r1281;
    lt 7u8 r1281 into r1282;
    mul r2[7u32] r1280 into r1283;
    ternary r1282 r1283 0field into r1284;
    add r1279 r1284 into r1285;
    mul r1280 14field into r1286;
    sub r4 1u8 into r1287;
    lt 8u8 r1287 into r1288;
    mul r2[8u32] r1286 into r1289;
    ternary r1288 r1289 0field into r1290;
    add r1285 r1290 into r1291;
    mul r1286 14field into r1292;
    sub r4 1u8 into r1293;
    lt 9u8 r1293 into r1294;
    mul r2[9u32] r1292 into r1295;
    ternary r1294 r1295 0field into r1296;
    add r1291 r1296 into r1297;
    mul r1292 14field into r1298;
    sub r4 1u8 into r1299;
    lt 10u8 r1299 into r1300;
    mul r2[10u32] r1298 into r1301;
    ternary r1300 r1301 0field into r1302;
    add r1297 r1302 into r1303;
    mul r1298 14field into r1304;
    sub r4 1u8 into r1305;
    lt 11u8 r1305 into r1306;
    mul r2[11u32] r1304 into r1307;
    ternary r1306 r1307 0field into r1308;
    add r1303 r1308 into r1309;
    mul r1304 14field into r1310;
    sub r4 1u8 into r1311;
    lt 12u8 r1311 into r1312;
    mul r2[12u32] r1310 into r1313;
    ternary r1312 r1313 0field into r1314;
    add r1309 r1314 into r1315;
    mul r1310 14field into r1316;
    sub r4 1u8 into r1317;
    lt 13u8 r1317 into r1318;
    mul r2[13u32] r1316 into r1319;
    ternary r1318 r1319 0field into r1320;
    add r1315 r1320 into r1321;
    mul r1316 14field into r1322;
    sub r4 1u8 into r1323;
    lt 14u8 r1323 into r1324;
    mul r2[14u32] r1322 into r1325;
    ternary r1324 r1325 0field into r1326;
    add r1321 r1326 into r1327;
    cast r1327 14field into r1328 as Share;
    cast r3[13u32] r1328 into r1329 as ValidatorShareData;
    mul 1field 15field into r1330;
    sub r4 1u8 into r1331;
    lt 0u8 r1331 into r1332;
    mul r2[0u32] r1330 into r1333;
    ternary r1332 r1333 0field into r1334;
    add r0 r1334 into r1335;
    mul r1330 15field into r1336;
    sub r4 1u8 into r1337;
    lt 1u8 r1337 into r1338;
    mul r2[1u32] r1336 into r1339;
    ternary r1338 r1339 0field into r1340;
    add r1335 r1340 into r1341;
    mul r1336 15field into r1342;
    sub r4 1u8 into r1343;
    lt 2u8 r1343 into r1344;
    mul r2[2u32] r1342 into r1345;
    ternary r1344 r1345 0field into r1346;
    add r1341 r1346 into r1347;
    mul r1342 15field into r1348;
    sub r4 1u8 into r1349;
    lt 3u8 r1349 into r1350;
    mul r2[3u32] r1348 into r1351;
    ternary r1350 r1351 0field into r1352;
    add r1347 r1352 into r1353;
    mul r1348 15field into r1354;
    sub r4 1u8 into r1355;
    lt 4u8 r1355 into r1356;
    mul r2[4u32] r1354 into r1357;
    ternary r1356 r1357 0field into r1358;
    add r1353 r1358 into r1359;
    mul r1354 15field into r1360;
    sub r4 1u8 into r1361;
    lt 5u8 r1361 into r1362;
    mul r2[5u32] r1360 into r1363;
    ternary r1362 r1363 0field into r1364;
    add r1359 r1364 into r1365;
    mul r1360 15field into r1366;
    sub r4 1u8 into r1367;
    lt 6u8 r1367 into r1368;
    mul r2[6u32] r1366 into r1369;
    ternary r1368 r1369 0field into r1370;
    add r1365 r1370 into r1371;
    mul r1366 15field into r1372;
    sub r4 1u8 into r1373;
    lt 7u8 r1373 into r1374;
    mul r2[7u32] r1372 into r1375;
    ternary r1374 r1375 0field into r1376;
    add r1371 r1376 into r1377;
    mul r1372 15field into r1378;
    sub r4 1u8 into r1379;
    lt 8u8 r1379 into r1380;
    mul r2[8u32] r1378 into r1381;
    ternary r1380 r1381 0field into r1382;
    add r1377 r1382 into r1383;
    mul r1378 15field into r1384;
    sub r4 1u8 into r1385;
    lt 9u8 r1385 into r1386;
    mul r2[9u32] r1384 into r1387;
    ternary r1386 r1387 0field into r1388;
    add r1383 r1388 into r1389;
    mul r1384 15field into r1390;
    sub r4 1u8 into r1391;
    lt 10u8 r1391 into r1392;
    mul r2[10u32] r1390 into r1393;
    ternary r1392 r1393 0field into r1394;
    add r1389 r1394 into r1395;
    mul r1390 15field into r1396;
    sub r4 1u8 into r1397;
    lt 11u8 r1397 into r1398;
    mul r2[11u32] r1396 into r1399;
    ternary r1398 r1399 0field into r1400;
    add r1395 r1400 into r1401;
    mul r1396 15field into r1402;
    sub r4 1u8 into r1403;
    lt 12u8 r1403 into r1404;
    mul r2[12u32] r1402 into r1405;
    ternary r1404 r1405 0field into r1406;
    add r1401 r1406 into r1407;
    mul r1402 15field into r1408;
    sub r4 1u8 into r1409;
    lt 13u8 r1409 into r1410;
    mul r2[13u32] r1408 into r1411;
    ternary r1410 r1411 0field into r1412;
    add r1407 r1412 into r1413;
    mul r1408 15field into r1414;
    sub r4 1u8 into r1415;
    lt 14u8 r1415 into r1416;
    mul r2[14u32] r1414 into r1417;
    ternary r1416 r1417 0field into r1418;
    add r1413 r1418 into r1419;
    cast r1419 15field into r1420 as Share;
    cast r3[14u32] r1420 into r1421 as ValidatorShareData;
    mul 1field 16field into r1422;
    sub r4 1u8 into r1423;
    lt 0u8 r1423 into r1424;
    mul r2[0u32] r1422 into r1425;
    ternary r1424 r1425 0field into r1426;
    add r0 r1426 into r1427;
    mul r1422 16field into r1428;
    sub r4 1u8 into r1429;
    lt 1u8 r1429 into r1430;
    mul r2[1u32] r1428 into r1431;
    ternary r1430 r1431 0field into r1432;
    add r1427 r1432 into r1433;
    mul r1428 16field into r1434;
    sub r4 1u8 into r1435;
    lt 2u8 r1435 into r1436;
    mul r2[2u32] r1434 into r1437;
    ternary r1436 r1437 0field into r1438;
    add r1433 r1438 into r1439;
    mul r1434 16field into r1440;
    sub r4 1u8 into r1441;
    lt 3u8 r1441 into r1442;
    mul r2[3u32] r1440 into r1443;
    ternary r1442 r1443 0field into r1444;
    add r1439 r1444 into r1445;
    mul r1440 16field into r1446;
    sub r4 1u8 into r1447;
    lt 4u8 r1447 into r1448;
    mul r2[4u32] r1446 into r1449;
    ternary r1448 r1449 0field into r1450;
    add r1445 r1450 into r1451;
    mul r1446 16field into r1452;
    sub r4 1u8 into r1453;
    lt 5u8 r1453 into r1454;
    mul r2[5u32] r1452 into r1455;
    ternary r1454 r1455 0field into r1456;
    add r1451 r1456 into r1457;
    mul r1452 16field into r1458;
    sub r4 1u8 into r1459;
    lt 6u8 r1459 into r1460;
    mul r2[6u32] r1458 into r1461;
    ternary r1460 r1461 0field into r1462;
    add r1457 r1462 into r1463;
    mul r1458 16field into r1464;
    sub r4 1u8 into r1465;
    lt 7u8 r1465 into r1466;
    mul r2[7u32] r1464 into r1467;
    ternary r1466 r1467 0field into r1468;
    add r1463 r1468 into r1469;
    mul r1464 16field into r1470;
    sub r4 1u8 into r1471;
    lt 8u8 r1471 into r1472;
    mul r2[8u32] r1470 into r1473;
    ternary r1472 r1473 0field into r1474;
    add r1469 r1474 into r1475;
    mul r1470 16field into r1476;
    sub r4 1u8 into r1477;
    lt 9u8 r1477 into r1478;
    mul r2[9u32] r1476 into r1479;
    ternary r1478 r1479 0field into r1480;
    add r1475 r1480 into r1481;
    mul r1476 16field into r1482;
    sub r4 1u8 into r1483;
    lt 10u8 r1483 into r1484;
    mul r2[10u32] r1482 into r1485;
    ternary r1484 r1485 0field into r1486;
    add r1481 r1486 into r1487;
    mul r1482 16field into r1488;
    sub r4 1u8 into r1489;
    lt 11u8 r1489 into r1490;
    mul r2[11u32] r1488 into r1491;
    ternary r1490 r1491 0field into r1492;
    add r1487 r1492 into r1493;
    mul r1488 16field into r1494;
    sub r4 1u8 into r1495;
    lt 12u8 r1495 into r1496;
    mul r2[12u32] r1494 into r1497;
    ternary r1496 r1497 0field into r1498;
    add r1493 r1498 into r1499;
    mul r1494 16field into r1500;
    sub r4 1u8 into r1501;
    lt 13u8 r1501 into r1502;
    mul r2[13u32] r1500 into r1503;
    ternary r1502 r1503 0field into r1504;
    add r1499 r1504 into r1505;
    mul r1500 16field into r1506;
    sub r4 1u8 into r1507;
    lt 14u8 r1507 into r1508;
    mul r2[14u32] r1506 into r1509;
    ternary r1508 r1509 0field into r1510;
    add r1505 r1510 into r1511;
    cast r1511 16field into r1512 as Share;
    cast r3[15u32] r1512 into r1513 as ValidatorShareData;
    cast  r133 r225 r317 r409 r501 r593 r685 r777 r869 r961 r1053 r1145 r1237 r1329 r1421 r1513 into r1514 as [ValidatorShareData; 16u32];
    call dcp_validator_shares.aleo/submit_shares_to_validators r1514 r40 r39 true into r1515 r1516 r1517 r1518 r1519 r1520 r1521 r1522 r1523 r1524 r1525 r1526 r1527 r1528 r1529 r1530;
    call dcp_core_protocol.aleo/custody_data_as_program r41 r3 r39 into r1531;
    async add_private r1531 into r1532;
    output r1532 as data_custody_protocol.aleo/add_private.future;

finalize add_private:
    input r0 as dcp_core_protocol.aleo/custody_data_as_program.future;
    await r0;




function add_or_mul_public:
    input r0 as field.private;
    input r1 as boolean.private;
    input r2 as field.private;
    input r3 as [address; 16u32].public;
    input r4 as u8.private;
    cast r1 r0 false into r5 as Operation;
    hash.bhp256 r5 into r6 as field;
    cast self.caller r2 r4 into r7 as Custody;
    hash.bhp256 r7 into r8 as field;
    cast r0 1field into r9 as Share;
    cast r3[0u32] r9 into r10 as ValidatorShareData;
    cast r0 2field into r11 as Share;
    cast r3[1u32] r11 into r12 as ValidatorShareData;
    cast r0 3field into r13 as Share;
    cast r3[2u32] r13 into r14 as ValidatorShareData;
    cast r0 4field into r15 as Share;
    cast r3[3u32] r15 into r16 as ValidatorShareData;
    cast r0 5field into r17 as Share;
    cast r3[4u32] r17 into r18 as ValidatorShareData;
    cast r0 6field into r19 as Share;
    cast r3[5u32] r19 into r20 as ValidatorShareData;
    cast r0 7field into r21 as Share;
    cast r3[6u32] r21 into r22 as ValidatorShareData;
    cast r0 8field into r23 as Share;
    cast r3[7u32] r23 into r24 as ValidatorShareData;
    cast r0 9field into r25 as Share;
    cast r3[8u32] r25 into r26 as ValidatorShareData;
    cast r0 10field into r27 as Share;
    cast r3[9u32] r27 into r28 as ValidatorShareData;
    cast r0 11field into r29 as Share;
    cast r3[10u32] r29 into r30 as ValidatorShareData;
    cast r0 12field into r31 as Share;
    cast r3[11u32] r31 into r32 as ValidatorShareData;
    cast r0 13field into r33 as Share;
    cast r3[12u32] r33 into r34 as ValidatorShareData;
    cast r0 14field into r35 as Share;
    cast r3[13u32] r35 into r36 as ValidatorShareData;
    cast r0 15field into r37 as Share;
    cast r3[14u32] r37 into r38 as ValidatorShareData;
    cast r0 16field into r39 as Share;
    cast r3[15u32] r39 into r40 as ValidatorShareData;
    cast  r10 r12 r14 r16 r18 r20 r22 r24 r26 r28 r30 r32 r34 r36 r38 r40 into r41 as [ValidatorShareData; 16u32];
    call dcp_validator_shares.aleo/submit_shares_to_validators r41 r7 r6 r1 into r42 r43 r44 r45 r46 r47 r48 r49 r50 r51 r52 r53 r54 r55 r56 r57;
    call dcp_core_protocol.aleo/custody_data_as_program r8 r3 r6 into r58;
    async add_or_mul_public r58 into r59;
    output r59 as data_custody_protocol.aleo/add_or_mul_public.future;

finalize add_or_mul_public:
    input r0 as dcp_core_protocol.aleo/custody_data_as_program.future;
    await r0;



