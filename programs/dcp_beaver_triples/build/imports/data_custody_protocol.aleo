import credits.aleo;
import dcp_destination_shares.aleo;
import dcp_reconstruct_secret.aleo;
import dcp_validator_shares.aleo;
import dcp_open_requests.aleo;
import dcp_validator_fee.aleo;
import dcp_core_protocol.aleo;
program data_custody_protocol.aleo;


struct Share:
    share_val as field;
    index as field;

struct Custody:
    origin as address;
    custody_key as field;
    threshold as u8;



struct ValidatorShareData:
    validator as address;
    share as Share;






struct Proposal:
    validators as [address; 16u32];
    threshold as u8;
    current_validator_set_index as u64;

struct Operation:
    is_addition as boolean;
    operand_value as field;
    is_operand_private as boolean;





function request_open:
    input r0 as field.private;
    input r1 as address.private;
    input r2 as u8.private;
    input r3 as field.public;
    input r4 as [address; 16u32].public;
    input r5 as u64.private;
    input r6 as credits.aleo/credits.record;
    input r7 as u32.public;
    cast self.caller r0 r2 into r8 as Custody;
    hash.bhp256 r8 into r9 as field;
    cast  r4[0u32] r4[1u32] r4[2u32] r4[3u32] r4[4u32] r4[5u32] r4[6u32] r4[7u32] r4[8u32] r4[9u32] r4[10u32] r4[11u32] r4[12u32] r4[13u32] r4[14u32] r4[15u32] into r10 as [address; 16u32];
    add r7 60u32 into r11;
    add r11 180u32 into r12;
    call dcp_open_requests.aleo/submit_requests_to_validators r10 r9 r1 r5 r3 r12 into r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28;
    cast 16u8 into r29 as u64;
    mul r29 r5 into r30;
    call credits.aleo/transfer_private_to_public r6 dcp_validator_fee.aleo r30 into r31 r32;
    call dcp_core_protocol.aleo/request_open r9 r4 r3 into r33;
    async request_open r7 r33 r32 into r34;
    output r31 as credits.aleo/credits.record;
    output r34 as data_custody_protocol.aleo/request_open.future;

finalize request_open:
    input r0 as u32.public;
    input r1 as dcp_core_protocol.aleo/request_open.future;
    input r2 as credits.aleo/transfer_private_to_public.future;
    lte r0 block.height into r3;
    assert.eq r3 true;
    add r0 60u32 into r4;
    lte block.height r4 into r5;
    assert.eq r5 true;
    await r1;
    await r2;








function add_or_mul_private:
    input r0 as field.private;
    input r1 as boolean.private;
    input r2 as field.private;
    input r3 as [field; 15u32].private;
    input r4 as [address; 16u32].public;
    input r5 as u8.private;
    input r6 as scalar.private;
    is.eq r3[0u32] 0field into r7;
    or false r7 into r8;
    is.eq r3[1u32] 0field into r9;
    or r8 r9 into r10;
    is.eq r3[2u32] 0field into r11;
    or r10 r11 into r12;
    is.eq r3[3u32] 0field into r13;
    or r12 r13 into r14;
    is.eq r3[4u32] 0field into r15;
    or r14 r15 into r16;
    is.eq r3[5u32] 0field into r17;
    or r16 r17 into r18;
    is.eq r3[6u32] 0field into r19;
    or r18 r19 into r20;
    is.eq r3[7u32] 0field into r21;
    or r20 r21 into r22;
    is.eq r3[8u32] 0field into r23;
    or r22 r23 into r24;
    is.eq r3[9u32] 0field into r25;
    or r24 r25 into r26;
    is.eq r3[10u32] 0field into r27;
    or r26 r27 into r28;
    is.eq r3[11u32] 0field into r29;
    or r28 r29 into r30;
    is.eq r3[12u32] 0field into r31;
    or r30 r31 into r32;
    is.eq r3[13u32] 0field into r33;
    or r32 r33 into r34;
    is.eq r3[14u32] 0field into r35;
    or r34 r35 into r36;
    not r36 into r37;
    assert.eq r37 true;
    cast r1 r0 true into r38 as Operation;
    hash.bhp256 r38 into r39 as field;
    commit.bhp256 r39 r6 into r40 as field;
    cast self.caller r2 r5 into r41 as Custody;
    hash.bhp256 r41 into r42 as field;
    mul 1field 1field into r43;
    sub r5 1u8 into r44;
    lt 0u8 r44 into r45;
    mul r3[0u32] r43 into r46;
    ternary r45 r46 0field into r47;
    add r0 r47 into r48;
    mul r43 1field into r49;
    sub r5 1u8 into r50;
    lt 1u8 r50 into r51;
    mul r3[1u32] r49 into r52;
    ternary r51 r52 0field into r53;
    add r48 r53 into r54;
    mul r49 1field into r55;
    sub r5 1u8 into r56;
    lt 2u8 r56 into r57;
    mul r3[2u32] r55 into r58;
    ternary r57 r58 0field into r59;
    add r54 r59 into r60;
    mul r55 1field into r61;
    sub r5 1u8 into r62;
    lt 3u8 r62 into r63;
    mul r3[3u32] r61 into r64;
    ternary r63 r64 0field into r65;
    add r60 r65 into r66;
    mul r61 1field into r67;
    sub r5 1u8 into r68;
    lt 4u8 r68 into r69;
    mul r3[4u32] r67 into r70;
    ternary r69 r70 0field into r71;
    add r66 r71 into r72;
    mul r67 1field into r73;
    sub r5 1u8 into r74;
    lt 5u8 r74 into r75;
    mul r3[5u32] r73 into r76;
    ternary r75 r76 0field into r77;
    add r72 r77 into r78;
    mul r73 1field into r79;
    sub r5 1u8 into r80;
    lt 6u8 r80 into r81;
    mul r3[6u32] r79 into r82;
    ternary r81 r82 0field into r83;
    add r78 r83 into r84;
    mul r79 1field into r85;
    sub r5 1u8 into r86;
    lt 7u8 r86 into r87;
    mul r3[7u32] r85 into r88;
    ternary r87 r88 0field into r89;
    add r84 r89 into r90;
    mul r85 1field into r91;
    sub r5 1u8 into r92;
    lt 8u8 r92 into r93;
    mul r3[8u32] r91 into r94;
    ternary r93 r94 0field into r95;
    add r90 r95 into r96;
    mul r91 1field into r97;
    sub r5 1u8 into r98;
    lt 9u8 r98 into r99;
    mul r3[9u32] r97 into r100;
    ternary r99 r100 0field into r101;
    add r96 r101 into r102;
    mul r97 1field into r103;
    sub r5 1u8 into r104;
    lt 10u8 r104 into r105;
    mul r3[10u32] r103 into r106;
    ternary r105 r106 0field into r107;
    add r102 r107 into r108;
    mul r103 1field into r109;
    sub r5 1u8 into r110;
    lt 11u8 r110 into r111;
    mul r3[11u32] r109 into r112;
    ternary r111 r112 0field into r113;
    add r108 r113 into r114;
    mul r109 1field into r115;
    sub r5 1u8 into r116;
    lt 12u8 r116 into r117;
    mul r3[12u32] r115 into r118;
    ternary r117 r118 0field into r119;
    add r114 r119 into r120;
    mul r115 1field into r121;
    sub r5 1u8 into r122;
    lt 13u8 r122 into r123;
    mul r3[13u32] r121 into r124;
    ternary r123 r124 0field into r125;
    add r120 r125 into r126;
    mul r121 1field into r127;
    sub r5 1u8 into r128;
    lt 14u8 r128 into r129;
    mul r3[14u32] r127 into r130;
    ternary r129 r130 0field into r131;
    add r126 r131 into r132;
    cast r132 1field into r133 as Share;
    cast r4[0u32] r133 into r134 as ValidatorShareData;
    mul 1field 2field into r135;
    sub r5 1u8 into r136;
    lt 0u8 r136 into r137;
    mul r3[0u32] r135 into r138;
    ternary r137 r138 0field into r139;
    add r0 r139 into r140;
    mul r135 2field into r141;
    sub r5 1u8 into r142;
    lt 1u8 r142 into r143;
    mul r3[1u32] r141 into r144;
    ternary r143 r144 0field into r145;
    add r140 r145 into r146;
    mul r141 2field into r147;
    sub r5 1u8 into r148;
    lt 2u8 r148 into r149;
    mul r3[2u32] r147 into r150;
    ternary r149 r150 0field into r151;
    add r146 r151 into r152;
    mul r147 2field into r153;
    sub r5 1u8 into r154;
    lt 3u8 r154 into r155;
    mul r3[3u32] r153 into r156;
    ternary r155 r156 0field into r157;
    add r152 r157 into r158;
    mul r153 2field into r159;
    sub r5 1u8 into r160;
    lt 4u8 r160 into r161;
    mul r3[4u32] r159 into r162;
    ternary r161 r162 0field into r163;
    add r158 r163 into r164;
    mul r159 2field into r165;
    sub r5 1u8 into r166;
    lt 5u8 r166 into r167;
    mul r3[5u32] r165 into r168;
    ternary r167 r168 0field into r169;
    add r164 r169 into r170;
    mul r165 2field into r171;
    sub r5 1u8 into r172;
    lt 6u8 r172 into r173;
    mul r3[6u32] r171 into r174;
    ternary r173 r174 0field into r175;
    add r170 r175 into r176;
    mul r171 2field into r177;
    sub r5 1u8 into r178;
    lt 7u8 r178 into r179;
    mul r3[7u32] r177 into r180;
    ternary r179 r180 0field into r181;
    add r176 r181 into r182;
    mul r177 2field into r183;
    sub r5 1u8 into r184;
    lt 8u8 r184 into r185;
    mul r3[8u32] r183 into r186;
    ternary r185 r186 0field into r187;
    add r182 r187 into r188;
    mul r183 2field into r189;
    sub r5 1u8 into r190;
    lt 9u8 r190 into r191;
    mul r3[9u32] r189 into r192;
    ternary r191 r192 0field into r193;
    add r188 r193 into r194;
    mul r189 2field into r195;
    sub r5 1u8 into r196;
    lt 10u8 r196 into r197;
    mul r3[10u32] r195 into r198;
    ternary r197 r198 0field into r199;
    add r194 r199 into r200;
    mul r195 2field into r201;
    sub r5 1u8 into r202;
    lt 11u8 r202 into r203;
    mul r3[11u32] r201 into r204;
    ternary r203 r204 0field into r205;
    add r200 r205 into r206;
    mul r201 2field into r207;
    sub r5 1u8 into r208;
    lt 12u8 r208 into r209;
    mul r3[12u32] r207 into r210;
    ternary r209 r210 0field into r211;
    add r206 r211 into r212;
    mul r207 2field into r213;
    sub r5 1u8 into r214;
    lt 13u8 r214 into r215;
    mul r3[13u32] r213 into r216;
    ternary r215 r216 0field into r217;
    add r212 r217 into r218;
    mul r213 2field into r219;
    sub r5 1u8 into r220;
    lt 14u8 r220 into r221;
    mul r3[14u32] r219 into r222;
    ternary r221 r222 0field into r223;
    add r218 r223 into r224;
    cast r224 2field into r225 as Share;
    cast r4[1u32] r225 into r226 as ValidatorShareData;
    mul 1field 3field into r227;
    sub r5 1u8 into r228;
    lt 0u8 r228 into r229;
    mul r3[0u32] r227 into r230;
    ternary r229 r230 0field into r231;
    add r0 r231 into r232;
    mul r227 3field into r233;
    sub r5 1u8 into r234;
    lt 1u8 r234 into r235;
    mul r3[1u32] r233 into r236;
    ternary r235 r236 0field into r237;
    add r232 r237 into r238;
    mul r233 3field into r239;
    sub r5 1u8 into r240;
    lt 2u8 r240 into r241;
    mul r3[2u32] r239 into r242;
    ternary r241 r242 0field into r243;
    add r238 r243 into r244;
    mul r239 3field into r245;
    sub r5 1u8 into r246;
    lt 3u8 r246 into r247;
    mul r3[3u32] r245 into r248;
    ternary r247 r248 0field into r249;
    add r244 r249 into r250;
    mul r245 3field into r251;
    sub r5 1u8 into r252;
    lt 4u8 r252 into r253;
    mul r3[4u32] r251 into r254;
    ternary r253 r254 0field into r255;
    add r250 r255 into r256;
    mul r251 3field into r257;
    sub r5 1u8 into r258;
    lt 5u8 r258 into r259;
    mul r3[5u32] r257 into r260;
    ternary r259 r260 0field into r261;
    add r256 r261 into r262;
    mul r257 3field into r263;
    sub r5 1u8 into r264;
    lt 6u8 r264 into r265;
    mul r3[6u32] r263 into r266;
    ternary r265 r266 0field into r267;
    add r262 r267 into r268;
    mul r263 3field into r269;
    sub r5 1u8 into r270;
    lt 7u8 r270 into r271;
    mul r3[7u32] r269 into r272;
    ternary r271 r272 0field into r273;
    add r268 r273 into r274;
    mul r269 3field into r275;
    sub r5 1u8 into r276;
    lt 8u8 r276 into r277;
    mul r3[8u32] r275 into r278;
    ternary r277 r278 0field into r279;
    add r274 r279 into r280;
    mul r275 3field into r281;
    sub r5 1u8 into r282;
    lt 9u8 r282 into r283;
    mul r3[9u32] r281 into r284;
    ternary r283 r284 0field into r285;
    add r280 r285 into r286;
    mul r281 3field into r287;
    sub r5 1u8 into r288;
    lt 10u8 r288 into r289;
    mul r3[10u32] r287 into r290;
    ternary r289 r290 0field into r291;
    add r286 r291 into r292;
    mul r287 3field into r293;
    sub r5 1u8 into r294;
    lt 11u8 r294 into r295;
    mul r3[11u32] r293 into r296;
    ternary r295 r296 0field into r297;
    add r292 r297 into r298;
    mul r293 3field into r299;
    sub r5 1u8 into r300;
    lt 12u8 r300 into r301;
    mul r3[12u32] r299 into r302;
    ternary r301 r302 0field into r303;
    add r298 r303 into r304;
    mul r299 3field into r305;
    sub r5 1u8 into r306;
    lt 13u8 r306 into r307;
    mul r3[13u32] r305 into r308;
    ternary r307 r308 0field into r309;
    add r304 r309 into r310;
    mul r305 3field into r311;
    sub r5 1u8 into r312;
    lt 14u8 r312 into r313;
    mul r3[14u32] r311 into r314;
    ternary r313 r314 0field into r315;
    add r310 r315 into r316;
    cast r316 3field into r317 as Share;
    cast r4[2u32] r317 into r318 as ValidatorShareData;
    mul 1field 4field into r319;
    sub r5 1u8 into r320;
    lt 0u8 r320 into r321;
    mul r3[0u32] r319 into r322;
    ternary r321 r322 0field into r323;
    add r0 r323 into r324;
    mul r319 4field into r325;
    sub r5 1u8 into r326;
    lt 1u8 r326 into r327;
    mul r3[1u32] r325 into r328;
    ternary r327 r328 0field into r329;
    add r324 r329 into r330;
    mul r325 4field into r331;
    sub r5 1u8 into r332;
    lt 2u8 r332 into r333;
    mul r3[2u32] r331 into r334;
    ternary r333 r334 0field into r335;
    add r330 r335 into r336;
    mul r331 4field into r337;
    sub r5 1u8 into r338;
    lt 3u8 r338 into r339;
    mul r3[3u32] r337 into r340;
    ternary r339 r340 0field into r341;
    add r336 r341 into r342;
    mul r337 4field into r343;
    sub r5 1u8 into r344;
    lt 4u8 r344 into r345;
    mul r3[4u32] r343 into r346;
    ternary r345 r346 0field into r347;
    add r342 r347 into r348;
    mul r343 4field into r349;
    sub r5 1u8 into r350;
    lt 5u8 r350 into r351;
    mul r3[5u32] r349 into r352;
    ternary r351 r352 0field into r353;
    add r348 r353 into r354;
    mul r349 4field into r355;
    sub r5 1u8 into r356;
    lt 6u8 r356 into r357;
    mul r3[6u32] r355 into r358;
    ternary r357 r358 0field into r359;
    add r354 r359 into r360;
    mul r355 4field into r361;
    sub r5 1u8 into r362;
    lt 7u8 r362 into r363;
    mul r3[7u32] r361 into r364;
    ternary r363 r364 0field into r365;
    add r360 r365 into r366;
    mul r361 4field into r367;
    sub r5 1u8 into r368;
    lt 8u8 r368 into r369;
    mul r3[8u32] r367 into r370;
    ternary r369 r370 0field into r371;
    add r366 r371 into r372;
    mul r367 4field into r373;
    sub r5 1u8 into r374;
    lt 9u8 r374 into r375;
    mul r3[9u32] r373 into r376;
    ternary r375 r376 0field into r377;
    add r372 r377 into r378;
    mul r373 4field into r379;
    sub r5 1u8 into r380;
    lt 10u8 r380 into r381;
    mul r3[10u32] r379 into r382;
    ternary r381 r382 0field into r383;
    add r378 r383 into r384;
    mul r379 4field into r385;
    sub r5 1u8 into r386;
    lt 11u8 r386 into r387;
    mul r3[11u32] r385 into r388;
    ternary r387 r388 0field into r389;
    add r384 r389 into r390;
    mul r385 4field into r391;
    sub r5 1u8 into r392;
    lt 12u8 r392 into r393;
    mul r3[12u32] r391 into r394;
    ternary r393 r394 0field into r395;
    add r390 r395 into r396;
    mul r391 4field into r397;
    sub r5 1u8 into r398;
    lt 13u8 r398 into r399;
    mul r3[13u32] r397 into r400;
    ternary r399 r400 0field into r401;
    add r396 r401 into r402;
    mul r397 4field into r403;
    sub r5 1u8 into r404;
    lt 14u8 r404 into r405;
    mul r3[14u32] r403 into r406;
    ternary r405 r406 0field into r407;
    add r402 r407 into r408;
    cast r408 4field into r409 as Share;
    cast r4[3u32] r409 into r410 as ValidatorShareData;
    mul 1field 5field into r411;
    sub r5 1u8 into r412;
    lt 0u8 r412 into r413;
    mul r3[0u32] r411 into r414;
    ternary r413 r414 0field into r415;
    add r0 r415 into r416;
    mul r411 5field into r417;
    sub r5 1u8 into r418;
    lt 1u8 r418 into r419;
    mul r3[1u32] r417 into r420;
    ternary r419 r420 0field into r421;
    add r416 r421 into r422;
    mul r417 5field into r423;
    sub r5 1u8 into r424;
    lt 2u8 r424 into r425;
    mul r3[2u32] r423 into r426;
    ternary r425 r426 0field into r427;
    add r422 r427 into r428;
    mul r423 5field into r429;
    sub r5 1u8 into r430;
    lt 3u8 r430 into r431;
    mul r3[3u32] r429 into r432;
    ternary r431 r432 0field into r433;
    add r428 r433 into r434;
    mul r429 5field into r435;
    sub r5 1u8 into r436;
    lt 4u8 r436 into r437;
    mul r3[4u32] r435 into r438;
    ternary r437 r438 0field into r439;
    add r434 r439 into r440;
    mul r435 5field into r441;
    sub r5 1u8 into r442;
    lt 5u8 r442 into r443;
    mul r3[5u32] r441 into r444;
    ternary r443 r444 0field into r445;
    add r440 r445 into r446;
    mul r441 5field into r447;
    sub r5 1u8 into r448;
    lt 6u8 r448 into r449;
    mul r3[6u32] r447 into r450;
    ternary r449 r450 0field into r451;
    add r446 r451 into r452;
    mul r447 5field into r453;
    sub r5 1u8 into r454;
    lt 7u8 r454 into r455;
    mul r3[7u32] r453 into r456;
    ternary r455 r456 0field into r457;
    add r452 r457 into r458;
    mul r453 5field into r459;
    sub r5 1u8 into r460;
    lt 8u8 r460 into r461;
    mul r3[8u32] r459 into r462;
    ternary r461 r462 0field into r463;
    add r458 r463 into r464;
    mul r459 5field into r465;
    sub r5 1u8 into r466;
    lt 9u8 r466 into r467;
    mul r3[9u32] r465 into r468;
    ternary r467 r468 0field into r469;
    add r464 r469 into r470;
    mul r465 5field into r471;
    sub r5 1u8 into r472;
    lt 10u8 r472 into r473;
    mul r3[10u32] r471 into r474;
    ternary r473 r474 0field into r475;
    add r470 r475 into r476;
    mul r471 5field into r477;
    sub r5 1u8 into r478;
    lt 11u8 r478 into r479;
    mul r3[11u32] r477 into r480;
    ternary r479 r480 0field into r481;
    add r476 r481 into r482;
    mul r477 5field into r483;
    sub r5 1u8 into r484;
    lt 12u8 r484 into r485;
    mul r3[12u32] r483 into r486;
    ternary r485 r486 0field into r487;
    add r482 r487 into r488;
    mul r483 5field into r489;
    sub r5 1u8 into r490;
    lt 13u8 r490 into r491;
    mul r3[13u32] r489 into r492;
    ternary r491 r492 0field into r493;
    add r488 r493 into r494;
    mul r489 5field into r495;
    sub r5 1u8 into r496;
    lt 14u8 r496 into r497;
    mul r3[14u32] r495 into r498;
    ternary r497 r498 0field into r499;
    add r494 r499 into r500;
    cast r500 5field into r501 as Share;
    cast r4[4u32] r501 into r502 as ValidatorShareData;
    mul 1field 6field into r503;
    sub r5 1u8 into r504;
    lt 0u8 r504 into r505;
    mul r3[0u32] r503 into r506;
    ternary r505 r506 0field into r507;
    add r0 r507 into r508;
    mul r503 6field into r509;
    sub r5 1u8 into r510;
    lt 1u8 r510 into r511;
    mul r3[1u32] r509 into r512;
    ternary r511 r512 0field into r513;
    add r508 r513 into r514;
    mul r509 6field into r515;
    sub r5 1u8 into r516;
    lt 2u8 r516 into r517;
    mul r3[2u32] r515 into r518;
    ternary r517 r518 0field into r519;
    add r514 r519 into r520;
    mul r515 6field into r521;
    sub r5 1u8 into r522;
    lt 3u8 r522 into r523;
    mul r3[3u32] r521 into r524;
    ternary r523 r524 0field into r525;
    add r520 r525 into r526;
    mul r521 6field into r527;
    sub r5 1u8 into r528;
    lt 4u8 r528 into r529;
    mul r3[4u32] r527 into r530;
    ternary r529 r530 0field into r531;
    add r526 r531 into r532;
    mul r527 6field into r533;
    sub r5 1u8 into r534;
    lt 5u8 r534 into r535;
    mul r3[5u32] r533 into r536;
    ternary r535 r536 0field into r537;
    add r532 r537 into r538;
    mul r533 6field into r539;
    sub r5 1u8 into r540;
    lt 6u8 r540 into r541;
    mul r3[6u32] r539 into r542;
    ternary r541 r542 0field into r543;
    add r538 r543 into r544;
    mul r539 6field into r545;
    sub r5 1u8 into r546;
    lt 7u8 r546 into r547;
    mul r3[7u32] r545 into r548;
    ternary r547 r548 0field into r549;
    add r544 r549 into r550;
    mul r545 6field into r551;
    sub r5 1u8 into r552;
    lt 8u8 r552 into r553;
    mul r3[8u32] r551 into r554;
    ternary r553 r554 0field into r555;
    add r550 r555 into r556;
    mul r551 6field into r557;
    sub r5 1u8 into r558;
    lt 9u8 r558 into r559;
    mul r3[9u32] r557 into r560;
    ternary r559 r560 0field into r561;
    add r556 r561 into r562;
    mul r557 6field into r563;
    sub r5 1u8 into r564;
    lt 10u8 r564 into r565;
    mul r3[10u32] r563 into r566;
    ternary r565 r566 0field into r567;
    add r562 r567 into r568;
    mul r563 6field into r569;
    sub r5 1u8 into r570;
    lt 11u8 r570 into r571;
    mul r3[11u32] r569 into r572;
    ternary r571 r572 0field into r573;
    add r568 r573 into r574;
    mul r569 6field into r575;
    sub r5 1u8 into r576;
    lt 12u8 r576 into r577;
    mul r3[12u32] r575 into r578;
    ternary r577 r578 0field into r579;
    add r574 r579 into r580;
    mul r575 6field into r581;
    sub r5 1u8 into r582;
    lt 13u8 r582 into r583;
    mul r3[13u32] r581 into r584;
    ternary r583 r584 0field into r585;
    add r580 r585 into r586;
    mul r581 6field into r587;
    sub r5 1u8 into r588;
    lt 14u8 r588 into r589;
    mul r3[14u32] r587 into r590;
    ternary r589 r590 0field into r591;
    add r586 r591 into r592;
    cast r592 6field into r593 as Share;
    cast r4[5u32] r593 into r594 as ValidatorShareData;
    mul 1field 7field into r595;
    sub r5 1u8 into r596;
    lt 0u8 r596 into r597;
    mul r3[0u32] r595 into r598;
    ternary r597 r598 0field into r599;
    add r0 r599 into r600;
    mul r595 7field into r601;
    sub r5 1u8 into r602;
    lt 1u8 r602 into r603;
    mul r3[1u32] r601 into r604;
    ternary r603 r604 0field into r605;
    add r600 r605 into r606;
    mul r601 7field into r607;
    sub r5 1u8 into r608;
    lt 2u8 r608 into r609;
    mul r3[2u32] r607 into r610;
    ternary r609 r610 0field into r611;
    add r606 r611 into r612;
    mul r607 7field into r613;
    sub r5 1u8 into r614;
    lt 3u8 r614 into r615;
    mul r3[3u32] r613 into r616;
    ternary r615 r616 0field into r617;
    add r612 r617 into r618;
    mul r613 7field into r619;
    sub r5 1u8 into r620;
    lt 4u8 r620 into r621;
    mul r3[4u32] r619 into r622;
    ternary r621 r622 0field into r623;
    add r618 r623 into r624;
    mul r619 7field into r625;
    sub r5 1u8 into r626;
    lt 5u8 r626 into r627;
    mul r3[5u32] r625 into r628;
    ternary r627 r628 0field into r629;
    add r624 r629 into r630;
    mul r625 7field into r631;
    sub r5 1u8 into r632;
    lt 6u8 r632 into r633;
    mul r3[6u32] r631 into r634;
    ternary r633 r634 0field into r635;
    add r630 r635 into r636;
    mul r631 7field into r637;
    sub r5 1u8 into r638;
    lt 7u8 r638 into r639;
    mul r3[7u32] r637 into r640;
    ternary r639 r640 0field into r641;
    add r636 r641 into r642;
    mul r637 7field into r643;
    sub r5 1u8 into r644;
    lt 8u8 r644 into r645;
    mul r3[8u32] r643 into r646;
    ternary r645 r646 0field into r647;
    add r642 r647 into r648;
    mul r643 7field into r649;
    sub r5 1u8 into r650;
    lt 9u8 r650 into r651;
    mul r3[9u32] r649 into r652;
    ternary r651 r652 0field into r653;
    add r648 r653 into r654;
    mul r649 7field into r655;
    sub r5 1u8 into r656;
    lt 10u8 r656 into r657;
    mul r3[10u32] r655 into r658;
    ternary r657 r658 0field into r659;
    add r654 r659 into r660;
    mul r655 7field into r661;
    sub r5 1u8 into r662;
    lt 11u8 r662 into r663;
    mul r3[11u32] r661 into r664;
    ternary r663 r664 0field into r665;
    add r660 r665 into r666;
    mul r661 7field into r667;
    sub r5 1u8 into r668;
    lt 12u8 r668 into r669;
    mul r3[12u32] r667 into r670;
    ternary r669 r670 0field into r671;
    add r666 r671 into r672;
    mul r667 7field into r673;
    sub r5 1u8 into r674;
    lt 13u8 r674 into r675;
    mul r3[13u32] r673 into r676;
    ternary r675 r676 0field into r677;
    add r672 r677 into r678;
    mul r673 7field into r679;
    sub r5 1u8 into r680;
    lt 14u8 r680 into r681;
    mul r3[14u32] r679 into r682;
    ternary r681 r682 0field into r683;
    add r678 r683 into r684;
    cast r684 7field into r685 as Share;
    cast r4[6u32] r685 into r686 as ValidatorShareData;
    mul 1field 8field into r687;
    sub r5 1u8 into r688;
    lt 0u8 r688 into r689;
    mul r3[0u32] r687 into r690;
    ternary r689 r690 0field into r691;
    add r0 r691 into r692;
    mul r687 8field into r693;
    sub r5 1u8 into r694;
    lt 1u8 r694 into r695;
    mul r3[1u32] r693 into r696;
    ternary r695 r696 0field into r697;
    add r692 r697 into r698;
    mul r693 8field into r699;
    sub r5 1u8 into r700;
    lt 2u8 r700 into r701;
    mul r3[2u32] r699 into r702;
    ternary r701 r702 0field into r703;
    add r698 r703 into r704;
    mul r699 8field into r705;
    sub r5 1u8 into r706;
    lt 3u8 r706 into r707;
    mul r3[3u32] r705 into r708;
    ternary r707 r708 0field into r709;
    add r704 r709 into r710;
    mul r705 8field into r711;
    sub r5 1u8 into r712;
    lt 4u8 r712 into r713;
    mul r3[4u32] r711 into r714;
    ternary r713 r714 0field into r715;
    add r710 r715 into r716;
    mul r711 8field into r717;
    sub r5 1u8 into r718;
    lt 5u8 r718 into r719;
    mul r3[5u32] r717 into r720;
    ternary r719 r720 0field into r721;
    add r716 r721 into r722;
    mul r717 8field into r723;
    sub r5 1u8 into r724;
    lt 6u8 r724 into r725;
    mul r3[6u32] r723 into r726;
    ternary r725 r726 0field into r727;
    add r722 r727 into r728;
    mul r723 8field into r729;
    sub r5 1u8 into r730;
    lt 7u8 r730 into r731;
    mul r3[7u32] r729 into r732;
    ternary r731 r732 0field into r733;
    add r728 r733 into r734;
    mul r729 8field into r735;
    sub r5 1u8 into r736;
    lt 8u8 r736 into r737;
    mul r3[8u32] r735 into r738;
    ternary r737 r738 0field into r739;
    add r734 r739 into r740;
    mul r735 8field into r741;
    sub r5 1u8 into r742;
    lt 9u8 r742 into r743;
    mul r3[9u32] r741 into r744;
    ternary r743 r744 0field into r745;
    add r740 r745 into r746;
    mul r741 8field into r747;
    sub r5 1u8 into r748;
    lt 10u8 r748 into r749;
    mul r3[10u32] r747 into r750;
    ternary r749 r750 0field into r751;
    add r746 r751 into r752;
    mul r747 8field into r753;
    sub r5 1u8 into r754;
    lt 11u8 r754 into r755;
    mul r3[11u32] r753 into r756;
    ternary r755 r756 0field into r757;
    add r752 r757 into r758;
    mul r753 8field into r759;
    sub r5 1u8 into r760;
    lt 12u8 r760 into r761;
    mul r3[12u32] r759 into r762;
    ternary r761 r762 0field into r763;
    add r758 r763 into r764;
    mul r759 8field into r765;
    sub r5 1u8 into r766;
    lt 13u8 r766 into r767;
    mul r3[13u32] r765 into r768;
    ternary r767 r768 0field into r769;
    add r764 r769 into r770;
    mul r765 8field into r771;
    sub r5 1u8 into r772;
    lt 14u8 r772 into r773;
    mul r3[14u32] r771 into r774;
    ternary r773 r774 0field into r775;
    add r770 r775 into r776;
    cast r776 8field into r777 as Share;
    cast r4[7u32] r777 into r778 as ValidatorShareData;
    mul 1field 9field into r779;
    sub r5 1u8 into r780;
    lt 0u8 r780 into r781;
    mul r3[0u32] r779 into r782;
    ternary r781 r782 0field into r783;
    add r0 r783 into r784;
    mul r779 9field into r785;
    sub r5 1u8 into r786;
    lt 1u8 r786 into r787;
    mul r3[1u32] r785 into r788;
    ternary r787 r788 0field into r789;
    add r784 r789 into r790;
    mul r785 9field into r791;
    sub r5 1u8 into r792;
    lt 2u8 r792 into r793;
    mul r3[2u32] r791 into r794;
    ternary r793 r794 0field into r795;
    add r790 r795 into r796;
    mul r791 9field into r797;
    sub r5 1u8 into r798;
    lt 3u8 r798 into r799;
    mul r3[3u32] r797 into r800;
    ternary r799 r800 0field into r801;
    add r796 r801 into r802;
    mul r797 9field into r803;
    sub r5 1u8 into r804;
    lt 4u8 r804 into r805;
    mul r3[4u32] r803 into r806;
    ternary r805 r806 0field into r807;
    add r802 r807 into r808;
    mul r803 9field into r809;
    sub r5 1u8 into r810;
    lt 5u8 r810 into r811;
    mul r3[5u32] r809 into r812;
    ternary r811 r812 0field into r813;
    add r808 r813 into r814;
    mul r809 9field into r815;
    sub r5 1u8 into r816;
    lt 6u8 r816 into r817;
    mul r3[6u32] r815 into r818;
    ternary r817 r818 0field into r819;
    add r814 r819 into r820;
    mul r815 9field into r821;
    sub r5 1u8 into r822;
    lt 7u8 r822 into r823;
    mul r3[7u32] r821 into r824;
    ternary r823 r824 0field into r825;
    add r820 r825 into r826;
    mul r821 9field into r827;
    sub r5 1u8 into r828;
    lt 8u8 r828 into r829;
    mul r3[8u32] r827 into r830;
    ternary r829 r830 0field into r831;
    add r826 r831 into r832;
    mul r827 9field into r833;
    sub r5 1u8 into r834;
    lt 9u8 r834 into r835;
    mul r3[9u32] r833 into r836;
    ternary r835 r836 0field into r837;
    add r832 r837 into r838;
    mul r833 9field into r839;
    sub r5 1u8 into r840;
    lt 10u8 r840 into r841;
    mul r3[10u32] r839 into r842;
    ternary r841 r842 0field into r843;
    add r838 r843 into r844;
    mul r839 9field into r845;
    sub r5 1u8 into r846;
    lt 11u8 r846 into r847;
    mul r3[11u32] r845 into r848;
    ternary r847 r848 0field into r849;
    add r844 r849 into r850;
    mul r845 9field into r851;
    sub r5 1u8 into r852;
    lt 12u8 r852 into r853;
    mul r3[12u32] r851 into r854;
    ternary r853 r854 0field into r855;
    add r850 r855 into r856;
    mul r851 9field into r857;
    sub r5 1u8 into r858;
    lt 13u8 r858 into r859;
    mul r3[13u32] r857 into r860;
    ternary r859 r860 0field into r861;
    add r856 r861 into r862;
    mul r857 9field into r863;
    sub r5 1u8 into r864;
    lt 14u8 r864 into r865;
    mul r3[14u32] r863 into r866;
    ternary r865 r866 0field into r867;
    add r862 r867 into r868;
    cast r868 9field into r869 as Share;
    cast r4[8u32] r869 into r870 as ValidatorShareData;
    mul 1field 10field into r871;
    sub r5 1u8 into r872;
    lt 0u8 r872 into r873;
    mul r3[0u32] r871 into r874;
    ternary r873 r874 0field into r875;
    add r0 r875 into r876;
    mul r871 10field into r877;
    sub r5 1u8 into r878;
    lt 1u8 r878 into r879;
    mul r3[1u32] r877 into r880;
    ternary r879 r880 0field into r881;
    add r876 r881 into r882;
    mul r877 10field into r883;
    sub r5 1u8 into r884;
    lt 2u8 r884 into r885;
    mul r3[2u32] r883 into r886;
    ternary r885 r886 0field into r887;
    add r882 r887 into r888;
    mul r883 10field into r889;
    sub r5 1u8 into r890;
    lt 3u8 r890 into r891;
    mul r3[3u32] r889 into r892;
    ternary r891 r892 0field into r893;
    add r888 r893 into r894;
    mul r889 10field into r895;
    sub r5 1u8 into r896;
    lt 4u8 r896 into r897;
    mul r3[4u32] r895 into r898;
    ternary r897 r898 0field into r899;
    add r894 r899 into r900;
    mul r895 10field into r901;
    sub r5 1u8 into r902;
    lt 5u8 r902 into r903;
    mul r3[5u32] r901 into r904;
    ternary r903 r904 0field into r905;
    add r900 r905 into r906;
    mul r901 10field into r907;
    sub r5 1u8 into r908;
    lt 6u8 r908 into r909;
    mul r3[6u32] r907 into r910;
    ternary r909 r910 0field into r911;
    add r906 r911 into r912;
    mul r907 10field into r913;
    sub r5 1u8 into r914;
    lt 7u8 r914 into r915;
    mul r3[7u32] r913 into r916;
    ternary r915 r916 0field into r917;
    add r912 r917 into r918;
    mul r913 10field into r919;
    sub r5 1u8 into r920;
    lt 8u8 r920 into r921;
    mul r3[8u32] r919 into r922;
    ternary r921 r922 0field into r923;
    add r918 r923 into r924;
    mul r919 10field into r925;
    sub r5 1u8 into r926;
    lt 9u8 r926 into r927;
    mul r3[9u32] r925 into r928;
    ternary r927 r928 0field into r929;
    add r924 r929 into r930;
    mul r925 10field into r931;
    sub r5 1u8 into r932;
    lt 10u8 r932 into r933;
    mul r3[10u32] r931 into r934;
    ternary r933 r934 0field into r935;
    add r930 r935 into r936;
    mul r931 10field into r937;
    sub r5 1u8 into r938;
    lt 11u8 r938 into r939;
    mul r3[11u32] r937 into r940;
    ternary r939 r940 0field into r941;
    add r936 r941 into r942;
    mul r937 10field into r943;
    sub r5 1u8 into r944;
    lt 12u8 r944 into r945;
    mul r3[12u32] r943 into r946;
    ternary r945 r946 0field into r947;
    add r942 r947 into r948;
    mul r943 10field into r949;
    sub r5 1u8 into r950;
    lt 13u8 r950 into r951;
    mul r3[13u32] r949 into r952;
    ternary r951 r952 0field into r953;
    add r948 r953 into r954;
    mul r949 10field into r955;
    sub r5 1u8 into r956;
    lt 14u8 r956 into r957;
    mul r3[14u32] r955 into r958;
    ternary r957 r958 0field into r959;
    add r954 r959 into r960;
    cast r960 10field into r961 as Share;
    cast r4[9u32] r961 into r962 as ValidatorShareData;
    mul 1field 11field into r963;
    sub r5 1u8 into r964;
    lt 0u8 r964 into r965;
    mul r3[0u32] r963 into r966;
    ternary r965 r966 0field into r967;
    add r0 r967 into r968;
    mul r963 11field into r969;
    sub r5 1u8 into r970;
    lt 1u8 r970 into r971;
    mul r3[1u32] r969 into r972;
    ternary r971 r972 0field into r973;
    add r968 r973 into r974;
    mul r969 11field into r975;
    sub r5 1u8 into r976;
    lt 2u8 r976 into r977;
    mul r3[2u32] r975 into r978;
    ternary r977 r978 0field into r979;
    add r974 r979 into r980;
    mul r975 11field into r981;
    sub r5 1u8 into r982;
    lt 3u8 r982 into r983;
    mul r3[3u32] r981 into r984;
    ternary r983 r984 0field into r985;
    add r980 r985 into r986;
    mul r981 11field into r987;
    sub r5 1u8 into r988;
    lt 4u8 r988 into r989;
    mul r3[4u32] r987 into r990;
    ternary r989 r990 0field into r991;
    add r986 r991 into r992;
    mul r987 11field into r993;
    sub r5 1u8 into r994;
    lt 5u8 r994 into r995;
    mul r3[5u32] r993 into r996;
    ternary r995 r996 0field into r997;
    add r992 r997 into r998;
    mul r993 11field into r999;
    sub r5 1u8 into r1000;
    lt 6u8 r1000 into r1001;
    mul r3[6u32] r999 into r1002;
    ternary r1001 r1002 0field into r1003;
    add r998 r1003 into r1004;
    mul r999 11field into r1005;
    sub r5 1u8 into r1006;
    lt 7u8 r1006 into r1007;
    mul r3[7u32] r1005 into r1008;
    ternary r1007 r1008 0field into r1009;
    add r1004 r1009 into r1010;
    mul r1005 11field into r1011;
    sub r5 1u8 into r1012;
    lt 8u8 r1012 into r1013;
    mul r3[8u32] r1011 into r1014;
    ternary r1013 r1014 0field into r1015;
    add r1010 r1015 into r1016;
    mul r1011 11field into r1017;
    sub r5 1u8 into r1018;
    lt 9u8 r1018 into r1019;
    mul r3[9u32] r1017 into r1020;
    ternary r1019 r1020 0field into r1021;
    add r1016 r1021 into r1022;
    mul r1017 11field into r1023;
    sub r5 1u8 into r1024;
    lt 10u8 r1024 into r1025;
    mul r3[10u32] r1023 into r1026;
    ternary r1025 r1026 0field into r1027;
    add r1022 r1027 into r1028;
    mul r1023 11field into r1029;
    sub r5 1u8 into r1030;
    lt 11u8 r1030 into r1031;
    mul r3[11u32] r1029 into r1032;
    ternary r1031 r1032 0field into r1033;
    add r1028 r1033 into r1034;
    mul r1029 11field into r1035;
    sub r5 1u8 into r1036;
    lt 12u8 r1036 into r1037;
    mul r3[12u32] r1035 into r1038;
    ternary r1037 r1038 0field into r1039;
    add r1034 r1039 into r1040;
    mul r1035 11field into r1041;
    sub r5 1u8 into r1042;
    lt 13u8 r1042 into r1043;
    mul r3[13u32] r1041 into r1044;
    ternary r1043 r1044 0field into r1045;
    add r1040 r1045 into r1046;
    mul r1041 11field into r1047;
    sub r5 1u8 into r1048;
    lt 14u8 r1048 into r1049;
    mul r3[14u32] r1047 into r1050;
    ternary r1049 r1050 0field into r1051;
    add r1046 r1051 into r1052;
    cast r1052 11field into r1053 as Share;
    cast r4[10u32] r1053 into r1054 as ValidatorShareData;
    mul 1field 12field into r1055;
    sub r5 1u8 into r1056;
    lt 0u8 r1056 into r1057;
    mul r3[0u32] r1055 into r1058;
    ternary r1057 r1058 0field into r1059;
    add r0 r1059 into r1060;
    mul r1055 12field into r1061;
    sub r5 1u8 into r1062;
    lt 1u8 r1062 into r1063;
    mul r3[1u32] r1061 into r1064;
    ternary r1063 r1064 0field into r1065;
    add r1060 r1065 into r1066;
    mul r1061 12field into r1067;
    sub r5 1u8 into r1068;
    lt 2u8 r1068 into r1069;
    mul r3[2u32] r1067 into r1070;
    ternary r1069 r1070 0field into r1071;
    add r1066 r1071 into r1072;
    mul r1067 12field into r1073;
    sub r5 1u8 into r1074;
    lt 3u8 r1074 into r1075;
    mul r3[3u32] r1073 into r1076;
    ternary r1075 r1076 0field into r1077;
    add r1072 r1077 into r1078;
    mul r1073 12field into r1079;
    sub r5 1u8 into r1080;
    lt 4u8 r1080 into r1081;
    mul r3[4u32] r1079 into r1082;
    ternary r1081 r1082 0field into r1083;
    add r1078 r1083 into r1084;
    mul r1079 12field into r1085;
    sub r5 1u8 into r1086;
    lt 5u8 r1086 into r1087;
    mul r3[5u32] r1085 into r1088;
    ternary r1087 r1088 0field into r1089;
    add r1084 r1089 into r1090;
    mul r1085 12field into r1091;
    sub r5 1u8 into r1092;
    lt 6u8 r1092 into r1093;
    mul r3[6u32] r1091 into r1094;
    ternary r1093 r1094 0field into r1095;
    add r1090 r1095 into r1096;
    mul r1091 12field into r1097;
    sub r5 1u8 into r1098;
    lt 7u8 r1098 into r1099;
    mul r3[7u32] r1097 into r1100;
    ternary r1099 r1100 0field into r1101;
    add r1096 r1101 into r1102;
    mul r1097 12field into r1103;
    sub r5 1u8 into r1104;
    lt 8u8 r1104 into r1105;
    mul r3[8u32] r1103 into r1106;
    ternary r1105 r1106 0field into r1107;
    add r1102 r1107 into r1108;
    mul r1103 12field into r1109;
    sub r5 1u8 into r1110;
    lt 9u8 r1110 into r1111;
    mul r3[9u32] r1109 into r1112;
    ternary r1111 r1112 0field into r1113;
    add r1108 r1113 into r1114;
    mul r1109 12field into r1115;
    sub r5 1u8 into r1116;
    lt 10u8 r1116 into r1117;
    mul r3[10u32] r1115 into r1118;
    ternary r1117 r1118 0field into r1119;
    add r1114 r1119 into r1120;
    mul r1115 12field into r1121;
    sub r5 1u8 into r1122;
    lt 11u8 r1122 into r1123;
    mul r3[11u32] r1121 into r1124;
    ternary r1123 r1124 0field into r1125;
    add r1120 r1125 into r1126;
    mul r1121 12field into r1127;
    sub r5 1u8 into r1128;
    lt 12u8 r1128 into r1129;
    mul r3[12u32] r1127 into r1130;
    ternary r1129 r1130 0field into r1131;
    add r1126 r1131 into r1132;
    mul r1127 12field into r1133;
    sub r5 1u8 into r1134;
    lt 13u8 r1134 into r1135;
    mul r3[13u32] r1133 into r1136;
    ternary r1135 r1136 0field into r1137;
    add r1132 r1137 into r1138;
    mul r1133 12field into r1139;
    sub r5 1u8 into r1140;
    lt 14u8 r1140 into r1141;
    mul r3[14u32] r1139 into r1142;
    ternary r1141 r1142 0field into r1143;
    add r1138 r1143 into r1144;
    cast r1144 12field into r1145 as Share;
    cast r4[11u32] r1145 into r1146 as ValidatorShareData;
    mul 1field 13field into r1147;
    sub r5 1u8 into r1148;
    lt 0u8 r1148 into r1149;
    mul r3[0u32] r1147 into r1150;
    ternary r1149 r1150 0field into r1151;
    add r0 r1151 into r1152;
    mul r1147 13field into r1153;
    sub r5 1u8 into r1154;
    lt 1u8 r1154 into r1155;
    mul r3[1u32] r1153 into r1156;
    ternary r1155 r1156 0field into r1157;
    add r1152 r1157 into r1158;
    mul r1153 13field into r1159;
    sub r5 1u8 into r1160;
    lt 2u8 r1160 into r1161;
    mul r3[2u32] r1159 into r1162;
    ternary r1161 r1162 0field into r1163;
    add r1158 r1163 into r1164;
    mul r1159 13field into r1165;
    sub r5 1u8 into r1166;
    lt 3u8 r1166 into r1167;
    mul r3[3u32] r1165 into r1168;
    ternary r1167 r1168 0field into r1169;
    add r1164 r1169 into r1170;
    mul r1165 13field into r1171;
    sub r5 1u8 into r1172;
    lt 4u8 r1172 into r1173;
    mul r3[4u32] r1171 into r1174;
    ternary r1173 r1174 0field into r1175;
    add r1170 r1175 into r1176;
    mul r1171 13field into r1177;
    sub r5 1u8 into r1178;
    lt 5u8 r1178 into r1179;
    mul r3[5u32] r1177 into r1180;
    ternary r1179 r1180 0field into r1181;
    add r1176 r1181 into r1182;
    mul r1177 13field into r1183;
    sub r5 1u8 into r1184;
    lt 6u8 r1184 into r1185;
    mul r3[6u32] r1183 into r1186;
    ternary r1185 r1186 0field into r1187;
    add r1182 r1187 into r1188;
    mul r1183 13field into r1189;
    sub r5 1u8 into r1190;
    lt 7u8 r1190 into r1191;
    mul r3[7u32] r1189 into r1192;
    ternary r1191 r1192 0field into r1193;
    add r1188 r1193 into r1194;
    mul r1189 13field into r1195;
    sub r5 1u8 into r1196;
    lt 8u8 r1196 into r1197;
    mul r3[8u32] r1195 into r1198;
    ternary r1197 r1198 0field into r1199;
    add r1194 r1199 into r1200;
    mul r1195 13field into r1201;
    sub r5 1u8 into r1202;
    lt 9u8 r1202 into r1203;
    mul r3[9u32] r1201 into r1204;
    ternary r1203 r1204 0field into r1205;
    add r1200 r1205 into r1206;
    mul r1201 13field into r1207;
    sub r5 1u8 into r1208;
    lt 10u8 r1208 into r1209;
    mul r3[10u32] r1207 into r1210;
    ternary r1209 r1210 0field into r1211;
    add r1206 r1211 into r1212;
    mul r1207 13field into r1213;
    sub r5 1u8 into r1214;
    lt 11u8 r1214 into r1215;
    mul r3[11u32] r1213 into r1216;
    ternary r1215 r1216 0field into r1217;
    add r1212 r1217 into r1218;
    mul r1213 13field into r1219;
    sub r5 1u8 into r1220;
    lt 12u8 r1220 into r1221;
    mul r3[12u32] r1219 into r1222;
    ternary r1221 r1222 0field into r1223;
    add r1218 r1223 into r1224;
    mul r1219 13field into r1225;
    sub r5 1u8 into r1226;
    lt 13u8 r1226 into r1227;
    mul r3[13u32] r1225 into r1228;
    ternary r1227 r1228 0field into r1229;
    add r1224 r1229 into r1230;
    mul r1225 13field into r1231;
    sub r5 1u8 into r1232;
    lt 14u8 r1232 into r1233;
    mul r3[14u32] r1231 into r1234;
    ternary r1233 r1234 0field into r1235;
    add r1230 r1235 into r1236;
    cast r1236 13field into r1237 as Share;
    cast r4[12u32] r1237 into r1238 as ValidatorShareData;
    mul 1field 14field into r1239;
    sub r5 1u8 into r1240;
    lt 0u8 r1240 into r1241;
    mul r3[0u32] r1239 into r1242;
    ternary r1241 r1242 0field into r1243;
    add r0 r1243 into r1244;
    mul r1239 14field into r1245;
    sub r5 1u8 into r1246;
    lt 1u8 r1246 into r1247;
    mul r3[1u32] r1245 into r1248;
    ternary r1247 r1248 0field into r1249;
    add r1244 r1249 into r1250;
    mul r1245 14field into r1251;
    sub r5 1u8 into r1252;
    lt 2u8 r1252 into r1253;
    mul r3[2u32] r1251 into r1254;
    ternary r1253 r1254 0field into r1255;
    add r1250 r1255 into r1256;
    mul r1251 14field into r1257;
    sub r5 1u8 into r1258;
    lt 3u8 r1258 into r1259;
    mul r3[3u32] r1257 into r1260;
    ternary r1259 r1260 0field into r1261;
    add r1256 r1261 into r1262;
    mul r1257 14field into r1263;
    sub r5 1u8 into r1264;
    lt 4u8 r1264 into r1265;
    mul r3[4u32] r1263 into r1266;
    ternary r1265 r1266 0field into r1267;
    add r1262 r1267 into r1268;
    mul r1263 14field into r1269;
    sub r5 1u8 into r1270;
    lt 5u8 r1270 into r1271;
    mul r3[5u32] r1269 into r1272;
    ternary r1271 r1272 0field into r1273;
    add r1268 r1273 into r1274;
    mul r1269 14field into r1275;
    sub r5 1u8 into r1276;
    lt 6u8 r1276 into r1277;
    mul r3[6u32] r1275 into r1278;
    ternary r1277 r1278 0field into r1279;
    add r1274 r1279 into r1280;
    mul r1275 14field into r1281;
    sub r5 1u8 into r1282;
    lt 7u8 r1282 into r1283;
    mul r3[7u32] r1281 into r1284;
    ternary r1283 r1284 0field into r1285;
    add r1280 r1285 into r1286;
    mul r1281 14field into r1287;
    sub r5 1u8 into r1288;
    lt 8u8 r1288 into r1289;
    mul r3[8u32] r1287 into r1290;
    ternary r1289 r1290 0field into r1291;
    add r1286 r1291 into r1292;
    mul r1287 14field into r1293;
    sub r5 1u8 into r1294;
    lt 9u8 r1294 into r1295;
    mul r3[9u32] r1293 into r1296;
    ternary r1295 r1296 0field into r1297;
    add r1292 r1297 into r1298;
    mul r1293 14field into r1299;
    sub r5 1u8 into r1300;
    lt 10u8 r1300 into r1301;
    mul r3[10u32] r1299 into r1302;
    ternary r1301 r1302 0field into r1303;
    add r1298 r1303 into r1304;
    mul r1299 14field into r1305;
    sub r5 1u8 into r1306;
    lt 11u8 r1306 into r1307;
    mul r3[11u32] r1305 into r1308;
    ternary r1307 r1308 0field into r1309;
    add r1304 r1309 into r1310;
    mul r1305 14field into r1311;
    sub r5 1u8 into r1312;
    lt 12u8 r1312 into r1313;
    mul r3[12u32] r1311 into r1314;
    ternary r1313 r1314 0field into r1315;
    add r1310 r1315 into r1316;
    mul r1311 14field into r1317;
    sub r5 1u8 into r1318;
    lt 13u8 r1318 into r1319;
    mul r3[13u32] r1317 into r1320;
    ternary r1319 r1320 0field into r1321;
    add r1316 r1321 into r1322;
    mul r1317 14field into r1323;
    sub r5 1u8 into r1324;
    lt 14u8 r1324 into r1325;
    mul r3[14u32] r1323 into r1326;
    ternary r1325 r1326 0field into r1327;
    add r1322 r1327 into r1328;
    cast r1328 14field into r1329 as Share;
    cast r4[13u32] r1329 into r1330 as ValidatorShareData;
    mul 1field 15field into r1331;
    sub r5 1u8 into r1332;
    lt 0u8 r1332 into r1333;
    mul r3[0u32] r1331 into r1334;
    ternary r1333 r1334 0field into r1335;
    add r0 r1335 into r1336;
    mul r1331 15field into r1337;
    sub r5 1u8 into r1338;
    lt 1u8 r1338 into r1339;
    mul r3[1u32] r1337 into r1340;
    ternary r1339 r1340 0field into r1341;
    add r1336 r1341 into r1342;
    mul r1337 15field into r1343;
    sub r5 1u8 into r1344;
    lt 2u8 r1344 into r1345;
    mul r3[2u32] r1343 into r1346;
    ternary r1345 r1346 0field into r1347;
    add r1342 r1347 into r1348;
    mul r1343 15field into r1349;
    sub r5 1u8 into r1350;
    lt 3u8 r1350 into r1351;
    mul r3[3u32] r1349 into r1352;
    ternary r1351 r1352 0field into r1353;
    add r1348 r1353 into r1354;
    mul r1349 15field into r1355;
    sub r5 1u8 into r1356;
    lt 4u8 r1356 into r1357;
    mul r3[4u32] r1355 into r1358;
    ternary r1357 r1358 0field into r1359;
    add r1354 r1359 into r1360;
    mul r1355 15field into r1361;
    sub r5 1u8 into r1362;
    lt 5u8 r1362 into r1363;
    mul r3[5u32] r1361 into r1364;
    ternary r1363 r1364 0field into r1365;
    add r1360 r1365 into r1366;
    mul r1361 15field into r1367;
    sub r5 1u8 into r1368;
    lt 6u8 r1368 into r1369;
    mul r3[6u32] r1367 into r1370;
    ternary r1369 r1370 0field into r1371;
    add r1366 r1371 into r1372;
    mul r1367 15field into r1373;
    sub r5 1u8 into r1374;
    lt 7u8 r1374 into r1375;
    mul r3[7u32] r1373 into r1376;
    ternary r1375 r1376 0field into r1377;
    add r1372 r1377 into r1378;
    mul r1373 15field into r1379;
    sub r5 1u8 into r1380;
    lt 8u8 r1380 into r1381;
    mul r3[8u32] r1379 into r1382;
    ternary r1381 r1382 0field into r1383;
    add r1378 r1383 into r1384;
    mul r1379 15field into r1385;
    sub r5 1u8 into r1386;
    lt 9u8 r1386 into r1387;
    mul r3[9u32] r1385 into r1388;
    ternary r1387 r1388 0field into r1389;
    add r1384 r1389 into r1390;
    mul r1385 15field into r1391;
    sub r5 1u8 into r1392;
    lt 10u8 r1392 into r1393;
    mul r3[10u32] r1391 into r1394;
    ternary r1393 r1394 0field into r1395;
    add r1390 r1395 into r1396;
    mul r1391 15field into r1397;
    sub r5 1u8 into r1398;
    lt 11u8 r1398 into r1399;
    mul r3[11u32] r1397 into r1400;
    ternary r1399 r1400 0field into r1401;
    add r1396 r1401 into r1402;
    mul r1397 15field into r1403;
    sub r5 1u8 into r1404;
    lt 12u8 r1404 into r1405;
    mul r3[12u32] r1403 into r1406;
    ternary r1405 r1406 0field into r1407;
    add r1402 r1407 into r1408;
    mul r1403 15field into r1409;
    sub r5 1u8 into r1410;
    lt 13u8 r1410 into r1411;
    mul r3[13u32] r1409 into r1412;
    ternary r1411 r1412 0field into r1413;
    add r1408 r1413 into r1414;
    mul r1409 15field into r1415;
    sub r5 1u8 into r1416;
    lt 14u8 r1416 into r1417;
    mul r3[14u32] r1415 into r1418;
    ternary r1417 r1418 0field into r1419;
    add r1414 r1419 into r1420;
    cast r1420 15field into r1421 as Share;
    cast r4[14u32] r1421 into r1422 as ValidatorShareData;
    mul 1field 16field into r1423;
    sub r5 1u8 into r1424;
    lt 0u8 r1424 into r1425;
    mul r3[0u32] r1423 into r1426;
    ternary r1425 r1426 0field into r1427;
    add r0 r1427 into r1428;
    mul r1423 16field into r1429;
    sub r5 1u8 into r1430;
    lt 1u8 r1430 into r1431;
    mul r3[1u32] r1429 into r1432;
    ternary r1431 r1432 0field into r1433;
    add r1428 r1433 into r1434;
    mul r1429 16field into r1435;
    sub r5 1u8 into r1436;
    lt 2u8 r1436 into r1437;
    mul r3[2u32] r1435 into r1438;
    ternary r1437 r1438 0field into r1439;
    add r1434 r1439 into r1440;
    mul r1435 16field into r1441;
    sub r5 1u8 into r1442;
    lt 3u8 r1442 into r1443;
    mul r3[3u32] r1441 into r1444;
    ternary r1443 r1444 0field into r1445;
    add r1440 r1445 into r1446;
    mul r1441 16field into r1447;
    sub r5 1u8 into r1448;
    lt 4u8 r1448 into r1449;
    mul r3[4u32] r1447 into r1450;
    ternary r1449 r1450 0field into r1451;
    add r1446 r1451 into r1452;
    mul r1447 16field into r1453;
    sub r5 1u8 into r1454;
    lt 5u8 r1454 into r1455;
    mul r3[5u32] r1453 into r1456;
    ternary r1455 r1456 0field into r1457;
    add r1452 r1457 into r1458;
    mul r1453 16field into r1459;
    sub r5 1u8 into r1460;
    lt 6u8 r1460 into r1461;
    mul r3[6u32] r1459 into r1462;
    ternary r1461 r1462 0field into r1463;
    add r1458 r1463 into r1464;
    mul r1459 16field into r1465;
    sub r5 1u8 into r1466;
    lt 7u8 r1466 into r1467;
    mul r3[7u32] r1465 into r1468;
    ternary r1467 r1468 0field into r1469;
    add r1464 r1469 into r1470;
    mul r1465 16field into r1471;
    sub r5 1u8 into r1472;
    lt 8u8 r1472 into r1473;
    mul r3[8u32] r1471 into r1474;
    ternary r1473 r1474 0field into r1475;
    add r1470 r1475 into r1476;
    mul r1471 16field into r1477;
    sub r5 1u8 into r1478;
    lt 9u8 r1478 into r1479;
    mul r3[9u32] r1477 into r1480;
    ternary r1479 r1480 0field into r1481;
    add r1476 r1481 into r1482;
    mul r1477 16field into r1483;
    sub r5 1u8 into r1484;
    lt 10u8 r1484 into r1485;
    mul r3[10u32] r1483 into r1486;
    ternary r1485 r1486 0field into r1487;
    add r1482 r1487 into r1488;
    mul r1483 16field into r1489;
    sub r5 1u8 into r1490;
    lt 11u8 r1490 into r1491;
    mul r3[11u32] r1489 into r1492;
    ternary r1491 r1492 0field into r1493;
    add r1488 r1493 into r1494;
    mul r1489 16field into r1495;
    sub r5 1u8 into r1496;
    lt 12u8 r1496 into r1497;
    mul r3[12u32] r1495 into r1498;
    ternary r1497 r1498 0field into r1499;
    add r1494 r1499 into r1500;
    mul r1495 16field into r1501;
    sub r5 1u8 into r1502;
    lt 13u8 r1502 into r1503;
    mul r3[13u32] r1501 into r1504;
    ternary r1503 r1504 0field into r1505;
    add r1500 r1505 into r1506;
    mul r1501 16field into r1507;
    sub r5 1u8 into r1508;
    lt 14u8 r1508 into r1509;
    mul r3[14u32] r1507 into r1510;
    ternary r1509 r1510 0field into r1511;
    add r1506 r1511 into r1512;
    cast r1512 16field into r1513 as Share;
    cast r4[15u32] r1513 into r1514 as ValidatorShareData;
    cast  r134 r226 r318 r410 r502 r594 r686 r778 r870 r962 r1054 r1146 r1238 r1330 r1422 r1514 into r1515 as [ValidatorShareData; 16u32];
    ternary r1 0u8 2u8 into r1516;
    call dcp_validator_shares.aleo/submit_shares_to_validators r1515 r41 r40 r1516 into r1517 r1518 r1519 r1520 r1521 r1522 r1523 r1524 r1525 r1526 r1527 r1528 r1529 r1530 r1531 r1532;
    call dcp_core_protocol.aleo/custody_data_as_program r42 r4 r40 into r1533;
    async add_or_mul_private r1533 into r1534;
    output r1534 as data_custody_protocol.aleo/add_or_mul_private.future;

finalize add_or_mul_private:
    input r0 as dcp_core_protocol.aleo/custody_data_as_program.future;
    await r0;




function add_or_mul_public:
    input r0 as field.private;
    input r1 as boolean.private;
    input r2 as field.private;
    input r3 as [address; 16u32].public;
    input r4 as u8.private;
    cast r1 r0 false into r5 as Operation;
    hash.bhp256 r5 into r6 as field;
    cast self.caller r2 r4 into r7 as Custody;
    hash.bhp256 r7 into r8 as field;
    cast r0 1field into r9 as Share;
    cast r3[0u32] r9 into r10 as ValidatorShareData;
    cast r0 2field into r11 as Share;
    cast r3[1u32] r11 into r12 as ValidatorShareData;
    cast r0 3field into r13 as Share;
    cast r3[2u32] r13 into r14 as ValidatorShareData;
    cast r0 4field into r15 as Share;
    cast r3[3u32] r15 into r16 as ValidatorShareData;
    cast r0 5field into r17 as Share;
    cast r3[4u32] r17 into r18 as ValidatorShareData;
    cast r0 6field into r19 as Share;
    cast r3[5u32] r19 into r20 as ValidatorShareData;
    cast r0 7field into r21 as Share;
    cast r3[6u32] r21 into r22 as ValidatorShareData;
    cast r0 8field into r23 as Share;
    cast r3[7u32] r23 into r24 as ValidatorShareData;
    cast r0 9field into r25 as Share;
    cast r3[8u32] r25 into r26 as ValidatorShareData;
    cast r0 10field into r27 as Share;
    cast r3[9u32] r27 into r28 as ValidatorShareData;
    cast r0 11field into r29 as Share;
    cast r3[10u32] r29 into r30 as ValidatorShareData;
    cast r0 12field into r31 as Share;
    cast r3[11u32] r31 into r32 as ValidatorShareData;
    cast r0 13field into r33 as Share;
    cast r3[12u32] r33 into r34 as ValidatorShareData;
    cast r0 14field into r35 as Share;
    cast r3[13u32] r35 into r36 as ValidatorShareData;
    cast r0 15field into r37 as Share;
    cast r3[14u32] r37 into r38 as ValidatorShareData;
    cast r0 16field into r39 as Share;
    cast r3[15u32] r39 into r40 as ValidatorShareData;
    cast  r10 r12 r14 r16 r18 r20 r22 r24 r26 r28 r30 r32 r34 r36 r38 r40 into r41 as [ValidatorShareData; 16u32];
    ternary r1 0u8 1u8 into r42;
    call dcp_validator_shares.aleo/submit_shares_to_validators r41 r7 r6 r42 into r43 r44 r45 r46 r47 r48 r49 r50 r51 r52 r53 r54 r55 r56 r57 r58;
    call dcp_core_protocol.aleo/custody_data_as_program r8 r3 r6 into r59;
    async add_or_mul_public r59 into r60;
    output r60 as data_custody_protocol.aleo/add_or_mul_public.future;

finalize add_or_mul_public:
    input r0 as dcp_core_protocol.aleo/custody_data_as_program.future;
    await r0;



