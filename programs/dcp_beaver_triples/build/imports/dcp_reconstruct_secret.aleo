import dcp_destination_shares.aleo;
program dcp_reconstruct_secret.aleo;

struct Share:
    share_val as field;
    index as field;

struct Custody:
    origin as address;
    custody_key as field;
    threshold as u8;


record ReconstructedSecret:
    owner as address.private;
    secret as field.private;
    custody as Custody.private;
    custody_trace as field.private;






closure reconstruct_onchain:
    input r0 as [Share; 15u32];
    is.neq 0u8 0u8 into r1;
    is.neq r0[0u32].index 0field into r2;
    and r1 r2 into r3;
    sub r0[0u32].index r0[0u32].index into r4;
    is.eq r4 0field into r5;
    ternary r5 1field r4 into r6;
    inv r6 into r7;
    mul r0[0u32].index r7 into r8;
    ternary r3 r8 1field into r9;
    mul 1field r9 into r10;
    is.neq 0u8 1u8 into r11;
    is.neq r0[1u32].index 0field into r12;
    and r11 r12 into r13;
    sub r0[1u32].index r0[0u32].index into r14;
    is.eq r14 0field into r15;
    ternary r15 1field r14 into r16;
    inv r16 into r17;
    mul r0[1u32].index r17 into r18;
    ternary r13 r18 1field into r19;
    mul r10 r19 into r20;
    is.neq 0u8 2u8 into r21;
    is.neq r0[2u32].index 0field into r22;
    and r21 r22 into r23;
    sub r0[2u32].index r0[0u32].index into r24;
    is.eq r24 0field into r25;
    ternary r25 1field r24 into r26;
    inv r26 into r27;
    mul r0[2u32].index r27 into r28;
    ternary r23 r28 1field into r29;
    mul r20 r29 into r30;
    is.neq 0u8 3u8 into r31;
    is.neq r0[3u32].index 0field into r32;
    and r31 r32 into r33;
    sub r0[3u32].index r0[0u32].index into r34;
    is.eq r34 0field into r35;
    ternary r35 1field r34 into r36;
    inv r36 into r37;
    mul r0[3u32].index r37 into r38;
    ternary r33 r38 1field into r39;
    mul r30 r39 into r40;
    is.neq 0u8 4u8 into r41;
    is.neq r0[4u32].index 0field into r42;
    and r41 r42 into r43;
    sub r0[4u32].index r0[0u32].index into r44;
    is.eq r44 0field into r45;
    ternary r45 1field r44 into r46;
    inv r46 into r47;
    mul r0[4u32].index r47 into r48;
    ternary r43 r48 1field into r49;
    mul r40 r49 into r50;
    is.neq 0u8 5u8 into r51;
    is.neq r0[5u32].index 0field into r52;
    and r51 r52 into r53;
    sub r0[5u32].index r0[0u32].index into r54;
    is.eq r54 0field into r55;
    ternary r55 1field r54 into r56;
    inv r56 into r57;
    mul r0[5u32].index r57 into r58;
    ternary r53 r58 1field into r59;
    mul r50 r59 into r60;
    is.neq 0u8 6u8 into r61;
    is.neq r0[6u32].index 0field into r62;
    and r61 r62 into r63;
    sub r0[6u32].index r0[0u32].index into r64;
    is.eq r64 0field into r65;
    ternary r65 1field r64 into r66;
    inv r66 into r67;
    mul r0[6u32].index r67 into r68;
    ternary r63 r68 1field into r69;
    mul r60 r69 into r70;
    is.neq 0u8 7u8 into r71;
    is.neq r0[7u32].index 0field into r72;
    and r71 r72 into r73;
    sub r0[7u32].index r0[0u32].index into r74;
    is.eq r74 0field into r75;
    ternary r75 1field r74 into r76;
    inv r76 into r77;
    mul r0[7u32].index r77 into r78;
    ternary r73 r78 1field into r79;
    mul r70 r79 into r80;
    is.neq 0u8 8u8 into r81;
    is.neq r0[8u32].index 0field into r82;
    and r81 r82 into r83;
    sub r0[8u32].index r0[0u32].index into r84;
    is.eq r84 0field into r85;
    ternary r85 1field r84 into r86;
    inv r86 into r87;
    mul r0[8u32].index r87 into r88;
    ternary r83 r88 1field into r89;
    mul r80 r89 into r90;
    is.neq 0u8 9u8 into r91;
    is.neq r0[9u32].index 0field into r92;
    and r91 r92 into r93;
    sub r0[9u32].index r0[0u32].index into r94;
    is.eq r94 0field into r95;
    ternary r95 1field r94 into r96;
    inv r96 into r97;
    mul r0[9u32].index r97 into r98;
    ternary r93 r98 1field into r99;
    mul r90 r99 into r100;
    is.neq 0u8 10u8 into r101;
    is.neq r0[10u32].index 0field into r102;
    and r101 r102 into r103;
    sub r0[10u32].index r0[0u32].index into r104;
    is.eq r104 0field into r105;
    ternary r105 1field r104 into r106;
    inv r106 into r107;
    mul r0[10u32].index r107 into r108;
    ternary r103 r108 1field into r109;
    mul r100 r109 into r110;
    is.neq 0u8 11u8 into r111;
    is.neq r0[11u32].index 0field into r112;
    and r111 r112 into r113;
    sub r0[11u32].index r0[0u32].index into r114;
    is.eq r114 0field into r115;
    ternary r115 1field r114 into r116;
    inv r116 into r117;
    mul r0[11u32].index r117 into r118;
    ternary r113 r118 1field into r119;
    mul r110 r119 into r120;
    is.neq 0u8 12u8 into r121;
    is.neq r0[12u32].index 0field into r122;
    and r121 r122 into r123;
    sub r0[12u32].index r0[0u32].index into r124;
    is.eq r124 0field into r125;
    ternary r125 1field r124 into r126;
    inv r126 into r127;
    mul r0[12u32].index r127 into r128;
    ternary r123 r128 1field into r129;
    mul r120 r129 into r130;
    is.neq 0u8 13u8 into r131;
    is.neq r0[13u32].index 0field into r132;
    and r131 r132 into r133;
    sub r0[13u32].index r0[0u32].index into r134;
    is.eq r134 0field into r135;
    ternary r135 1field r134 into r136;
    inv r136 into r137;
    mul r0[13u32].index r137 into r138;
    ternary r133 r138 1field into r139;
    mul r130 r139 into r140;
    is.neq 0u8 14u8 into r141;
    is.neq r0[14u32].index 0field into r142;
    and r141 r142 into r143;
    sub r0[14u32].index r0[0u32].index into r144;
    is.eq r144 0field into r145;
    ternary r145 1field r144 into r146;
    inv r146 into r147;
    mul r0[14u32].index r147 into r148;
    ternary r143 r148 1field into r149;
    mul r140 r149 into r150;
    is.neq r0[0u32].index 0field into r151;
    mul r0[0u32].share_val r150 into r152;
    ternary r151 r152 0field into r153;
    add 0field r153 into r154;
    is.neq 1u8 0u8 into r155;
    is.neq r0[0u32].index 0field into r156;
    and r155 r156 into r157;
    sub r0[0u32].index r0[1u32].index into r158;
    is.eq r158 0field into r159;
    ternary r159 1field r158 into r160;
    inv r160 into r161;
    mul r0[0u32].index r161 into r162;
    ternary r157 r162 1field into r163;
    mul 1field r163 into r164;
    is.neq 1u8 1u8 into r165;
    is.neq r0[1u32].index 0field into r166;
    and r165 r166 into r167;
    sub r0[1u32].index r0[1u32].index into r168;
    is.eq r168 0field into r169;
    ternary r169 1field r168 into r170;
    inv r170 into r171;
    mul r0[1u32].index r171 into r172;
    ternary r167 r172 1field into r173;
    mul r164 r173 into r174;
    is.neq 1u8 2u8 into r175;
    is.neq r0[2u32].index 0field into r176;
    and r175 r176 into r177;
    sub r0[2u32].index r0[1u32].index into r178;
    is.eq r178 0field into r179;
    ternary r179 1field r178 into r180;
    inv r180 into r181;
    mul r0[2u32].index r181 into r182;
    ternary r177 r182 1field into r183;
    mul r174 r183 into r184;
    is.neq 1u8 3u8 into r185;
    is.neq r0[3u32].index 0field into r186;
    and r185 r186 into r187;
    sub r0[3u32].index r0[1u32].index into r188;
    is.eq r188 0field into r189;
    ternary r189 1field r188 into r190;
    inv r190 into r191;
    mul r0[3u32].index r191 into r192;
    ternary r187 r192 1field into r193;
    mul r184 r193 into r194;
    is.neq 1u8 4u8 into r195;
    is.neq r0[4u32].index 0field into r196;
    and r195 r196 into r197;
    sub r0[4u32].index r0[1u32].index into r198;
    is.eq r198 0field into r199;
    ternary r199 1field r198 into r200;
    inv r200 into r201;
    mul r0[4u32].index r201 into r202;
    ternary r197 r202 1field into r203;
    mul r194 r203 into r204;
    is.neq 1u8 5u8 into r205;
    is.neq r0[5u32].index 0field into r206;
    and r205 r206 into r207;
    sub r0[5u32].index r0[1u32].index into r208;
    is.eq r208 0field into r209;
    ternary r209 1field r208 into r210;
    inv r210 into r211;
    mul r0[5u32].index r211 into r212;
    ternary r207 r212 1field into r213;
    mul r204 r213 into r214;
    is.neq 1u8 6u8 into r215;
    is.neq r0[6u32].index 0field into r216;
    and r215 r216 into r217;
    sub r0[6u32].index r0[1u32].index into r218;
    is.eq r218 0field into r219;
    ternary r219 1field r218 into r220;
    inv r220 into r221;
    mul r0[6u32].index r221 into r222;
    ternary r217 r222 1field into r223;
    mul r214 r223 into r224;
    is.neq 1u8 7u8 into r225;
    is.neq r0[7u32].index 0field into r226;
    and r225 r226 into r227;
    sub r0[7u32].index r0[1u32].index into r228;
    is.eq r228 0field into r229;
    ternary r229 1field r228 into r230;
    inv r230 into r231;
    mul r0[7u32].index r231 into r232;
    ternary r227 r232 1field into r233;
    mul r224 r233 into r234;
    is.neq 1u8 8u8 into r235;
    is.neq r0[8u32].index 0field into r236;
    and r235 r236 into r237;
    sub r0[8u32].index r0[1u32].index into r238;
    is.eq r238 0field into r239;
    ternary r239 1field r238 into r240;
    inv r240 into r241;
    mul r0[8u32].index r241 into r242;
    ternary r237 r242 1field into r243;
    mul r234 r243 into r244;
    is.neq 1u8 9u8 into r245;
    is.neq r0[9u32].index 0field into r246;
    and r245 r246 into r247;
    sub r0[9u32].index r0[1u32].index into r248;
    is.eq r248 0field into r249;
    ternary r249 1field r248 into r250;
    inv r250 into r251;
    mul r0[9u32].index r251 into r252;
    ternary r247 r252 1field into r253;
    mul r244 r253 into r254;
    is.neq 1u8 10u8 into r255;
    is.neq r0[10u32].index 0field into r256;
    and r255 r256 into r257;
    sub r0[10u32].index r0[1u32].index into r258;
    is.eq r258 0field into r259;
    ternary r259 1field r258 into r260;
    inv r260 into r261;
    mul r0[10u32].index r261 into r262;
    ternary r257 r262 1field into r263;
    mul r254 r263 into r264;
    is.neq 1u8 11u8 into r265;
    is.neq r0[11u32].index 0field into r266;
    and r265 r266 into r267;
    sub r0[11u32].index r0[1u32].index into r268;
    is.eq r268 0field into r269;
    ternary r269 1field r268 into r270;
    inv r270 into r271;
    mul r0[11u32].index r271 into r272;
    ternary r267 r272 1field into r273;
    mul r264 r273 into r274;
    is.neq 1u8 12u8 into r275;
    is.neq r0[12u32].index 0field into r276;
    and r275 r276 into r277;
    sub r0[12u32].index r0[1u32].index into r278;
    is.eq r278 0field into r279;
    ternary r279 1field r278 into r280;
    inv r280 into r281;
    mul r0[12u32].index r281 into r282;
    ternary r277 r282 1field into r283;
    mul r274 r283 into r284;
    is.neq 1u8 13u8 into r285;
    is.neq r0[13u32].index 0field into r286;
    and r285 r286 into r287;
    sub r0[13u32].index r0[1u32].index into r288;
    is.eq r288 0field into r289;
    ternary r289 1field r288 into r290;
    inv r290 into r291;
    mul r0[13u32].index r291 into r292;
    ternary r287 r292 1field into r293;
    mul r284 r293 into r294;
    is.neq 1u8 14u8 into r295;
    is.neq r0[14u32].index 0field into r296;
    and r295 r296 into r297;
    sub r0[14u32].index r0[1u32].index into r298;
    is.eq r298 0field into r299;
    ternary r299 1field r298 into r300;
    inv r300 into r301;
    mul r0[14u32].index r301 into r302;
    ternary r297 r302 1field into r303;
    mul r294 r303 into r304;
    is.neq r0[1u32].index 0field into r305;
    mul r0[1u32].share_val r304 into r306;
    ternary r305 r306 0field into r307;
    add r154 r307 into r308;
    is.neq 2u8 0u8 into r309;
    is.neq r0[0u32].index 0field into r310;
    and r309 r310 into r311;
    sub r0[0u32].index r0[2u32].index into r312;
    is.eq r312 0field into r313;
    ternary r313 1field r312 into r314;
    inv r314 into r315;
    mul r0[0u32].index r315 into r316;
    ternary r311 r316 1field into r317;
    mul 1field r317 into r318;
    is.neq 2u8 1u8 into r319;
    is.neq r0[1u32].index 0field into r320;
    and r319 r320 into r321;
    sub r0[1u32].index r0[2u32].index into r322;
    is.eq r322 0field into r323;
    ternary r323 1field r322 into r324;
    inv r324 into r325;
    mul r0[1u32].index r325 into r326;
    ternary r321 r326 1field into r327;
    mul r318 r327 into r328;
    is.neq 2u8 2u8 into r329;
    is.neq r0[2u32].index 0field into r330;
    and r329 r330 into r331;
    sub r0[2u32].index r0[2u32].index into r332;
    is.eq r332 0field into r333;
    ternary r333 1field r332 into r334;
    inv r334 into r335;
    mul r0[2u32].index r335 into r336;
    ternary r331 r336 1field into r337;
    mul r328 r337 into r338;
    is.neq 2u8 3u8 into r339;
    is.neq r0[3u32].index 0field into r340;
    and r339 r340 into r341;
    sub r0[3u32].index r0[2u32].index into r342;
    is.eq r342 0field into r343;
    ternary r343 1field r342 into r344;
    inv r344 into r345;
    mul r0[3u32].index r345 into r346;
    ternary r341 r346 1field into r347;
    mul r338 r347 into r348;
    is.neq 2u8 4u8 into r349;
    is.neq r0[4u32].index 0field into r350;
    and r349 r350 into r351;
    sub r0[4u32].index r0[2u32].index into r352;
    is.eq r352 0field into r353;
    ternary r353 1field r352 into r354;
    inv r354 into r355;
    mul r0[4u32].index r355 into r356;
    ternary r351 r356 1field into r357;
    mul r348 r357 into r358;
    is.neq 2u8 5u8 into r359;
    is.neq r0[5u32].index 0field into r360;
    and r359 r360 into r361;
    sub r0[5u32].index r0[2u32].index into r362;
    is.eq r362 0field into r363;
    ternary r363 1field r362 into r364;
    inv r364 into r365;
    mul r0[5u32].index r365 into r366;
    ternary r361 r366 1field into r367;
    mul r358 r367 into r368;
    is.neq 2u8 6u8 into r369;
    is.neq r0[6u32].index 0field into r370;
    and r369 r370 into r371;
    sub r0[6u32].index r0[2u32].index into r372;
    is.eq r372 0field into r373;
    ternary r373 1field r372 into r374;
    inv r374 into r375;
    mul r0[6u32].index r375 into r376;
    ternary r371 r376 1field into r377;
    mul r368 r377 into r378;
    is.neq 2u8 7u8 into r379;
    is.neq r0[7u32].index 0field into r380;
    and r379 r380 into r381;
    sub r0[7u32].index r0[2u32].index into r382;
    is.eq r382 0field into r383;
    ternary r383 1field r382 into r384;
    inv r384 into r385;
    mul r0[7u32].index r385 into r386;
    ternary r381 r386 1field into r387;
    mul r378 r387 into r388;
    is.neq 2u8 8u8 into r389;
    is.neq r0[8u32].index 0field into r390;
    and r389 r390 into r391;
    sub r0[8u32].index r0[2u32].index into r392;
    is.eq r392 0field into r393;
    ternary r393 1field r392 into r394;
    inv r394 into r395;
    mul r0[8u32].index r395 into r396;
    ternary r391 r396 1field into r397;
    mul r388 r397 into r398;
    is.neq 2u8 9u8 into r399;
    is.neq r0[9u32].index 0field into r400;
    and r399 r400 into r401;
    sub r0[9u32].index r0[2u32].index into r402;
    is.eq r402 0field into r403;
    ternary r403 1field r402 into r404;
    inv r404 into r405;
    mul r0[9u32].index r405 into r406;
    ternary r401 r406 1field into r407;
    mul r398 r407 into r408;
    is.neq 2u8 10u8 into r409;
    is.neq r0[10u32].index 0field into r410;
    and r409 r410 into r411;
    sub r0[10u32].index r0[2u32].index into r412;
    is.eq r412 0field into r413;
    ternary r413 1field r412 into r414;
    inv r414 into r415;
    mul r0[10u32].index r415 into r416;
    ternary r411 r416 1field into r417;
    mul r408 r417 into r418;
    is.neq 2u8 11u8 into r419;
    is.neq r0[11u32].index 0field into r420;
    and r419 r420 into r421;
    sub r0[11u32].index r0[2u32].index into r422;
    is.eq r422 0field into r423;
    ternary r423 1field r422 into r424;
    inv r424 into r425;
    mul r0[11u32].index r425 into r426;
    ternary r421 r426 1field into r427;
    mul r418 r427 into r428;
    is.neq 2u8 12u8 into r429;
    is.neq r0[12u32].index 0field into r430;
    and r429 r430 into r431;
    sub r0[12u32].index r0[2u32].index into r432;
    is.eq r432 0field into r433;
    ternary r433 1field r432 into r434;
    inv r434 into r435;
    mul r0[12u32].index r435 into r436;
    ternary r431 r436 1field into r437;
    mul r428 r437 into r438;
    is.neq 2u8 13u8 into r439;
    is.neq r0[13u32].index 0field into r440;
    and r439 r440 into r441;
    sub r0[13u32].index r0[2u32].index into r442;
    is.eq r442 0field into r443;
    ternary r443 1field r442 into r444;
    inv r444 into r445;
    mul r0[13u32].index r445 into r446;
    ternary r441 r446 1field into r447;
    mul r438 r447 into r448;
    is.neq 2u8 14u8 into r449;
    is.neq r0[14u32].index 0field into r450;
    and r449 r450 into r451;
    sub r0[14u32].index r0[2u32].index into r452;
    is.eq r452 0field into r453;
    ternary r453 1field r452 into r454;
    inv r454 into r455;
    mul r0[14u32].index r455 into r456;
    ternary r451 r456 1field into r457;
    mul r448 r457 into r458;
    is.neq r0[2u32].index 0field into r459;
    mul r0[2u32].share_val r458 into r460;
    ternary r459 r460 0field into r461;
    add r308 r461 into r462;
    is.neq 3u8 0u8 into r463;
    is.neq r0[0u32].index 0field into r464;
    and r463 r464 into r465;
    sub r0[0u32].index r0[3u32].index into r466;
    is.eq r466 0field into r467;
    ternary r467 1field r466 into r468;
    inv r468 into r469;
    mul r0[0u32].index r469 into r470;
    ternary r465 r470 1field into r471;
    mul 1field r471 into r472;
    is.neq 3u8 1u8 into r473;
    is.neq r0[1u32].index 0field into r474;
    and r473 r474 into r475;
    sub r0[1u32].index r0[3u32].index into r476;
    is.eq r476 0field into r477;
    ternary r477 1field r476 into r478;
    inv r478 into r479;
    mul r0[1u32].index r479 into r480;
    ternary r475 r480 1field into r481;
    mul r472 r481 into r482;
    is.neq 3u8 2u8 into r483;
    is.neq r0[2u32].index 0field into r484;
    and r483 r484 into r485;
    sub r0[2u32].index r0[3u32].index into r486;
    is.eq r486 0field into r487;
    ternary r487 1field r486 into r488;
    inv r488 into r489;
    mul r0[2u32].index r489 into r490;
    ternary r485 r490 1field into r491;
    mul r482 r491 into r492;
    is.neq 3u8 3u8 into r493;
    is.neq r0[3u32].index 0field into r494;
    and r493 r494 into r495;
    sub r0[3u32].index r0[3u32].index into r496;
    is.eq r496 0field into r497;
    ternary r497 1field r496 into r498;
    inv r498 into r499;
    mul r0[3u32].index r499 into r500;
    ternary r495 r500 1field into r501;
    mul r492 r501 into r502;
    is.neq 3u8 4u8 into r503;
    is.neq r0[4u32].index 0field into r504;
    and r503 r504 into r505;
    sub r0[4u32].index r0[3u32].index into r506;
    is.eq r506 0field into r507;
    ternary r507 1field r506 into r508;
    inv r508 into r509;
    mul r0[4u32].index r509 into r510;
    ternary r505 r510 1field into r511;
    mul r502 r511 into r512;
    is.neq 3u8 5u8 into r513;
    is.neq r0[5u32].index 0field into r514;
    and r513 r514 into r515;
    sub r0[5u32].index r0[3u32].index into r516;
    is.eq r516 0field into r517;
    ternary r517 1field r516 into r518;
    inv r518 into r519;
    mul r0[5u32].index r519 into r520;
    ternary r515 r520 1field into r521;
    mul r512 r521 into r522;
    is.neq 3u8 6u8 into r523;
    is.neq r0[6u32].index 0field into r524;
    and r523 r524 into r525;
    sub r0[6u32].index r0[3u32].index into r526;
    is.eq r526 0field into r527;
    ternary r527 1field r526 into r528;
    inv r528 into r529;
    mul r0[6u32].index r529 into r530;
    ternary r525 r530 1field into r531;
    mul r522 r531 into r532;
    is.neq 3u8 7u8 into r533;
    is.neq r0[7u32].index 0field into r534;
    and r533 r534 into r535;
    sub r0[7u32].index r0[3u32].index into r536;
    is.eq r536 0field into r537;
    ternary r537 1field r536 into r538;
    inv r538 into r539;
    mul r0[7u32].index r539 into r540;
    ternary r535 r540 1field into r541;
    mul r532 r541 into r542;
    is.neq 3u8 8u8 into r543;
    is.neq r0[8u32].index 0field into r544;
    and r543 r544 into r545;
    sub r0[8u32].index r0[3u32].index into r546;
    is.eq r546 0field into r547;
    ternary r547 1field r546 into r548;
    inv r548 into r549;
    mul r0[8u32].index r549 into r550;
    ternary r545 r550 1field into r551;
    mul r542 r551 into r552;
    is.neq 3u8 9u8 into r553;
    is.neq r0[9u32].index 0field into r554;
    and r553 r554 into r555;
    sub r0[9u32].index r0[3u32].index into r556;
    is.eq r556 0field into r557;
    ternary r557 1field r556 into r558;
    inv r558 into r559;
    mul r0[9u32].index r559 into r560;
    ternary r555 r560 1field into r561;
    mul r552 r561 into r562;
    is.neq 3u8 10u8 into r563;
    is.neq r0[10u32].index 0field into r564;
    and r563 r564 into r565;
    sub r0[10u32].index r0[3u32].index into r566;
    is.eq r566 0field into r567;
    ternary r567 1field r566 into r568;
    inv r568 into r569;
    mul r0[10u32].index r569 into r570;
    ternary r565 r570 1field into r571;
    mul r562 r571 into r572;
    is.neq 3u8 11u8 into r573;
    is.neq r0[11u32].index 0field into r574;
    and r573 r574 into r575;
    sub r0[11u32].index r0[3u32].index into r576;
    is.eq r576 0field into r577;
    ternary r577 1field r576 into r578;
    inv r578 into r579;
    mul r0[11u32].index r579 into r580;
    ternary r575 r580 1field into r581;
    mul r572 r581 into r582;
    is.neq 3u8 12u8 into r583;
    is.neq r0[12u32].index 0field into r584;
    and r583 r584 into r585;
    sub r0[12u32].index r0[3u32].index into r586;
    is.eq r586 0field into r587;
    ternary r587 1field r586 into r588;
    inv r588 into r589;
    mul r0[12u32].index r589 into r590;
    ternary r585 r590 1field into r591;
    mul r582 r591 into r592;
    is.neq 3u8 13u8 into r593;
    is.neq r0[13u32].index 0field into r594;
    and r593 r594 into r595;
    sub r0[13u32].index r0[3u32].index into r596;
    is.eq r596 0field into r597;
    ternary r597 1field r596 into r598;
    inv r598 into r599;
    mul r0[13u32].index r599 into r600;
    ternary r595 r600 1field into r601;
    mul r592 r601 into r602;
    is.neq 3u8 14u8 into r603;
    is.neq r0[14u32].index 0field into r604;
    and r603 r604 into r605;
    sub r0[14u32].index r0[3u32].index into r606;
    is.eq r606 0field into r607;
    ternary r607 1field r606 into r608;
    inv r608 into r609;
    mul r0[14u32].index r609 into r610;
    ternary r605 r610 1field into r611;
    mul r602 r611 into r612;
    is.neq r0[3u32].index 0field into r613;
    mul r0[3u32].share_val r612 into r614;
    ternary r613 r614 0field into r615;
    add r462 r615 into r616;
    is.neq 4u8 0u8 into r617;
    is.neq r0[0u32].index 0field into r618;
    and r617 r618 into r619;
    sub r0[0u32].index r0[4u32].index into r620;
    is.eq r620 0field into r621;
    ternary r621 1field r620 into r622;
    inv r622 into r623;
    mul r0[0u32].index r623 into r624;
    ternary r619 r624 1field into r625;
    mul 1field r625 into r626;
    is.neq 4u8 1u8 into r627;
    is.neq r0[1u32].index 0field into r628;
    and r627 r628 into r629;
    sub r0[1u32].index r0[4u32].index into r630;
    is.eq r630 0field into r631;
    ternary r631 1field r630 into r632;
    inv r632 into r633;
    mul r0[1u32].index r633 into r634;
    ternary r629 r634 1field into r635;
    mul r626 r635 into r636;
    is.neq 4u8 2u8 into r637;
    is.neq r0[2u32].index 0field into r638;
    and r637 r638 into r639;
    sub r0[2u32].index r0[4u32].index into r640;
    is.eq r640 0field into r641;
    ternary r641 1field r640 into r642;
    inv r642 into r643;
    mul r0[2u32].index r643 into r644;
    ternary r639 r644 1field into r645;
    mul r636 r645 into r646;
    is.neq 4u8 3u8 into r647;
    is.neq r0[3u32].index 0field into r648;
    and r647 r648 into r649;
    sub r0[3u32].index r0[4u32].index into r650;
    is.eq r650 0field into r651;
    ternary r651 1field r650 into r652;
    inv r652 into r653;
    mul r0[3u32].index r653 into r654;
    ternary r649 r654 1field into r655;
    mul r646 r655 into r656;
    is.neq 4u8 4u8 into r657;
    is.neq r0[4u32].index 0field into r658;
    and r657 r658 into r659;
    sub r0[4u32].index r0[4u32].index into r660;
    is.eq r660 0field into r661;
    ternary r661 1field r660 into r662;
    inv r662 into r663;
    mul r0[4u32].index r663 into r664;
    ternary r659 r664 1field into r665;
    mul r656 r665 into r666;
    is.neq 4u8 5u8 into r667;
    is.neq r0[5u32].index 0field into r668;
    and r667 r668 into r669;
    sub r0[5u32].index r0[4u32].index into r670;
    is.eq r670 0field into r671;
    ternary r671 1field r670 into r672;
    inv r672 into r673;
    mul r0[5u32].index r673 into r674;
    ternary r669 r674 1field into r675;
    mul r666 r675 into r676;
    is.neq 4u8 6u8 into r677;
    is.neq r0[6u32].index 0field into r678;
    and r677 r678 into r679;
    sub r0[6u32].index r0[4u32].index into r680;
    is.eq r680 0field into r681;
    ternary r681 1field r680 into r682;
    inv r682 into r683;
    mul r0[6u32].index r683 into r684;
    ternary r679 r684 1field into r685;
    mul r676 r685 into r686;
    is.neq 4u8 7u8 into r687;
    is.neq r0[7u32].index 0field into r688;
    and r687 r688 into r689;
    sub r0[7u32].index r0[4u32].index into r690;
    is.eq r690 0field into r691;
    ternary r691 1field r690 into r692;
    inv r692 into r693;
    mul r0[7u32].index r693 into r694;
    ternary r689 r694 1field into r695;
    mul r686 r695 into r696;
    is.neq 4u8 8u8 into r697;
    is.neq r0[8u32].index 0field into r698;
    and r697 r698 into r699;
    sub r0[8u32].index r0[4u32].index into r700;
    is.eq r700 0field into r701;
    ternary r701 1field r700 into r702;
    inv r702 into r703;
    mul r0[8u32].index r703 into r704;
    ternary r699 r704 1field into r705;
    mul r696 r705 into r706;
    is.neq 4u8 9u8 into r707;
    is.neq r0[9u32].index 0field into r708;
    and r707 r708 into r709;
    sub r0[9u32].index r0[4u32].index into r710;
    is.eq r710 0field into r711;
    ternary r711 1field r710 into r712;
    inv r712 into r713;
    mul r0[9u32].index r713 into r714;
    ternary r709 r714 1field into r715;
    mul r706 r715 into r716;
    is.neq 4u8 10u8 into r717;
    is.neq r0[10u32].index 0field into r718;
    and r717 r718 into r719;
    sub r0[10u32].index r0[4u32].index into r720;
    is.eq r720 0field into r721;
    ternary r721 1field r720 into r722;
    inv r722 into r723;
    mul r0[10u32].index r723 into r724;
    ternary r719 r724 1field into r725;
    mul r716 r725 into r726;
    is.neq 4u8 11u8 into r727;
    is.neq r0[11u32].index 0field into r728;
    and r727 r728 into r729;
    sub r0[11u32].index r0[4u32].index into r730;
    is.eq r730 0field into r731;
    ternary r731 1field r730 into r732;
    inv r732 into r733;
    mul r0[11u32].index r733 into r734;
    ternary r729 r734 1field into r735;
    mul r726 r735 into r736;
    is.neq 4u8 12u8 into r737;
    is.neq r0[12u32].index 0field into r738;
    and r737 r738 into r739;
    sub r0[12u32].index r0[4u32].index into r740;
    is.eq r740 0field into r741;
    ternary r741 1field r740 into r742;
    inv r742 into r743;
    mul r0[12u32].index r743 into r744;
    ternary r739 r744 1field into r745;
    mul r736 r745 into r746;
    is.neq 4u8 13u8 into r747;
    is.neq r0[13u32].index 0field into r748;
    and r747 r748 into r749;
    sub r0[13u32].index r0[4u32].index into r750;
    is.eq r750 0field into r751;
    ternary r751 1field r750 into r752;
    inv r752 into r753;
    mul r0[13u32].index r753 into r754;
    ternary r749 r754 1field into r755;
    mul r746 r755 into r756;
    is.neq 4u8 14u8 into r757;
    is.neq r0[14u32].index 0field into r758;
    and r757 r758 into r759;
    sub r0[14u32].index r0[4u32].index into r760;
    is.eq r760 0field into r761;
    ternary r761 1field r760 into r762;
    inv r762 into r763;
    mul r0[14u32].index r763 into r764;
    ternary r759 r764 1field into r765;
    mul r756 r765 into r766;
    is.neq r0[4u32].index 0field into r767;
    mul r0[4u32].share_val r766 into r768;
    ternary r767 r768 0field into r769;
    add r616 r769 into r770;
    is.neq 5u8 0u8 into r771;
    is.neq r0[0u32].index 0field into r772;
    and r771 r772 into r773;
    sub r0[0u32].index r0[5u32].index into r774;
    is.eq r774 0field into r775;
    ternary r775 1field r774 into r776;
    inv r776 into r777;
    mul r0[0u32].index r777 into r778;
    ternary r773 r778 1field into r779;
    mul 1field r779 into r780;
    is.neq 5u8 1u8 into r781;
    is.neq r0[1u32].index 0field into r782;
    and r781 r782 into r783;
    sub r0[1u32].index r0[5u32].index into r784;
    is.eq r784 0field into r785;
    ternary r785 1field r784 into r786;
    inv r786 into r787;
    mul r0[1u32].index r787 into r788;
    ternary r783 r788 1field into r789;
    mul r780 r789 into r790;
    is.neq 5u8 2u8 into r791;
    is.neq r0[2u32].index 0field into r792;
    and r791 r792 into r793;
    sub r0[2u32].index r0[5u32].index into r794;
    is.eq r794 0field into r795;
    ternary r795 1field r794 into r796;
    inv r796 into r797;
    mul r0[2u32].index r797 into r798;
    ternary r793 r798 1field into r799;
    mul r790 r799 into r800;
    is.neq 5u8 3u8 into r801;
    is.neq r0[3u32].index 0field into r802;
    and r801 r802 into r803;
    sub r0[3u32].index r0[5u32].index into r804;
    is.eq r804 0field into r805;
    ternary r805 1field r804 into r806;
    inv r806 into r807;
    mul r0[3u32].index r807 into r808;
    ternary r803 r808 1field into r809;
    mul r800 r809 into r810;
    is.neq 5u8 4u8 into r811;
    is.neq r0[4u32].index 0field into r812;
    and r811 r812 into r813;
    sub r0[4u32].index r0[5u32].index into r814;
    is.eq r814 0field into r815;
    ternary r815 1field r814 into r816;
    inv r816 into r817;
    mul r0[4u32].index r817 into r818;
    ternary r813 r818 1field into r819;
    mul r810 r819 into r820;
    is.neq 5u8 5u8 into r821;
    is.neq r0[5u32].index 0field into r822;
    and r821 r822 into r823;
    sub r0[5u32].index r0[5u32].index into r824;
    is.eq r824 0field into r825;
    ternary r825 1field r824 into r826;
    inv r826 into r827;
    mul r0[5u32].index r827 into r828;
    ternary r823 r828 1field into r829;
    mul r820 r829 into r830;
    is.neq 5u8 6u8 into r831;
    is.neq r0[6u32].index 0field into r832;
    and r831 r832 into r833;
    sub r0[6u32].index r0[5u32].index into r834;
    is.eq r834 0field into r835;
    ternary r835 1field r834 into r836;
    inv r836 into r837;
    mul r0[6u32].index r837 into r838;
    ternary r833 r838 1field into r839;
    mul r830 r839 into r840;
    is.neq 5u8 7u8 into r841;
    is.neq r0[7u32].index 0field into r842;
    and r841 r842 into r843;
    sub r0[7u32].index r0[5u32].index into r844;
    is.eq r844 0field into r845;
    ternary r845 1field r844 into r846;
    inv r846 into r847;
    mul r0[7u32].index r847 into r848;
    ternary r843 r848 1field into r849;
    mul r840 r849 into r850;
    is.neq 5u8 8u8 into r851;
    is.neq r0[8u32].index 0field into r852;
    and r851 r852 into r853;
    sub r0[8u32].index r0[5u32].index into r854;
    is.eq r854 0field into r855;
    ternary r855 1field r854 into r856;
    inv r856 into r857;
    mul r0[8u32].index r857 into r858;
    ternary r853 r858 1field into r859;
    mul r850 r859 into r860;
    is.neq 5u8 9u8 into r861;
    is.neq r0[9u32].index 0field into r862;
    and r861 r862 into r863;
    sub r0[9u32].index r0[5u32].index into r864;
    is.eq r864 0field into r865;
    ternary r865 1field r864 into r866;
    inv r866 into r867;
    mul r0[9u32].index r867 into r868;
    ternary r863 r868 1field into r869;
    mul r860 r869 into r870;
    is.neq 5u8 10u8 into r871;
    is.neq r0[10u32].index 0field into r872;
    and r871 r872 into r873;
    sub r0[10u32].index r0[5u32].index into r874;
    is.eq r874 0field into r875;
    ternary r875 1field r874 into r876;
    inv r876 into r877;
    mul r0[10u32].index r877 into r878;
    ternary r873 r878 1field into r879;
    mul r870 r879 into r880;
    is.neq 5u8 11u8 into r881;
    is.neq r0[11u32].index 0field into r882;
    and r881 r882 into r883;
    sub r0[11u32].index r0[5u32].index into r884;
    is.eq r884 0field into r885;
    ternary r885 1field r884 into r886;
    inv r886 into r887;
    mul r0[11u32].index r887 into r888;
    ternary r883 r888 1field into r889;
    mul r880 r889 into r890;
    is.neq 5u8 12u8 into r891;
    is.neq r0[12u32].index 0field into r892;
    and r891 r892 into r893;
    sub r0[12u32].index r0[5u32].index into r894;
    is.eq r894 0field into r895;
    ternary r895 1field r894 into r896;
    inv r896 into r897;
    mul r0[12u32].index r897 into r898;
    ternary r893 r898 1field into r899;
    mul r890 r899 into r900;
    is.neq 5u8 13u8 into r901;
    is.neq r0[13u32].index 0field into r902;
    and r901 r902 into r903;
    sub r0[13u32].index r0[5u32].index into r904;
    is.eq r904 0field into r905;
    ternary r905 1field r904 into r906;
    inv r906 into r907;
    mul r0[13u32].index r907 into r908;
    ternary r903 r908 1field into r909;
    mul r900 r909 into r910;
    is.neq 5u8 14u8 into r911;
    is.neq r0[14u32].index 0field into r912;
    and r911 r912 into r913;
    sub r0[14u32].index r0[5u32].index into r914;
    is.eq r914 0field into r915;
    ternary r915 1field r914 into r916;
    inv r916 into r917;
    mul r0[14u32].index r917 into r918;
    ternary r913 r918 1field into r919;
    mul r910 r919 into r920;
    is.neq r0[5u32].index 0field into r921;
    mul r0[5u32].share_val r920 into r922;
    ternary r921 r922 0field into r923;
    add r770 r923 into r924;
    is.neq 6u8 0u8 into r925;
    is.neq r0[0u32].index 0field into r926;
    and r925 r926 into r927;
    sub r0[0u32].index r0[6u32].index into r928;
    is.eq r928 0field into r929;
    ternary r929 1field r928 into r930;
    inv r930 into r931;
    mul r0[0u32].index r931 into r932;
    ternary r927 r932 1field into r933;
    mul 1field r933 into r934;
    is.neq 6u8 1u8 into r935;
    is.neq r0[1u32].index 0field into r936;
    and r935 r936 into r937;
    sub r0[1u32].index r0[6u32].index into r938;
    is.eq r938 0field into r939;
    ternary r939 1field r938 into r940;
    inv r940 into r941;
    mul r0[1u32].index r941 into r942;
    ternary r937 r942 1field into r943;
    mul r934 r943 into r944;
    is.neq 6u8 2u8 into r945;
    is.neq r0[2u32].index 0field into r946;
    and r945 r946 into r947;
    sub r0[2u32].index r0[6u32].index into r948;
    is.eq r948 0field into r949;
    ternary r949 1field r948 into r950;
    inv r950 into r951;
    mul r0[2u32].index r951 into r952;
    ternary r947 r952 1field into r953;
    mul r944 r953 into r954;
    is.neq 6u8 3u8 into r955;
    is.neq r0[3u32].index 0field into r956;
    and r955 r956 into r957;
    sub r0[3u32].index r0[6u32].index into r958;
    is.eq r958 0field into r959;
    ternary r959 1field r958 into r960;
    inv r960 into r961;
    mul r0[3u32].index r961 into r962;
    ternary r957 r962 1field into r963;
    mul r954 r963 into r964;
    is.neq 6u8 4u8 into r965;
    is.neq r0[4u32].index 0field into r966;
    and r965 r966 into r967;
    sub r0[4u32].index r0[6u32].index into r968;
    is.eq r968 0field into r969;
    ternary r969 1field r968 into r970;
    inv r970 into r971;
    mul r0[4u32].index r971 into r972;
    ternary r967 r972 1field into r973;
    mul r964 r973 into r974;
    is.neq 6u8 5u8 into r975;
    is.neq r0[5u32].index 0field into r976;
    and r975 r976 into r977;
    sub r0[5u32].index r0[6u32].index into r978;
    is.eq r978 0field into r979;
    ternary r979 1field r978 into r980;
    inv r980 into r981;
    mul r0[5u32].index r981 into r982;
    ternary r977 r982 1field into r983;
    mul r974 r983 into r984;
    is.neq 6u8 6u8 into r985;
    is.neq r0[6u32].index 0field into r986;
    and r985 r986 into r987;
    sub r0[6u32].index r0[6u32].index into r988;
    is.eq r988 0field into r989;
    ternary r989 1field r988 into r990;
    inv r990 into r991;
    mul r0[6u32].index r991 into r992;
    ternary r987 r992 1field into r993;
    mul r984 r993 into r994;
    is.neq 6u8 7u8 into r995;
    is.neq r0[7u32].index 0field into r996;
    and r995 r996 into r997;
    sub r0[7u32].index r0[6u32].index into r998;
    is.eq r998 0field into r999;
    ternary r999 1field r998 into r1000;
    inv r1000 into r1001;
    mul r0[7u32].index r1001 into r1002;
    ternary r997 r1002 1field into r1003;
    mul r994 r1003 into r1004;
    is.neq 6u8 8u8 into r1005;
    is.neq r0[8u32].index 0field into r1006;
    and r1005 r1006 into r1007;
    sub r0[8u32].index r0[6u32].index into r1008;
    is.eq r1008 0field into r1009;
    ternary r1009 1field r1008 into r1010;
    inv r1010 into r1011;
    mul r0[8u32].index r1011 into r1012;
    ternary r1007 r1012 1field into r1013;
    mul r1004 r1013 into r1014;
    is.neq 6u8 9u8 into r1015;
    is.neq r0[9u32].index 0field into r1016;
    and r1015 r1016 into r1017;
    sub r0[9u32].index r0[6u32].index into r1018;
    is.eq r1018 0field into r1019;
    ternary r1019 1field r1018 into r1020;
    inv r1020 into r1021;
    mul r0[9u32].index r1021 into r1022;
    ternary r1017 r1022 1field into r1023;
    mul r1014 r1023 into r1024;
    is.neq 6u8 10u8 into r1025;
    is.neq r0[10u32].index 0field into r1026;
    and r1025 r1026 into r1027;
    sub r0[10u32].index r0[6u32].index into r1028;
    is.eq r1028 0field into r1029;
    ternary r1029 1field r1028 into r1030;
    inv r1030 into r1031;
    mul r0[10u32].index r1031 into r1032;
    ternary r1027 r1032 1field into r1033;
    mul r1024 r1033 into r1034;
    is.neq 6u8 11u8 into r1035;
    is.neq r0[11u32].index 0field into r1036;
    and r1035 r1036 into r1037;
    sub r0[11u32].index r0[6u32].index into r1038;
    is.eq r1038 0field into r1039;
    ternary r1039 1field r1038 into r1040;
    inv r1040 into r1041;
    mul r0[11u32].index r1041 into r1042;
    ternary r1037 r1042 1field into r1043;
    mul r1034 r1043 into r1044;
    is.neq 6u8 12u8 into r1045;
    is.neq r0[12u32].index 0field into r1046;
    and r1045 r1046 into r1047;
    sub r0[12u32].index r0[6u32].index into r1048;
    is.eq r1048 0field into r1049;
    ternary r1049 1field r1048 into r1050;
    inv r1050 into r1051;
    mul r0[12u32].index r1051 into r1052;
    ternary r1047 r1052 1field into r1053;
    mul r1044 r1053 into r1054;
    is.neq 6u8 13u8 into r1055;
    is.neq r0[13u32].index 0field into r1056;
    and r1055 r1056 into r1057;
    sub r0[13u32].index r0[6u32].index into r1058;
    is.eq r1058 0field into r1059;
    ternary r1059 1field r1058 into r1060;
    inv r1060 into r1061;
    mul r0[13u32].index r1061 into r1062;
    ternary r1057 r1062 1field into r1063;
    mul r1054 r1063 into r1064;
    is.neq 6u8 14u8 into r1065;
    is.neq r0[14u32].index 0field into r1066;
    and r1065 r1066 into r1067;
    sub r0[14u32].index r0[6u32].index into r1068;
    is.eq r1068 0field into r1069;
    ternary r1069 1field r1068 into r1070;
    inv r1070 into r1071;
    mul r0[14u32].index r1071 into r1072;
    ternary r1067 r1072 1field into r1073;
    mul r1064 r1073 into r1074;
    is.neq r0[6u32].index 0field into r1075;
    mul r0[6u32].share_val r1074 into r1076;
    ternary r1075 r1076 0field into r1077;
    add r924 r1077 into r1078;
    is.neq 7u8 0u8 into r1079;
    is.neq r0[0u32].index 0field into r1080;
    and r1079 r1080 into r1081;
    sub r0[0u32].index r0[7u32].index into r1082;
    is.eq r1082 0field into r1083;
    ternary r1083 1field r1082 into r1084;
    inv r1084 into r1085;
    mul r0[0u32].index r1085 into r1086;
    ternary r1081 r1086 1field into r1087;
    mul 1field r1087 into r1088;
    is.neq 7u8 1u8 into r1089;
    is.neq r0[1u32].index 0field into r1090;
    and r1089 r1090 into r1091;
    sub r0[1u32].index r0[7u32].index into r1092;
    is.eq r1092 0field into r1093;
    ternary r1093 1field r1092 into r1094;
    inv r1094 into r1095;
    mul r0[1u32].index r1095 into r1096;
    ternary r1091 r1096 1field into r1097;
    mul r1088 r1097 into r1098;
    is.neq 7u8 2u8 into r1099;
    is.neq r0[2u32].index 0field into r1100;
    and r1099 r1100 into r1101;
    sub r0[2u32].index r0[7u32].index into r1102;
    is.eq r1102 0field into r1103;
    ternary r1103 1field r1102 into r1104;
    inv r1104 into r1105;
    mul r0[2u32].index r1105 into r1106;
    ternary r1101 r1106 1field into r1107;
    mul r1098 r1107 into r1108;
    is.neq 7u8 3u8 into r1109;
    is.neq r0[3u32].index 0field into r1110;
    and r1109 r1110 into r1111;
    sub r0[3u32].index r0[7u32].index into r1112;
    is.eq r1112 0field into r1113;
    ternary r1113 1field r1112 into r1114;
    inv r1114 into r1115;
    mul r0[3u32].index r1115 into r1116;
    ternary r1111 r1116 1field into r1117;
    mul r1108 r1117 into r1118;
    is.neq 7u8 4u8 into r1119;
    is.neq r0[4u32].index 0field into r1120;
    and r1119 r1120 into r1121;
    sub r0[4u32].index r0[7u32].index into r1122;
    is.eq r1122 0field into r1123;
    ternary r1123 1field r1122 into r1124;
    inv r1124 into r1125;
    mul r0[4u32].index r1125 into r1126;
    ternary r1121 r1126 1field into r1127;
    mul r1118 r1127 into r1128;
    is.neq 7u8 5u8 into r1129;
    is.neq r0[5u32].index 0field into r1130;
    and r1129 r1130 into r1131;
    sub r0[5u32].index r0[7u32].index into r1132;
    is.eq r1132 0field into r1133;
    ternary r1133 1field r1132 into r1134;
    inv r1134 into r1135;
    mul r0[5u32].index r1135 into r1136;
    ternary r1131 r1136 1field into r1137;
    mul r1128 r1137 into r1138;
    is.neq 7u8 6u8 into r1139;
    is.neq r0[6u32].index 0field into r1140;
    and r1139 r1140 into r1141;
    sub r0[6u32].index r0[7u32].index into r1142;
    is.eq r1142 0field into r1143;
    ternary r1143 1field r1142 into r1144;
    inv r1144 into r1145;
    mul r0[6u32].index r1145 into r1146;
    ternary r1141 r1146 1field into r1147;
    mul r1138 r1147 into r1148;
    is.neq 7u8 7u8 into r1149;
    is.neq r0[7u32].index 0field into r1150;
    and r1149 r1150 into r1151;
    sub r0[7u32].index r0[7u32].index into r1152;
    is.eq r1152 0field into r1153;
    ternary r1153 1field r1152 into r1154;
    inv r1154 into r1155;
    mul r0[7u32].index r1155 into r1156;
    ternary r1151 r1156 1field into r1157;
    mul r1148 r1157 into r1158;
    is.neq 7u8 8u8 into r1159;
    is.neq r0[8u32].index 0field into r1160;
    and r1159 r1160 into r1161;
    sub r0[8u32].index r0[7u32].index into r1162;
    is.eq r1162 0field into r1163;
    ternary r1163 1field r1162 into r1164;
    inv r1164 into r1165;
    mul r0[8u32].index r1165 into r1166;
    ternary r1161 r1166 1field into r1167;
    mul r1158 r1167 into r1168;
    is.neq 7u8 9u8 into r1169;
    is.neq r0[9u32].index 0field into r1170;
    and r1169 r1170 into r1171;
    sub r0[9u32].index r0[7u32].index into r1172;
    is.eq r1172 0field into r1173;
    ternary r1173 1field r1172 into r1174;
    inv r1174 into r1175;
    mul r0[9u32].index r1175 into r1176;
    ternary r1171 r1176 1field into r1177;
    mul r1168 r1177 into r1178;
    is.neq 7u8 10u8 into r1179;
    is.neq r0[10u32].index 0field into r1180;
    and r1179 r1180 into r1181;
    sub r0[10u32].index r0[7u32].index into r1182;
    is.eq r1182 0field into r1183;
    ternary r1183 1field r1182 into r1184;
    inv r1184 into r1185;
    mul r0[10u32].index r1185 into r1186;
    ternary r1181 r1186 1field into r1187;
    mul r1178 r1187 into r1188;
    is.neq 7u8 11u8 into r1189;
    is.neq r0[11u32].index 0field into r1190;
    and r1189 r1190 into r1191;
    sub r0[11u32].index r0[7u32].index into r1192;
    is.eq r1192 0field into r1193;
    ternary r1193 1field r1192 into r1194;
    inv r1194 into r1195;
    mul r0[11u32].index r1195 into r1196;
    ternary r1191 r1196 1field into r1197;
    mul r1188 r1197 into r1198;
    is.neq 7u8 12u8 into r1199;
    is.neq r0[12u32].index 0field into r1200;
    and r1199 r1200 into r1201;
    sub r0[12u32].index r0[7u32].index into r1202;
    is.eq r1202 0field into r1203;
    ternary r1203 1field r1202 into r1204;
    inv r1204 into r1205;
    mul r0[12u32].index r1205 into r1206;
    ternary r1201 r1206 1field into r1207;
    mul r1198 r1207 into r1208;
    is.neq 7u8 13u8 into r1209;
    is.neq r0[13u32].index 0field into r1210;
    and r1209 r1210 into r1211;
    sub r0[13u32].index r0[7u32].index into r1212;
    is.eq r1212 0field into r1213;
    ternary r1213 1field r1212 into r1214;
    inv r1214 into r1215;
    mul r0[13u32].index r1215 into r1216;
    ternary r1211 r1216 1field into r1217;
    mul r1208 r1217 into r1218;
    is.neq 7u8 14u8 into r1219;
    is.neq r0[14u32].index 0field into r1220;
    and r1219 r1220 into r1221;
    sub r0[14u32].index r0[7u32].index into r1222;
    is.eq r1222 0field into r1223;
    ternary r1223 1field r1222 into r1224;
    inv r1224 into r1225;
    mul r0[14u32].index r1225 into r1226;
    ternary r1221 r1226 1field into r1227;
    mul r1218 r1227 into r1228;
    is.neq r0[7u32].index 0field into r1229;
    mul r0[7u32].share_val r1228 into r1230;
    ternary r1229 r1230 0field into r1231;
    add r1078 r1231 into r1232;
    is.neq 8u8 0u8 into r1233;
    is.neq r0[0u32].index 0field into r1234;
    and r1233 r1234 into r1235;
    sub r0[0u32].index r0[8u32].index into r1236;
    is.eq r1236 0field into r1237;
    ternary r1237 1field r1236 into r1238;
    inv r1238 into r1239;
    mul r0[0u32].index r1239 into r1240;
    ternary r1235 r1240 1field into r1241;
    mul 1field r1241 into r1242;
    is.neq 8u8 1u8 into r1243;
    is.neq r0[1u32].index 0field into r1244;
    and r1243 r1244 into r1245;
    sub r0[1u32].index r0[8u32].index into r1246;
    is.eq r1246 0field into r1247;
    ternary r1247 1field r1246 into r1248;
    inv r1248 into r1249;
    mul r0[1u32].index r1249 into r1250;
    ternary r1245 r1250 1field into r1251;
    mul r1242 r1251 into r1252;
    is.neq 8u8 2u8 into r1253;
    is.neq r0[2u32].index 0field into r1254;
    and r1253 r1254 into r1255;
    sub r0[2u32].index r0[8u32].index into r1256;
    is.eq r1256 0field into r1257;
    ternary r1257 1field r1256 into r1258;
    inv r1258 into r1259;
    mul r0[2u32].index r1259 into r1260;
    ternary r1255 r1260 1field into r1261;
    mul r1252 r1261 into r1262;
    is.neq 8u8 3u8 into r1263;
    is.neq r0[3u32].index 0field into r1264;
    and r1263 r1264 into r1265;
    sub r0[3u32].index r0[8u32].index into r1266;
    is.eq r1266 0field into r1267;
    ternary r1267 1field r1266 into r1268;
    inv r1268 into r1269;
    mul r0[3u32].index r1269 into r1270;
    ternary r1265 r1270 1field into r1271;
    mul r1262 r1271 into r1272;
    is.neq 8u8 4u8 into r1273;
    is.neq r0[4u32].index 0field into r1274;
    and r1273 r1274 into r1275;
    sub r0[4u32].index r0[8u32].index into r1276;
    is.eq r1276 0field into r1277;
    ternary r1277 1field r1276 into r1278;
    inv r1278 into r1279;
    mul r0[4u32].index r1279 into r1280;
    ternary r1275 r1280 1field into r1281;
    mul r1272 r1281 into r1282;
    is.neq 8u8 5u8 into r1283;
    is.neq r0[5u32].index 0field into r1284;
    and r1283 r1284 into r1285;
    sub r0[5u32].index r0[8u32].index into r1286;
    is.eq r1286 0field into r1287;
    ternary r1287 1field r1286 into r1288;
    inv r1288 into r1289;
    mul r0[5u32].index r1289 into r1290;
    ternary r1285 r1290 1field into r1291;
    mul r1282 r1291 into r1292;
    is.neq 8u8 6u8 into r1293;
    is.neq r0[6u32].index 0field into r1294;
    and r1293 r1294 into r1295;
    sub r0[6u32].index r0[8u32].index into r1296;
    is.eq r1296 0field into r1297;
    ternary r1297 1field r1296 into r1298;
    inv r1298 into r1299;
    mul r0[6u32].index r1299 into r1300;
    ternary r1295 r1300 1field into r1301;
    mul r1292 r1301 into r1302;
    is.neq 8u8 7u8 into r1303;
    is.neq r0[7u32].index 0field into r1304;
    and r1303 r1304 into r1305;
    sub r0[7u32].index r0[8u32].index into r1306;
    is.eq r1306 0field into r1307;
    ternary r1307 1field r1306 into r1308;
    inv r1308 into r1309;
    mul r0[7u32].index r1309 into r1310;
    ternary r1305 r1310 1field into r1311;
    mul r1302 r1311 into r1312;
    is.neq 8u8 8u8 into r1313;
    is.neq r0[8u32].index 0field into r1314;
    and r1313 r1314 into r1315;
    sub r0[8u32].index r0[8u32].index into r1316;
    is.eq r1316 0field into r1317;
    ternary r1317 1field r1316 into r1318;
    inv r1318 into r1319;
    mul r0[8u32].index r1319 into r1320;
    ternary r1315 r1320 1field into r1321;
    mul r1312 r1321 into r1322;
    is.neq 8u8 9u8 into r1323;
    is.neq r0[9u32].index 0field into r1324;
    and r1323 r1324 into r1325;
    sub r0[9u32].index r0[8u32].index into r1326;
    is.eq r1326 0field into r1327;
    ternary r1327 1field r1326 into r1328;
    inv r1328 into r1329;
    mul r0[9u32].index r1329 into r1330;
    ternary r1325 r1330 1field into r1331;
    mul r1322 r1331 into r1332;
    is.neq 8u8 10u8 into r1333;
    is.neq r0[10u32].index 0field into r1334;
    and r1333 r1334 into r1335;
    sub r0[10u32].index r0[8u32].index into r1336;
    is.eq r1336 0field into r1337;
    ternary r1337 1field r1336 into r1338;
    inv r1338 into r1339;
    mul r0[10u32].index r1339 into r1340;
    ternary r1335 r1340 1field into r1341;
    mul r1332 r1341 into r1342;
    is.neq 8u8 11u8 into r1343;
    is.neq r0[11u32].index 0field into r1344;
    and r1343 r1344 into r1345;
    sub r0[11u32].index r0[8u32].index into r1346;
    is.eq r1346 0field into r1347;
    ternary r1347 1field r1346 into r1348;
    inv r1348 into r1349;
    mul r0[11u32].index r1349 into r1350;
    ternary r1345 r1350 1field into r1351;
    mul r1342 r1351 into r1352;
    is.neq 8u8 12u8 into r1353;
    is.neq r0[12u32].index 0field into r1354;
    and r1353 r1354 into r1355;
    sub r0[12u32].index r0[8u32].index into r1356;
    is.eq r1356 0field into r1357;
    ternary r1357 1field r1356 into r1358;
    inv r1358 into r1359;
    mul r0[12u32].index r1359 into r1360;
    ternary r1355 r1360 1field into r1361;
    mul r1352 r1361 into r1362;
    is.neq 8u8 13u8 into r1363;
    is.neq r0[13u32].index 0field into r1364;
    and r1363 r1364 into r1365;
    sub r0[13u32].index r0[8u32].index into r1366;
    is.eq r1366 0field into r1367;
    ternary r1367 1field r1366 into r1368;
    inv r1368 into r1369;
    mul r0[13u32].index r1369 into r1370;
    ternary r1365 r1370 1field into r1371;
    mul r1362 r1371 into r1372;
    is.neq 8u8 14u8 into r1373;
    is.neq r0[14u32].index 0field into r1374;
    and r1373 r1374 into r1375;
    sub r0[14u32].index r0[8u32].index into r1376;
    is.eq r1376 0field into r1377;
    ternary r1377 1field r1376 into r1378;
    inv r1378 into r1379;
    mul r0[14u32].index r1379 into r1380;
    ternary r1375 r1380 1field into r1381;
    mul r1372 r1381 into r1382;
    is.neq r0[8u32].index 0field into r1383;
    mul r0[8u32].share_val r1382 into r1384;
    ternary r1383 r1384 0field into r1385;
    add r1232 r1385 into r1386;
    is.neq 9u8 0u8 into r1387;
    is.neq r0[0u32].index 0field into r1388;
    and r1387 r1388 into r1389;
    sub r0[0u32].index r0[9u32].index into r1390;
    is.eq r1390 0field into r1391;
    ternary r1391 1field r1390 into r1392;
    inv r1392 into r1393;
    mul r0[0u32].index r1393 into r1394;
    ternary r1389 r1394 1field into r1395;
    mul 1field r1395 into r1396;
    is.neq 9u8 1u8 into r1397;
    is.neq r0[1u32].index 0field into r1398;
    and r1397 r1398 into r1399;
    sub r0[1u32].index r0[9u32].index into r1400;
    is.eq r1400 0field into r1401;
    ternary r1401 1field r1400 into r1402;
    inv r1402 into r1403;
    mul r0[1u32].index r1403 into r1404;
    ternary r1399 r1404 1field into r1405;
    mul r1396 r1405 into r1406;
    is.neq 9u8 2u8 into r1407;
    is.neq r0[2u32].index 0field into r1408;
    and r1407 r1408 into r1409;
    sub r0[2u32].index r0[9u32].index into r1410;
    is.eq r1410 0field into r1411;
    ternary r1411 1field r1410 into r1412;
    inv r1412 into r1413;
    mul r0[2u32].index r1413 into r1414;
    ternary r1409 r1414 1field into r1415;
    mul r1406 r1415 into r1416;
    is.neq 9u8 3u8 into r1417;
    is.neq r0[3u32].index 0field into r1418;
    and r1417 r1418 into r1419;
    sub r0[3u32].index r0[9u32].index into r1420;
    is.eq r1420 0field into r1421;
    ternary r1421 1field r1420 into r1422;
    inv r1422 into r1423;
    mul r0[3u32].index r1423 into r1424;
    ternary r1419 r1424 1field into r1425;
    mul r1416 r1425 into r1426;
    is.neq 9u8 4u8 into r1427;
    is.neq r0[4u32].index 0field into r1428;
    and r1427 r1428 into r1429;
    sub r0[4u32].index r0[9u32].index into r1430;
    is.eq r1430 0field into r1431;
    ternary r1431 1field r1430 into r1432;
    inv r1432 into r1433;
    mul r0[4u32].index r1433 into r1434;
    ternary r1429 r1434 1field into r1435;
    mul r1426 r1435 into r1436;
    is.neq 9u8 5u8 into r1437;
    is.neq r0[5u32].index 0field into r1438;
    and r1437 r1438 into r1439;
    sub r0[5u32].index r0[9u32].index into r1440;
    is.eq r1440 0field into r1441;
    ternary r1441 1field r1440 into r1442;
    inv r1442 into r1443;
    mul r0[5u32].index r1443 into r1444;
    ternary r1439 r1444 1field into r1445;
    mul r1436 r1445 into r1446;
    is.neq 9u8 6u8 into r1447;
    is.neq r0[6u32].index 0field into r1448;
    and r1447 r1448 into r1449;
    sub r0[6u32].index r0[9u32].index into r1450;
    is.eq r1450 0field into r1451;
    ternary r1451 1field r1450 into r1452;
    inv r1452 into r1453;
    mul r0[6u32].index r1453 into r1454;
    ternary r1449 r1454 1field into r1455;
    mul r1446 r1455 into r1456;
    is.neq 9u8 7u8 into r1457;
    is.neq r0[7u32].index 0field into r1458;
    and r1457 r1458 into r1459;
    sub r0[7u32].index r0[9u32].index into r1460;
    is.eq r1460 0field into r1461;
    ternary r1461 1field r1460 into r1462;
    inv r1462 into r1463;
    mul r0[7u32].index r1463 into r1464;
    ternary r1459 r1464 1field into r1465;
    mul r1456 r1465 into r1466;
    is.neq 9u8 8u8 into r1467;
    is.neq r0[8u32].index 0field into r1468;
    and r1467 r1468 into r1469;
    sub r0[8u32].index r0[9u32].index into r1470;
    is.eq r1470 0field into r1471;
    ternary r1471 1field r1470 into r1472;
    inv r1472 into r1473;
    mul r0[8u32].index r1473 into r1474;
    ternary r1469 r1474 1field into r1475;
    mul r1466 r1475 into r1476;
    is.neq 9u8 9u8 into r1477;
    is.neq r0[9u32].index 0field into r1478;
    and r1477 r1478 into r1479;
    sub r0[9u32].index r0[9u32].index into r1480;
    is.eq r1480 0field into r1481;
    ternary r1481 1field r1480 into r1482;
    inv r1482 into r1483;
    mul r0[9u32].index r1483 into r1484;
    ternary r1479 r1484 1field into r1485;
    mul r1476 r1485 into r1486;
    is.neq 9u8 10u8 into r1487;
    is.neq r0[10u32].index 0field into r1488;
    and r1487 r1488 into r1489;
    sub r0[10u32].index r0[9u32].index into r1490;
    is.eq r1490 0field into r1491;
    ternary r1491 1field r1490 into r1492;
    inv r1492 into r1493;
    mul r0[10u32].index r1493 into r1494;
    ternary r1489 r1494 1field into r1495;
    mul r1486 r1495 into r1496;
    is.neq 9u8 11u8 into r1497;
    is.neq r0[11u32].index 0field into r1498;
    and r1497 r1498 into r1499;
    sub r0[11u32].index r0[9u32].index into r1500;
    is.eq r1500 0field into r1501;
    ternary r1501 1field r1500 into r1502;
    inv r1502 into r1503;
    mul r0[11u32].index r1503 into r1504;
    ternary r1499 r1504 1field into r1505;
    mul r1496 r1505 into r1506;
    is.neq 9u8 12u8 into r1507;
    is.neq r0[12u32].index 0field into r1508;
    and r1507 r1508 into r1509;
    sub r0[12u32].index r0[9u32].index into r1510;
    is.eq r1510 0field into r1511;
    ternary r1511 1field r1510 into r1512;
    inv r1512 into r1513;
    mul r0[12u32].index r1513 into r1514;
    ternary r1509 r1514 1field into r1515;
    mul r1506 r1515 into r1516;
    is.neq 9u8 13u8 into r1517;
    is.neq r0[13u32].index 0field into r1518;
    and r1517 r1518 into r1519;
    sub r0[13u32].index r0[9u32].index into r1520;
    is.eq r1520 0field into r1521;
    ternary r1521 1field r1520 into r1522;
    inv r1522 into r1523;
    mul r0[13u32].index r1523 into r1524;
    ternary r1519 r1524 1field into r1525;
    mul r1516 r1525 into r1526;
    is.neq 9u8 14u8 into r1527;
    is.neq r0[14u32].index 0field into r1528;
    and r1527 r1528 into r1529;
    sub r0[14u32].index r0[9u32].index into r1530;
    is.eq r1530 0field into r1531;
    ternary r1531 1field r1530 into r1532;
    inv r1532 into r1533;
    mul r0[14u32].index r1533 into r1534;
    ternary r1529 r1534 1field into r1535;
    mul r1526 r1535 into r1536;
    is.neq r0[9u32].index 0field into r1537;
    mul r0[9u32].share_val r1536 into r1538;
    ternary r1537 r1538 0field into r1539;
    add r1386 r1539 into r1540;
    is.neq 10u8 0u8 into r1541;
    is.neq r0[0u32].index 0field into r1542;
    and r1541 r1542 into r1543;
    sub r0[0u32].index r0[10u32].index into r1544;
    is.eq r1544 0field into r1545;
    ternary r1545 1field r1544 into r1546;
    inv r1546 into r1547;
    mul r0[0u32].index r1547 into r1548;
    ternary r1543 r1548 1field into r1549;
    mul 1field r1549 into r1550;
    is.neq 10u8 1u8 into r1551;
    is.neq r0[1u32].index 0field into r1552;
    and r1551 r1552 into r1553;
    sub r0[1u32].index r0[10u32].index into r1554;
    is.eq r1554 0field into r1555;
    ternary r1555 1field r1554 into r1556;
    inv r1556 into r1557;
    mul r0[1u32].index r1557 into r1558;
    ternary r1553 r1558 1field into r1559;
    mul r1550 r1559 into r1560;
    is.neq 10u8 2u8 into r1561;
    is.neq r0[2u32].index 0field into r1562;
    and r1561 r1562 into r1563;
    sub r0[2u32].index r0[10u32].index into r1564;
    is.eq r1564 0field into r1565;
    ternary r1565 1field r1564 into r1566;
    inv r1566 into r1567;
    mul r0[2u32].index r1567 into r1568;
    ternary r1563 r1568 1field into r1569;
    mul r1560 r1569 into r1570;
    is.neq 10u8 3u8 into r1571;
    is.neq r0[3u32].index 0field into r1572;
    and r1571 r1572 into r1573;
    sub r0[3u32].index r0[10u32].index into r1574;
    is.eq r1574 0field into r1575;
    ternary r1575 1field r1574 into r1576;
    inv r1576 into r1577;
    mul r0[3u32].index r1577 into r1578;
    ternary r1573 r1578 1field into r1579;
    mul r1570 r1579 into r1580;
    is.neq 10u8 4u8 into r1581;
    is.neq r0[4u32].index 0field into r1582;
    and r1581 r1582 into r1583;
    sub r0[4u32].index r0[10u32].index into r1584;
    is.eq r1584 0field into r1585;
    ternary r1585 1field r1584 into r1586;
    inv r1586 into r1587;
    mul r0[4u32].index r1587 into r1588;
    ternary r1583 r1588 1field into r1589;
    mul r1580 r1589 into r1590;
    is.neq 10u8 5u8 into r1591;
    is.neq r0[5u32].index 0field into r1592;
    and r1591 r1592 into r1593;
    sub r0[5u32].index r0[10u32].index into r1594;
    is.eq r1594 0field into r1595;
    ternary r1595 1field r1594 into r1596;
    inv r1596 into r1597;
    mul r0[5u32].index r1597 into r1598;
    ternary r1593 r1598 1field into r1599;
    mul r1590 r1599 into r1600;
    is.neq 10u8 6u8 into r1601;
    is.neq r0[6u32].index 0field into r1602;
    and r1601 r1602 into r1603;
    sub r0[6u32].index r0[10u32].index into r1604;
    is.eq r1604 0field into r1605;
    ternary r1605 1field r1604 into r1606;
    inv r1606 into r1607;
    mul r0[6u32].index r1607 into r1608;
    ternary r1603 r1608 1field into r1609;
    mul r1600 r1609 into r1610;
    is.neq 10u8 7u8 into r1611;
    is.neq r0[7u32].index 0field into r1612;
    and r1611 r1612 into r1613;
    sub r0[7u32].index r0[10u32].index into r1614;
    is.eq r1614 0field into r1615;
    ternary r1615 1field r1614 into r1616;
    inv r1616 into r1617;
    mul r0[7u32].index r1617 into r1618;
    ternary r1613 r1618 1field into r1619;
    mul r1610 r1619 into r1620;
    is.neq 10u8 8u8 into r1621;
    is.neq r0[8u32].index 0field into r1622;
    and r1621 r1622 into r1623;
    sub r0[8u32].index r0[10u32].index into r1624;
    is.eq r1624 0field into r1625;
    ternary r1625 1field r1624 into r1626;
    inv r1626 into r1627;
    mul r0[8u32].index r1627 into r1628;
    ternary r1623 r1628 1field into r1629;
    mul r1620 r1629 into r1630;
    is.neq 10u8 9u8 into r1631;
    is.neq r0[9u32].index 0field into r1632;
    and r1631 r1632 into r1633;
    sub r0[9u32].index r0[10u32].index into r1634;
    is.eq r1634 0field into r1635;
    ternary r1635 1field r1634 into r1636;
    inv r1636 into r1637;
    mul r0[9u32].index r1637 into r1638;
    ternary r1633 r1638 1field into r1639;
    mul r1630 r1639 into r1640;
    is.neq 10u8 10u8 into r1641;
    is.neq r0[10u32].index 0field into r1642;
    and r1641 r1642 into r1643;
    sub r0[10u32].index r0[10u32].index into r1644;
    is.eq r1644 0field into r1645;
    ternary r1645 1field r1644 into r1646;
    inv r1646 into r1647;
    mul r0[10u32].index r1647 into r1648;
    ternary r1643 r1648 1field into r1649;
    mul r1640 r1649 into r1650;
    is.neq 10u8 11u8 into r1651;
    is.neq r0[11u32].index 0field into r1652;
    and r1651 r1652 into r1653;
    sub r0[11u32].index r0[10u32].index into r1654;
    is.eq r1654 0field into r1655;
    ternary r1655 1field r1654 into r1656;
    inv r1656 into r1657;
    mul r0[11u32].index r1657 into r1658;
    ternary r1653 r1658 1field into r1659;
    mul r1650 r1659 into r1660;
    is.neq 10u8 12u8 into r1661;
    is.neq r0[12u32].index 0field into r1662;
    and r1661 r1662 into r1663;
    sub r0[12u32].index r0[10u32].index into r1664;
    is.eq r1664 0field into r1665;
    ternary r1665 1field r1664 into r1666;
    inv r1666 into r1667;
    mul r0[12u32].index r1667 into r1668;
    ternary r1663 r1668 1field into r1669;
    mul r1660 r1669 into r1670;
    is.neq 10u8 13u8 into r1671;
    is.neq r0[13u32].index 0field into r1672;
    and r1671 r1672 into r1673;
    sub r0[13u32].index r0[10u32].index into r1674;
    is.eq r1674 0field into r1675;
    ternary r1675 1field r1674 into r1676;
    inv r1676 into r1677;
    mul r0[13u32].index r1677 into r1678;
    ternary r1673 r1678 1field into r1679;
    mul r1670 r1679 into r1680;
    is.neq 10u8 14u8 into r1681;
    is.neq r0[14u32].index 0field into r1682;
    and r1681 r1682 into r1683;
    sub r0[14u32].index r0[10u32].index into r1684;
    is.eq r1684 0field into r1685;
    ternary r1685 1field r1684 into r1686;
    inv r1686 into r1687;
    mul r0[14u32].index r1687 into r1688;
    ternary r1683 r1688 1field into r1689;
    mul r1680 r1689 into r1690;
    is.neq r0[10u32].index 0field into r1691;
    mul r0[10u32].share_val r1690 into r1692;
    ternary r1691 r1692 0field into r1693;
    add r1540 r1693 into r1694;
    is.neq 11u8 0u8 into r1695;
    is.neq r0[0u32].index 0field into r1696;
    and r1695 r1696 into r1697;
    sub r0[0u32].index r0[11u32].index into r1698;
    is.eq r1698 0field into r1699;
    ternary r1699 1field r1698 into r1700;
    inv r1700 into r1701;
    mul r0[0u32].index r1701 into r1702;
    ternary r1697 r1702 1field into r1703;
    mul 1field r1703 into r1704;
    is.neq 11u8 1u8 into r1705;
    is.neq r0[1u32].index 0field into r1706;
    and r1705 r1706 into r1707;
    sub r0[1u32].index r0[11u32].index into r1708;
    is.eq r1708 0field into r1709;
    ternary r1709 1field r1708 into r1710;
    inv r1710 into r1711;
    mul r0[1u32].index r1711 into r1712;
    ternary r1707 r1712 1field into r1713;
    mul r1704 r1713 into r1714;
    is.neq 11u8 2u8 into r1715;
    is.neq r0[2u32].index 0field into r1716;
    and r1715 r1716 into r1717;
    sub r0[2u32].index r0[11u32].index into r1718;
    is.eq r1718 0field into r1719;
    ternary r1719 1field r1718 into r1720;
    inv r1720 into r1721;
    mul r0[2u32].index r1721 into r1722;
    ternary r1717 r1722 1field into r1723;
    mul r1714 r1723 into r1724;
    is.neq 11u8 3u8 into r1725;
    is.neq r0[3u32].index 0field into r1726;
    and r1725 r1726 into r1727;
    sub r0[3u32].index r0[11u32].index into r1728;
    is.eq r1728 0field into r1729;
    ternary r1729 1field r1728 into r1730;
    inv r1730 into r1731;
    mul r0[3u32].index r1731 into r1732;
    ternary r1727 r1732 1field into r1733;
    mul r1724 r1733 into r1734;
    is.neq 11u8 4u8 into r1735;
    is.neq r0[4u32].index 0field into r1736;
    and r1735 r1736 into r1737;
    sub r0[4u32].index r0[11u32].index into r1738;
    is.eq r1738 0field into r1739;
    ternary r1739 1field r1738 into r1740;
    inv r1740 into r1741;
    mul r0[4u32].index r1741 into r1742;
    ternary r1737 r1742 1field into r1743;
    mul r1734 r1743 into r1744;
    is.neq 11u8 5u8 into r1745;
    is.neq r0[5u32].index 0field into r1746;
    and r1745 r1746 into r1747;
    sub r0[5u32].index r0[11u32].index into r1748;
    is.eq r1748 0field into r1749;
    ternary r1749 1field r1748 into r1750;
    inv r1750 into r1751;
    mul r0[5u32].index r1751 into r1752;
    ternary r1747 r1752 1field into r1753;
    mul r1744 r1753 into r1754;
    is.neq 11u8 6u8 into r1755;
    is.neq r0[6u32].index 0field into r1756;
    and r1755 r1756 into r1757;
    sub r0[6u32].index r0[11u32].index into r1758;
    is.eq r1758 0field into r1759;
    ternary r1759 1field r1758 into r1760;
    inv r1760 into r1761;
    mul r0[6u32].index r1761 into r1762;
    ternary r1757 r1762 1field into r1763;
    mul r1754 r1763 into r1764;
    is.neq 11u8 7u8 into r1765;
    is.neq r0[7u32].index 0field into r1766;
    and r1765 r1766 into r1767;
    sub r0[7u32].index r0[11u32].index into r1768;
    is.eq r1768 0field into r1769;
    ternary r1769 1field r1768 into r1770;
    inv r1770 into r1771;
    mul r0[7u32].index r1771 into r1772;
    ternary r1767 r1772 1field into r1773;
    mul r1764 r1773 into r1774;
    is.neq 11u8 8u8 into r1775;
    is.neq r0[8u32].index 0field into r1776;
    and r1775 r1776 into r1777;
    sub r0[8u32].index r0[11u32].index into r1778;
    is.eq r1778 0field into r1779;
    ternary r1779 1field r1778 into r1780;
    inv r1780 into r1781;
    mul r0[8u32].index r1781 into r1782;
    ternary r1777 r1782 1field into r1783;
    mul r1774 r1783 into r1784;
    is.neq 11u8 9u8 into r1785;
    is.neq r0[9u32].index 0field into r1786;
    and r1785 r1786 into r1787;
    sub r0[9u32].index r0[11u32].index into r1788;
    is.eq r1788 0field into r1789;
    ternary r1789 1field r1788 into r1790;
    inv r1790 into r1791;
    mul r0[9u32].index r1791 into r1792;
    ternary r1787 r1792 1field into r1793;
    mul r1784 r1793 into r1794;
    is.neq 11u8 10u8 into r1795;
    is.neq r0[10u32].index 0field into r1796;
    and r1795 r1796 into r1797;
    sub r0[10u32].index r0[11u32].index into r1798;
    is.eq r1798 0field into r1799;
    ternary r1799 1field r1798 into r1800;
    inv r1800 into r1801;
    mul r0[10u32].index r1801 into r1802;
    ternary r1797 r1802 1field into r1803;
    mul r1794 r1803 into r1804;
    is.neq 11u8 11u8 into r1805;
    is.neq r0[11u32].index 0field into r1806;
    and r1805 r1806 into r1807;
    sub r0[11u32].index r0[11u32].index into r1808;
    is.eq r1808 0field into r1809;
    ternary r1809 1field r1808 into r1810;
    inv r1810 into r1811;
    mul r0[11u32].index r1811 into r1812;
    ternary r1807 r1812 1field into r1813;
    mul r1804 r1813 into r1814;
    is.neq 11u8 12u8 into r1815;
    is.neq r0[12u32].index 0field into r1816;
    and r1815 r1816 into r1817;
    sub r0[12u32].index r0[11u32].index into r1818;
    is.eq r1818 0field into r1819;
    ternary r1819 1field r1818 into r1820;
    inv r1820 into r1821;
    mul r0[12u32].index r1821 into r1822;
    ternary r1817 r1822 1field into r1823;
    mul r1814 r1823 into r1824;
    is.neq 11u8 13u8 into r1825;
    is.neq r0[13u32].index 0field into r1826;
    and r1825 r1826 into r1827;
    sub r0[13u32].index r0[11u32].index into r1828;
    is.eq r1828 0field into r1829;
    ternary r1829 1field r1828 into r1830;
    inv r1830 into r1831;
    mul r0[13u32].index r1831 into r1832;
    ternary r1827 r1832 1field into r1833;
    mul r1824 r1833 into r1834;
    is.neq 11u8 14u8 into r1835;
    is.neq r0[14u32].index 0field into r1836;
    and r1835 r1836 into r1837;
    sub r0[14u32].index r0[11u32].index into r1838;
    is.eq r1838 0field into r1839;
    ternary r1839 1field r1838 into r1840;
    inv r1840 into r1841;
    mul r0[14u32].index r1841 into r1842;
    ternary r1837 r1842 1field into r1843;
    mul r1834 r1843 into r1844;
    is.neq r0[11u32].index 0field into r1845;
    mul r0[11u32].share_val r1844 into r1846;
    ternary r1845 r1846 0field into r1847;
    add r1694 r1847 into r1848;
    is.neq 12u8 0u8 into r1849;
    is.neq r0[0u32].index 0field into r1850;
    and r1849 r1850 into r1851;
    sub r0[0u32].index r0[12u32].index into r1852;
    is.eq r1852 0field into r1853;
    ternary r1853 1field r1852 into r1854;
    inv r1854 into r1855;
    mul r0[0u32].index r1855 into r1856;
    ternary r1851 r1856 1field into r1857;
    mul 1field r1857 into r1858;
    is.neq 12u8 1u8 into r1859;
    is.neq r0[1u32].index 0field into r1860;
    and r1859 r1860 into r1861;
    sub r0[1u32].index r0[12u32].index into r1862;
    is.eq r1862 0field into r1863;
    ternary r1863 1field r1862 into r1864;
    inv r1864 into r1865;
    mul r0[1u32].index r1865 into r1866;
    ternary r1861 r1866 1field into r1867;
    mul r1858 r1867 into r1868;
    is.neq 12u8 2u8 into r1869;
    is.neq r0[2u32].index 0field into r1870;
    and r1869 r1870 into r1871;
    sub r0[2u32].index r0[12u32].index into r1872;
    is.eq r1872 0field into r1873;
    ternary r1873 1field r1872 into r1874;
    inv r1874 into r1875;
    mul r0[2u32].index r1875 into r1876;
    ternary r1871 r1876 1field into r1877;
    mul r1868 r1877 into r1878;
    is.neq 12u8 3u8 into r1879;
    is.neq r0[3u32].index 0field into r1880;
    and r1879 r1880 into r1881;
    sub r0[3u32].index r0[12u32].index into r1882;
    is.eq r1882 0field into r1883;
    ternary r1883 1field r1882 into r1884;
    inv r1884 into r1885;
    mul r0[3u32].index r1885 into r1886;
    ternary r1881 r1886 1field into r1887;
    mul r1878 r1887 into r1888;
    is.neq 12u8 4u8 into r1889;
    is.neq r0[4u32].index 0field into r1890;
    and r1889 r1890 into r1891;
    sub r0[4u32].index r0[12u32].index into r1892;
    is.eq r1892 0field into r1893;
    ternary r1893 1field r1892 into r1894;
    inv r1894 into r1895;
    mul r0[4u32].index r1895 into r1896;
    ternary r1891 r1896 1field into r1897;
    mul r1888 r1897 into r1898;
    is.neq 12u8 5u8 into r1899;
    is.neq r0[5u32].index 0field into r1900;
    and r1899 r1900 into r1901;
    sub r0[5u32].index r0[12u32].index into r1902;
    is.eq r1902 0field into r1903;
    ternary r1903 1field r1902 into r1904;
    inv r1904 into r1905;
    mul r0[5u32].index r1905 into r1906;
    ternary r1901 r1906 1field into r1907;
    mul r1898 r1907 into r1908;
    is.neq 12u8 6u8 into r1909;
    is.neq r0[6u32].index 0field into r1910;
    and r1909 r1910 into r1911;
    sub r0[6u32].index r0[12u32].index into r1912;
    is.eq r1912 0field into r1913;
    ternary r1913 1field r1912 into r1914;
    inv r1914 into r1915;
    mul r0[6u32].index r1915 into r1916;
    ternary r1911 r1916 1field into r1917;
    mul r1908 r1917 into r1918;
    is.neq 12u8 7u8 into r1919;
    is.neq r0[7u32].index 0field into r1920;
    and r1919 r1920 into r1921;
    sub r0[7u32].index r0[12u32].index into r1922;
    is.eq r1922 0field into r1923;
    ternary r1923 1field r1922 into r1924;
    inv r1924 into r1925;
    mul r0[7u32].index r1925 into r1926;
    ternary r1921 r1926 1field into r1927;
    mul r1918 r1927 into r1928;
    is.neq 12u8 8u8 into r1929;
    is.neq r0[8u32].index 0field into r1930;
    and r1929 r1930 into r1931;
    sub r0[8u32].index r0[12u32].index into r1932;
    is.eq r1932 0field into r1933;
    ternary r1933 1field r1932 into r1934;
    inv r1934 into r1935;
    mul r0[8u32].index r1935 into r1936;
    ternary r1931 r1936 1field into r1937;
    mul r1928 r1937 into r1938;
    is.neq 12u8 9u8 into r1939;
    is.neq r0[9u32].index 0field into r1940;
    and r1939 r1940 into r1941;
    sub r0[9u32].index r0[12u32].index into r1942;
    is.eq r1942 0field into r1943;
    ternary r1943 1field r1942 into r1944;
    inv r1944 into r1945;
    mul r0[9u32].index r1945 into r1946;
    ternary r1941 r1946 1field into r1947;
    mul r1938 r1947 into r1948;
    is.neq 12u8 10u8 into r1949;
    is.neq r0[10u32].index 0field into r1950;
    and r1949 r1950 into r1951;
    sub r0[10u32].index r0[12u32].index into r1952;
    is.eq r1952 0field into r1953;
    ternary r1953 1field r1952 into r1954;
    inv r1954 into r1955;
    mul r0[10u32].index r1955 into r1956;
    ternary r1951 r1956 1field into r1957;
    mul r1948 r1957 into r1958;
    is.neq 12u8 11u8 into r1959;
    is.neq r0[11u32].index 0field into r1960;
    and r1959 r1960 into r1961;
    sub r0[11u32].index r0[12u32].index into r1962;
    is.eq r1962 0field into r1963;
    ternary r1963 1field r1962 into r1964;
    inv r1964 into r1965;
    mul r0[11u32].index r1965 into r1966;
    ternary r1961 r1966 1field into r1967;
    mul r1958 r1967 into r1968;
    is.neq 12u8 12u8 into r1969;
    is.neq r0[12u32].index 0field into r1970;
    and r1969 r1970 into r1971;
    sub r0[12u32].index r0[12u32].index into r1972;
    is.eq r1972 0field into r1973;
    ternary r1973 1field r1972 into r1974;
    inv r1974 into r1975;
    mul r0[12u32].index r1975 into r1976;
    ternary r1971 r1976 1field into r1977;
    mul r1968 r1977 into r1978;
    is.neq 12u8 13u8 into r1979;
    is.neq r0[13u32].index 0field into r1980;
    and r1979 r1980 into r1981;
    sub r0[13u32].index r0[12u32].index into r1982;
    is.eq r1982 0field into r1983;
    ternary r1983 1field r1982 into r1984;
    inv r1984 into r1985;
    mul r0[13u32].index r1985 into r1986;
    ternary r1981 r1986 1field into r1987;
    mul r1978 r1987 into r1988;
    is.neq 12u8 14u8 into r1989;
    is.neq r0[14u32].index 0field into r1990;
    and r1989 r1990 into r1991;
    sub r0[14u32].index r0[12u32].index into r1992;
    is.eq r1992 0field into r1993;
    ternary r1993 1field r1992 into r1994;
    inv r1994 into r1995;
    mul r0[14u32].index r1995 into r1996;
    ternary r1991 r1996 1field into r1997;
    mul r1988 r1997 into r1998;
    is.neq r0[12u32].index 0field into r1999;
    mul r0[12u32].share_val r1998 into r2000;
    ternary r1999 r2000 0field into r2001;
    add r1848 r2001 into r2002;
    is.neq 13u8 0u8 into r2003;
    is.neq r0[0u32].index 0field into r2004;
    and r2003 r2004 into r2005;
    sub r0[0u32].index r0[13u32].index into r2006;
    is.eq r2006 0field into r2007;
    ternary r2007 1field r2006 into r2008;
    inv r2008 into r2009;
    mul r0[0u32].index r2009 into r2010;
    ternary r2005 r2010 1field into r2011;
    mul 1field r2011 into r2012;
    is.neq 13u8 1u8 into r2013;
    is.neq r0[1u32].index 0field into r2014;
    and r2013 r2014 into r2015;
    sub r0[1u32].index r0[13u32].index into r2016;
    is.eq r2016 0field into r2017;
    ternary r2017 1field r2016 into r2018;
    inv r2018 into r2019;
    mul r0[1u32].index r2019 into r2020;
    ternary r2015 r2020 1field into r2021;
    mul r2012 r2021 into r2022;
    is.neq 13u8 2u8 into r2023;
    is.neq r0[2u32].index 0field into r2024;
    and r2023 r2024 into r2025;
    sub r0[2u32].index r0[13u32].index into r2026;
    is.eq r2026 0field into r2027;
    ternary r2027 1field r2026 into r2028;
    inv r2028 into r2029;
    mul r0[2u32].index r2029 into r2030;
    ternary r2025 r2030 1field into r2031;
    mul r2022 r2031 into r2032;
    is.neq 13u8 3u8 into r2033;
    is.neq r0[3u32].index 0field into r2034;
    and r2033 r2034 into r2035;
    sub r0[3u32].index r0[13u32].index into r2036;
    is.eq r2036 0field into r2037;
    ternary r2037 1field r2036 into r2038;
    inv r2038 into r2039;
    mul r0[3u32].index r2039 into r2040;
    ternary r2035 r2040 1field into r2041;
    mul r2032 r2041 into r2042;
    is.neq 13u8 4u8 into r2043;
    is.neq r0[4u32].index 0field into r2044;
    and r2043 r2044 into r2045;
    sub r0[4u32].index r0[13u32].index into r2046;
    is.eq r2046 0field into r2047;
    ternary r2047 1field r2046 into r2048;
    inv r2048 into r2049;
    mul r0[4u32].index r2049 into r2050;
    ternary r2045 r2050 1field into r2051;
    mul r2042 r2051 into r2052;
    is.neq 13u8 5u8 into r2053;
    is.neq r0[5u32].index 0field into r2054;
    and r2053 r2054 into r2055;
    sub r0[5u32].index r0[13u32].index into r2056;
    is.eq r2056 0field into r2057;
    ternary r2057 1field r2056 into r2058;
    inv r2058 into r2059;
    mul r0[5u32].index r2059 into r2060;
    ternary r2055 r2060 1field into r2061;
    mul r2052 r2061 into r2062;
    is.neq 13u8 6u8 into r2063;
    is.neq r0[6u32].index 0field into r2064;
    and r2063 r2064 into r2065;
    sub r0[6u32].index r0[13u32].index into r2066;
    is.eq r2066 0field into r2067;
    ternary r2067 1field r2066 into r2068;
    inv r2068 into r2069;
    mul r0[6u32].index r2069 into r2070;
    ternary r2065 r2070 1field into r2071;
    mul r2062 r2071 into r2072;
    is.neq 13u8 7u8 into r2073;
    is.neq r0[7u32].index 0field into r2074;
    and r2073 r2074 into r2075;
    sub r0[7u32].index r0[13u32].index into r2076;
    is.eq r2076 0field into r2077;
    ternary r2077 1field r2076 into r2078;
    inv r2078 into r2079;
    mul r0[7u32].index r2079 into r2080;
    ternary r2075 r2080 1field into r2081;
    mul r2072 r2081 into r2082;
    is.neq 13u8 8u8 into r2083;
    is.neq r0[8u32].index 0field into r2084;
    and r2083 r2084 into r2085;
    sub r0[8u32].index r0[13u32].index into r2086;
    is.eq r2086 0field into r2087;
    ternary r2087 1field r2086 into r2088;
    inv r2088 into r2089;
    mul r0[8u32].index r2089 into r2090;
    ternary r2085 r2090 1field into r2091;
    mul r2082 r2091 into r2092;
    is.neq 13u8 9u8 into r2093;
    is.neq r0[9u32].index 0field into r2094;
    and r2093 r2094 into r2095;
    sub r0[9u32].index r0[13u32].index into r2096;
    is.eq r2096 0field into r2097;
    ternary r2097 1field r2096 into r2098;
    inv r2098 into r2099;
    mul r0[9u32].index r2099 into r2100;
    ternary r2095 r2100 1field into r2101;
    mul r2092 r2101 into r2102;
    is.neq 13u8 10u8 into r2103;
    is.neq r0[10u32].index 0field into r2104;
    and r2103 r2104 into r2105;
    sub r0[10u32].index r0[13u32].index into r2106;
    is.eq r2106 0field into r2107;
    ternary r2107 1field r2106 into r2108;
    inv r2108 into r2109;
    mul r0[10u32].index r2109 into r2110;
    ternary r2105 r2110 1field into r2111;
    mul r2102 r2111 into r2112;
    is.neq 13u8 11u8 into r2113;
    is.neq r0[11u32].index 0field into r2114;
    and r2113 r2114 into r2115;
    sub r0[11u32].index r0[13u32].index into r2116;
    is.eq r2116 0field into r2117;
    ternary r2117 1field r2116 into r2118;
    inv r2118 into r2119;
    mul r0[11u32].index r2119 into r2120;
    ternary r2115 r2120 1field into r2121;
    mul r2112 r2121 into r2122;
    is.neq 13u8 12u8 into r2123;
    is.neq r0[12u32].index 0field into r2124;
    and r2123 r2124 into r2125;
    sub r0[12u32].index r0[13u32].index into r2126;
    is.eq r2126 0field into r2127;
    ternary r2127 1field r2126 into r2128;
    inv r2128 into r2129;
    mul r0[12u32].index r2129 into r2130;
    ternary r2125 r2130 1field into r2131;
    mul r2122 r2131 into r2132;
    is.neq 13u8 13u8 into r2133;
    is.neq r0[13u32].index 0field into r2134;
    and r2133 r2134 into r2135;
    sub r0[13u32].index r0[13u32].index into r2136;
    is.eq r2136 0field into r2137;
    ternary r2137 1field r2136 into r2138;
    inv r2138 into r2139;
    mul r0[13u32].index r2139 into r2140;
    ternary r2135 r2140 1field into r2141;
    mul r2132 r2141 into r2142;
    is.neq 13u8 14u8 into r2143;
    is.neq r0[14u32].index 0field into r2144;
    and r2143 r2144 into r2145;
    sub r0[14u32].index r0[13u32].index into r2146;
    is.eq r2146 0field into r2147;
    ternary r2147 1field r2146 into r2148;
    inv r2148 into r2149;
    mul r0[14u32].index r2149 into r2150;
    ternary r2145 r2150 1field into r2151;
    mul r2142 r2151 into r2152;
    is.neq r0[13u32].index 0field into r2153;
    mul r0[13u32].share_val r2152 into r2154;
    ternary r2153 r2154 0field into r2155;
    add r2002 r2155 into r2156;
    is.neq 14u8 0u8 into r2157;
    is.neq r0[0u32].index 0field into r2158;
    and r2157 r2158 into r2159;
    sub r0[0u32].index r0[14u32].index into r2160;
    is.eq r2160 0field into r2161;
    ternary r2161 1field r2160 into r2162;
    inv r2162 into r2163;
    mul r0[0u32].index r2163 into r2164;
    ternary r2159 r2164 1field into r2165;
    mul 1field r2165 into r2166;
    is.neq 14u8 1u8 into r2167;
    is.neq r0[1u32].index 0field into r2168;
    and r2167 r2168 into r2169;
    sub r0[1u32].index r0[14u32].index into r2170;
    is.eq r2170 0field into r2171;
    ternary r2171 1field r2170 into r2172;
    inv r2172 into r2173;
    mul r0[1u32].index r2173 into r2174;
    ternary r2169 r2174 1field into r2175;
    mul r2166 r2175 into r2176;
    is.neq 14u8 2u8 into r2177;
    is.neq r0[2u32].index 0field into r2178;
    and r2177 r2178 into r2179;
    sub r0[2u32].index r0[14u32].index into r2180;
    is.eq r2180 0field into r2181;
    ternary r2181 1field r2180 into r2182;
    inv r2182 into r2183;
    mul r0[2u32].index r2183 into r2184;
    ternary r2179 r2184 1field into r2185;
    mul r2176 r2185 into r2186;
    is.neq 14u8 3u8 into r2187;
    is.neq r0[3u32].index 0field into r2188;
    and r2187 r2188 into r2189;
    sub r0[3u32].index r0[14u32].index into r2190;
    is.eq r2190 0field into r2191;
    ternary r2191 1field r2190 into r2192;
    inv r2192 into r2193;
    mul r0[3u32].index r2193 into r2194;
    ternary r2189 r2194 1field into r2195;
    mul r2186 r2195 into r2196;
    is.neq 14u8 4u8 into r2197;
    is.neq r0[4u32].index 0field into r2198;
    and r2197 r2198 into r2199;
    sub r0[4u32].index r0[14u32].index into r2200;
    is.eq r2200 0field into r2201;
    ternary r2201 1field r2200 into r2202;
    inv r2202 into r2203;
    mul r0[4u32].index r2203 into r2204;
    ternary r2199 r2204 1field into r2205;
    mul r2196 r2205 into r2206;
    is.neq 14u8 5u8 into r2207;
    is.neq r0[5u32].index 0field into r2208;
    and r2207 r2208 into r2209;
    sub r0[5u32].index r0[14u32].index into r2210;
    is.eq r2210 0field into r2211;
    ternary r2211 1field r2210 into r2212;
    inv r2212 into r2213;
    mul r0[5u32].index r2213 into r2214;
    ternary r2209 r2214 1field into r2215;
    mul r2206 r2215 into r2216;
    is.neq 14u8 6u8 into r2217;
    is.neq r0[6u32].index 0field into r2218;
    and r2217 r2218 into r2219;
    sub r0[6u32].index r0[14u32].index into r2220;
    is.eq r2220 0field into r2221;
    ternary r2221 1field r2220 into r2222;
    inv r2222 into r2223;
    mul r0[6u32].index r2223 into r2224;
    ternary r2219 r2224 1field into r2225;
    mul r2216 r2225 into r2226;
    is.neq 14u8 7u8 into r2227;
    is.neq r0[7u32].index 0field into r2228;
    and r2227 r2228 into r2229;
    sub r0[7u32].index r0[14u32].index into r2230;
    is.eq r2230 0field into r2231;
    ternary r2231 1field r2230 into r2232;
    inv r2232 into r2233;
    mul r0[7u32].index r2233 into r2234;
    ternary r2229 r2234 1field into r2235;
    mul r2226 r2235 into r2236;
    is.neq 14u8 8u8 into r2237;
    is.neq r0[8u32].index 0field into r2238;
    and r2237 r2238 into r2239;
    sub r0[8u32].index r0[14u32].index into r2240;
    is.eq r2240 0field into r2241;
    ternary r2241 1field r2240 into r2242;
    inv r2242 into r2243;
    mul r0[8u32].index r2243 into r2244;
    ternary r2239 r2244 1field into r2245;
    mul r2236 r2245 into r2246;
    is.neq 14u8 9u8 into r2247;
    is.neq r0[9u32].index 0field into r2248;
    and r2247 r2248 into r2249;
    sub r0[9u32].index r0[14u32].index into r2250;
    is.eq r2250 0field into r2251;
    ternary r2251 1field r2250 into r2252;
    inv r2252 into r2253;
    mul r0[9u32].index r2253 into r2254;
    ternary r2249 r2254 1field into r2255;
    mul r2246 r2255 into r2256;
    is.neq 14u8 10u8 into r2257;
    is.neq r0[10u32].index 0field into r2258;
    and r2257 r2258 into r2259;
    sub r0[10u32].index r0[14u32].index into r2260;
    is.eq r2260 0field into r2261;
    ternary r2261 1field r2260 into r2262;
    inv r2262 into r2263;
    mul r0[10u32].index r2263 into r2264;
    ternary r2259 r2264 1field into r2265;
    mul r2256 r2265 into r2266;
    is.neq 14u8 11u8 into r2267;
    is.neq r0[11u32].index 0field into r2268;
    and r2267 r2268 into r2269;
    sub r0[11u32].index r0[14u32].index into r2270;
    is.eq r2270 0field into r2271;
    ternary r2271 1field r2270 into r2272;
    inv r2272 into r2273;
    mul r0[11u32].index r2273 into r2274;
    ternary r2269 r2274 1field into r2275;
    mul r2266 r2275 into r2276;
    is.neq 14u8 12u8 into r2277;
    is.neq r0[12u32].index 0field into r2278;
    and r2277 r2278 into r2279;
    sub r0[12u32].index r0[14u32].index into r2280;
    is.eq r2280 0field into r2281;
    ternary r2281 1field r2280 into r2282;
    inv r2282 into r2283;
    mul r0[12u32].index r2283 into r2284;
    ternary r2279 r2284 1field into r2285;
    mul r2276 r2285 into r2286;
    is.neq 14u8 13u8 into r2287;
    is.neq r0[13u32].index 0field into r2288;
    and r2287 r2288 into r2289;
    sub r0[13u32].index r0[14u32].index into r2290;
    is.eq r2290 0field into r2291;
    ternary r2291 1field r2290 into r2292;
    inv r2292 into r2293;
    mul r0[13u32].index r2293 into r2294;
    ternary r2289 r2294 1field into r2295;
    mul r2286 r2295 into r2296;
    is.neq 14u8 14u8 into r2297;
    is.neq r0[14u32].index 0field into r2298;
    and r2297 r2298 into r2299;
    sub r0[14u32].index r0[14u32].index into r2300;
    is.eq r2300 0field into r2301;
    ternary r2301 1field r2300 into r2302;
    inv r2302 into r2303;
    mul r0[14u32].index r2303 into r2304;
    ternary r2299 r2304 1field into r2305;
    mul r2296 r2305 into r2306;
    is.neq r0[14u32].index 0field into r2307;
    mul r0[14u32].share_val r2306 into r2308;
    ternary r2307 r2308 0field into r2309;
    add r2156 r2309 into r2310;
    output r2310 as field;


function reconstruct_secret_private:
    input r0 as dcp_destination_shares.aleo/DestinationShare.record;
    input r1 as dcp_destination_shares.aleo/DestinationShare.record;
    input r2 as dcp_destination_shares.aleo/DestinationShare.record;
    input r3 as dcp_destination_shares.aleo/DestinationShare.record;
    input r4 as dcp_destination_shares.aleo/DestinationShare.record;
    input r5 as dcp_destination_shares.aleo/DestinationShare.record;
    input r6 as dcp_destination_shares.aleo/DestinationShare.record;
    input r7 as dcp_destination_shares.aleo/DestinationShare.record;
    input r8 as dcp_destination_shares.aleo/DestinationShare.record;
    input r9 as dcp_destination_shares.aleo/DestinationShare.record;
    input r10 as dcp_destination_shares.aleo/DestinationShare.record;
    input r11 as dcp_destination_shares.aleo/DestinationShare.record;
    input r12 as dcp_destination_shares.aleo/DestinationShare.record;
    input r13 as dcp_destination_shares.aleo/DestinationShare.record;
    input r14 as dcp_destination_shares.aleo/DestinationShare.record;
    call dcp_destination_shares.aleo/spend_destination_shares r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14;
    assert.eq r1.custody r0.custody;
    assert.eq r2.custody r0.custody;
    assert.eq r3.custody r0.custody;
    assert.eq r4.custody r0.custody;
    assert.eq r5.custody r0.custody;
    assert.eq r6.custody r0.custody;
    assert.eq r7.custody r0.custody;
    assert.eq r8.custody r0.custody;
    assert.eq r9.custody r0.custody;
    assert.eq r10.custody r0.custody;
    assert.eq r11.custody r0.custody;
    assert.eq r12.custody r0.custody;
    assert.eq r13.custody r0.custody;
    assert.eq r14.custody r0.custody;
    assert.eq r1.custody_trace r0.custody_trace;
    assert.eq r2.custody_trace r0.custody_trace;
    assert.eq r3.custody_trace r0.custody_trace;
    assert.eq r4.custody_trace r0.custody_trace;
    assert.eq r5.custody_trace r0.custody_trace;
    assert.eq r6.custody_trace r0.custody_trace;
    assert.eq r7.custody_trace r0.custody_trace;
    assert.eq r8.custody_trace r0.custody_trace;
    assert.eq r9.custody_trace r0.custody_trace;
    assert.eq r10.custody_trace r0.custody_trace;
    assert.eq r11.custody_trace r0.custody_trace;
    assert.eq r12.custody_trace r0.custody_trace;
    assert.eq r13.custody_trace r0.custody_trace;
    assert.eq r14.custody_trace r0.custody_trace;
    cast  r0.share r1.share r2.share r3.share r4.share r5.share r6.share r7.share r8.share r9.share r10.share r11.share r12.share r13.share r14.share into r15 as [Share; 15u32];
    is.neq r15[0u32].index 0field into r16;
    cast r16 into r17 as u8;
    add 0u8 r17 into r18;
    is.neq r15[1u32].index 0field into r19;
    cast r19 into r20 as u8;
    add r18 r20 into r21;
    is.neq r15[2u32].index 0field into r22;
    cast r22 into r23 as u8;
    add r21 r23 into r24;
    is.neq r15[3u32].index 0field into r25;
    cast r25 into r26 as u8;
    add r24 r26 into r27;
    is.neq r15[4u32].index 0field into r28;
    cast r28 into r29 as u8;
    add r27 r29 into r30;
    is.neq r15[5u32].index 0field into r31;
    cast r31 into r32 as u8;
    add r30 r32 into r33;
    is.neq r15[6u32].index 0field into r34;
    cast r34 into r35 as u8;
    add r33 r35 into r36;
    is.neq r15[7u32].index 0field into r37;
    cast r37 into r38 as u8;
    add r36 r38 into r39;
    is.neq r15[8u32].index 0field into r40;
    cast r40 into r41 as u8;
    add r39 r41 into r42;
    is.neq r15[9u32].index 0field into r43;
    cast r43 into r44 as u8;
    add r42 r44 into r45;
    is.neq r15[10u32].index 0field into r46;
    cast r46 into r47 as u8;
    add r45 r47 into r48;
    is.neq r15[11u32].index 0field into r49;
    cast r49 into r50 as u8;
    add r48 r50 into r51;
    is.neq r15[12u32].index 0field into r52;
    cast r52 into r53 as u8;
    add r51 r53 into r54;
    is.neq r15[13u32].index 0field into r55;
    cast r55 into r56 as u8;
    add r54 r56 into r57;
    is.neq r15[14u32].index 0field into r58;
    cast r58 into r59 as u8;
    add r57 r59 into r60;
    gte r60 r0.custody.threshold into r61;
    assert.eq r61 true;
    call reconstruct_onchain r15 into r62;
    cast self.caller r62 r0.custody r0.custody_trace into r63 as ReconstructedSecret.record;
    output r63 as ReconstructedSecret.record;


function spend_reconstructed_secret:
    input r0 as ReconstructedSecret.record;


