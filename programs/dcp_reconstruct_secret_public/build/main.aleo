import credits.aleo;
import dcp_validator_shares.aleo;
import dcp_open_requests.aleo;
import dcp_validator_fee.aleo;
import dcp_core_protocol.aleo;
program dcp_reconstruct_secret_public.aleo;


struct Custody:
    origin as address;
    custody_key as field;
    threshold as u8;

struct Share:
    share_val as field;
    index as field;

struct ValidatorShareData:
    validator as address;
    share as Share;




struct Proposal:
    validators as [address; 16u32];
    threshold as u8;
    current_validator_set_index as u64;

struct OpenRequestIdentifier:
    custody as Custody;
    custody_trace as field;



mapping reconstructed_secrets:
	key as field.public;
	value as field.public;








function reconstruct_secret_public:
    input r0 as Custody.private;
    input r1 as field.private;
    cast r0 r1 into r2 as OpenRequestIdentifier;
    hash.bhp256 r2 into r3 as field;
    async reconstruct_secret_public r3 r0.threshold into r4;
    output r4 as dcp_reconstruct_secret_public.aleo/reconstruct_secret_public.future;

finalize reconstruct_secret_public:
    input r0 as field.public;
    input r1 as u8.public;
    commit.bhp256 r0 1scalar into r2 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r2] 0field into r3;
    is.eq r3 0field into r4;
    cast 0field 0field into r5 as Share;
    cast r3 1field into r6 as Share;
    ternary r4 r5.share_val r6.share_val into r7;
    ternary r4 r5.index r6.index into r8;
    cast r7 r8 into r9 as Share;
    commit.bhp256 r0 2scalar into r10 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r10] 0field into r11;
    is.eq r11 0field into r12;
    cast 0field 0field into r13 as Share;
    cast r11 2field into r14 as Share;
    ternary r12 r13.share_val r14.share_val into r15;
    ternary r12 r13.index r14.index into r16;
    cast r15 r16 into r17 as Share;
    commit.bhp256 r0 2scalar into r18 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r18] 0field into r19;
    is.eq r19 0field into r20;
    cast 0field 0field into r21 as Share;
    cast r19 3field into r22 as Share;
    ternary r20 r21.share_val r22.share_val into r23;
    ternary r20 r21.index r22.index into r24;
    cast r23 r24 into r25 as Share;
    commit.bhp256 r0 4scalar into r26 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r26] 0field into r27;
    is.eq r27 0field into r28;
    cast 0field 0field into r29 as Share;
    cast r27 4field into r30 as Share;
    ternary r28 r29.share_val r30.share_val into r31;
    ternary r28 r29.index r30.index into r32;
    cast r31 r32 into r33 as Share;
    commit.bhp256 r0 5scalar into r34 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r34] 0field into r35;
    is.eq r35 0field into r36;
    cast 0field 0field into r37 as Share;
    cast r35 5field into r38 as Share;
    ternary r36 r37.share_val r38.share_val into r39;
    ternary r36 r37.index r38.index into r40;
    cast r39 r40 into r41 as Share;
    commit.bhp256 r0 6scalar into r42 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r42] 0field into r43;
    is.eq r43 0field into r44;
    cast 0field 0field into r45 as Share;
    cast r43 6field into r46 as Share;
    ternary r44 r45.share_val r46.share_val into r47;
    ternary r44 r45.index r46.index into r48;
    cast r47 r48 into r49 as Share;
    commit.bhp256 r0 7scalar into r50 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r50] 0field into r51;
    is.eq r51 0field into r52;
    cast 0field 0field into r53 as Share;
    cast r51 7field into r54 as Share;
    ternary r52 r53.share_val r54.share_val into r55;
    ternary r52 r53.index r54.index into r56;
    cast r55 r56 into r57 as Share;
    commit.bhp256 r0 8scalar into r58 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r58] 0field into r59;
    is.eq r59 0field into r60;
    cast 0field 0field into r61 as Share;
    cast r59 8field into r62 as Share;
    ternary r60 r61.share_val r62.share_val into r63;
    ternary r60 r61.index r62.index into r64;
    cast r63 r64 into r65 as Share;
    commit.bhp256 r0 9scalar into r66 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r66] 0field into r67;
    is.eq r67 0field into r68;
    cast 0field 0field into r69 as Share;
    cast r67 9field into r70 as Share;
    ternary r68 r69.share_val r70.share_val into r71;
    ternary r68 r69.index r70.index into r72;
    cast r71 r72 into r73 as Share;
    commit.bhp256 r0 10scalar into r74 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r74] 0field into r75;
    is.eq r75 0field into r76;
    cast 0field 0field into r77 as Share;
    cast r75 10field into r78 as Share;
    ternary r76 r77.share_val r78.share_val into r79;
    ternary r76 r77.index r78.index into r80;
    cast r79 r80 into r81 as Share;
    commit.bhp256 r0 11scalar into r82 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r82] 0field into r83;
    is.eq r83 0field into r84;
    cast 0field 0field into r85 as Share;
    cast r83 11field into r86 as Share;
    ternary r84 r85.share_val r86.share_val into r87;
    ternary r84 r85.index r86.index into r88;
    cast r87 r88 into r89 as Share;
    commit.bhp256 r0 12scalar into r90 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r90] 0field into r91;
    is.eq r91 0field into r92;
    cast 0field 0field into r93 as Share;
    cast r91 12field into r94 as Share;
    ternary r92 r93.share_val r94.share_val into r95;
    ternary r92 r93.index r94.index into r96;
    cast r95 r96 into r97 as Share;
    commit.bhp256 r0 13scalar into r98 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r98] 0field into r99;
    is.eq r99 0field into r100;
    cast 0field 0field into r101 as Share;
    cast r99 13field into r102 as Share;
    ternary r100 r101.share_val r102.share_val into r103;
    ternary r100 r101.index r102.index into r104;
    cast r103 r104 into r105 as Share;
    commit.bhp256 r0 14scalar into r106 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r106] 0field into r107;
    is.eq r107 0field into r108;
    cast 0field 0field into r109 as Share;
    cast r107 14field into r110 as Share;
    ternary r108 r109.share_val r110.share_val into r111;
    ternary r108 r109.index r110.index into r112;
    cast r111 r112 into r113 as Share;
    commit.bhp256 r0 15scalar into r114 as field;
    get.or_use dcp_core_protocol.aleo/public_shares[r114] 0field into r115;
    is.eq r115 0field into r116;
    cast 0field 0field into r117 as Share;
    cast r115 15field into r118 as Share;
    ternary r116 r117.share_val r118.share_val into r119;
    ternary r116 r117.index r118.index into r120;
    cast r119 r120 into r121 as Share;
    cast  r9 r17 r25 r33 r41 r49 r57 r65 r73 r81 r89 r97 r105 r113 r121 into r122 as [Share; 15u32];
    is.neq r122[0u32].index 0field into r123;
    cast r123 into r124 as u8;
    add 0u8 r124 into r125;
    is.neq r122[1u32].index 0field into r126;
    cast r126 into r127 as u8;
    add r125 r127 into r128;
    is.neq r122[2u32].index 0field into r129;
    cast r129 into r130 as u8;
    add r128 r130 into r131;
    is.neq r122[3u32].index 0field into r132;
    cast r132 into r133 as u8;
    add r131 r133 into r134;
    is.neq r122[4u32].index 0field into r135;
    cast r135 into r136 as u8;
    add r134 r136 into r137;
    is.neq r122[5u32].index 0field into r138;
    cast r138 into r139 as u8;
    add r137 r139 into r140;
    is.neq r122[6u32].index 0field into r141;
    cast r141 into r142 as u8;
    add r140 r142 into r143;
    is.neq r122[7u32].index 0field into r144;
    cast r144 into r145 as u8;
    add r143 r145 into r146;
    is.neq r122[8u32].index 0field into r147;
    cast r147 into r148 as u8;
    add r146 r148 into r149;
    is.neq r122[9u32].index 0field into r150;
    cast r150 into r151 as u8;
    add r149 r151 into r152;
    is.neq r122[10u32].index 0field into r153;
    cast r153 into r154 as u8;
    add r152 r154 into r155;
    is.neq r122[11u32].index 0field into r156;
    cast r156 into r157 as u8;
    add r155 r157 into r158;
    is.neq r122[12u32].index 0field into r159;
    cast r159 into r160 as u8;
    add r158 r160 into r161;
    is.neq r122[13u32].index 0field into r162;
    cast r162 into r163 as u8;
    add r161 r163 into r164;
    is.neq r122[14u32].index 0field into r165;
    cast r165 into r166 as u8;
    add r164 r166 into r167;
    gte r167 r1 into r168;
    assert.eq r168 true;
    is.neq 0u8 0u8 into r169;
    is.neq r122[0u32].index 0field into r170;
    and r169 r170 into r171;
    sub r122[0u32].index r122[0u32].index into r172;
    is.eq r172 0field into r173;
    ternary r173 1field r172 into r174;
    inv r174 into r175;
    mul r122[0u32].index r175 into r176;
    ternary r171 r176 1field into r177;
    mul 1field r177 into r178;
    is.neq 0u8 1u8 into r179;
    is.neq r122[1u32].index 0field into r180;
    and r179 r180 into r181;
    sub r122[1u32].index r122[0u32].index into r182;
    is.eq r182 0field into r183;
    ternary r183 1field r182 into r184;
    inv r184 into r185;
    mul r122[1u32].index r185 into r186;
    ternary r181 r186 1field into r187;
    mul r178 r187 into r188;
    is.neq 0u8 2u8 into r189;
    is.neq r122[2u32].index 0field into r190;
    and r189 r190 into r191;
    sub r122[2u32].index r122[0u32].index into r192;
    is.eq r192 0field into r193;
    ternary r193 1field r192 into r194;
    inv r194 into r195;
    mul r122[2u32].index r195 into r196;
    ternary r191 r196 1field into r197;
    mul r188 r197 into r198;
    is.neq 0u8 3u8 into r199;
    is.neq r122[3u32].index 0field into r200;
    and r199 r200 into r201;
    sub r122[3u32].index r122[0u32].index into r202;
    is.eq r202 0field into r203;
    ternary r203 1field r202 into r204;
    inv r204 into r205;
    mul r122[3u32].index r205 into r206;
    ternary r201 r206 1field into r207;
    mul r198 r207 into r208;
    is.neq 0u8 4u8 into r209;
    is.neq r122[4u32].index 0field into r210;
    and r209 r210 into r211;
    sub r122[4u32].index r122[0u32].index into r212;
    is.eq r212 0field into r213;
    ternary r213 1field r212 into r214;
    inv r214 into r215;
    mul r122[4u32].index r215 into r216;
    ternary r211 r216 1field into r217;
    mul r208 r217 into r218;
    is.neq 0u8 5u8 into r219;
    is.neq r122[5u32].index 0field into r220;
    and r219 r220 into r221;
    sub r122[5u32].index r122[0u32].index into r222;
    is.eq r222 0field into r223;
    ternary r223 1field r222 into r224;
    inv r224 into r225;
    mul r122[5u32].index r225 into r226;
    ternary r221 r226 1field into r227;
    mul r218 r227 into r228;
    is.neq 0u8 6u8 into r229;
    is.neq r122[6u32].index 0field into r230;
    and r229 r230 into r231;
    sub r122[6u32].index r122[0u32].index into r232;
    is.eq r232 0field into r233;
    ternary r233 1field r232 into r234;
    inv r234 into r235;
    mul r122[6u32].index r235 into r236;
    ternary r231 r236 1field into r237;
    mul r228 r237 into r238;
    is.neq 0u8 7u8 into r239;
    is.neq r122[7u32].index 0field into r240;
    and r239 r240 into r241;
    sub r122[7u32].index r122[0u32].index into r242;
    is.eq r242 0field into r243;
    ternary r243 1field r242 into r244;
    inv r244 into r245;
    mul r122[7u32].index r245 into r246;
    ternary r241 r246 1field into r247;
    mul r238 r247 into r248;
    is.neq 0u8 8u8 into r249;
    is.neq r122[8u32].index 0field into r250;
    and r249 r250 into r251;
    sub r122[8u32].index r122[0u32].index into r252;
    is.eq r252 0field into r253;
    ternary r253 1field r252 into r254;
    inv r254 into r255;
    mul r122[8u32].index r255 into r256;
    ternary r251 r256 1field into r257;
    mul r248 r257 into r258;
    is.neq 0u8 9u8 into r259;
    is.neq r122[9u32].index 0field into r260;
    and r259 r260 into r261;
    sub r122[9u32].index r122[0u32].index into r262;
    is.eq r262 0field into r263;
    ternary r263 1field r262 into r264;
    inv r264 into r265;
    mul r122[9u32].index r265 into r266;
    ternary r261 r266 1field into r267;
    mul r258 r267 into r268;
    is.neq 0u8 10u8 into r269;
    is.neq r122[10u32].index 0field into r270;
    and r269 r270 into r271;
    sub r122[10u32].index r122[0u32].index into r272;
    is.eq r272 0field into r273;
    ternary r273 1field r272 into r274;
    inv r274 into r275;
    mul r122[10u32].index r275 into r276;
    ternary r271 r276 1field into r277;
    mul r268 r277 into r278;
    is.neq 0u8 11u8 into r279;
    is.neq r122[11u32].index 0field into r280;
    and r279 r280 into r281;
    sub r122[11u32].index r122[0u32].index into r282;
    is.eq r282 0field into r283;
    ternary r283 1field r282 into r284;
    inv r284 into r285;
    mul r122[11u32].index r285 into r286;
    ternary r281 r286 1field into r287;
    mul r278 r287 into r288;
    is.neq 0u8 12u8 into r289;
    is.neq r122[12u32].index 0field into r290;
    and r289 r290 into r291;
    sub r122[12u32].index r122[0u32].index into r292;
    is.eq r292 0field into r293;
    ternary r293 1field r292 into r294;
    inv r294 into r295;
    mul r122[12u32].index r295 into r296;
    ternary r291 r296 1field into r297;
    mul r288 r297 into r298;
    is.neq 0u8 13u8 into r299;
    is.neq r122[13u32].index 0field into r300;
    and r299 r300 into r301;
    sub r122[13u32].index r122[0u32].index into r302;
    is.eq r302 0field into r303;
    ternary r303 1field r302 into r304;
    inv r304 into r305;
    mul r122[13u32].index r305 into r306;
    ternary r301 r306 1field into r307;
    mul r298 r307 into r308;
    is.neq 0u8 14u8 into r309;
    is.neq r122[14u32].index 0field into r310;
    and r309 r310 into r311;
    sub r122[14u32].index r122[0u32].index into r312;
    is.eq r312 0field into r313;
    ternary r313 1field r312 into r314;
    inv r314 into r315;
    mul r122[14u32].index r315 into r316;
    ternary r311 r316 1field into r317;
    mul r308 r317 into r318;
    is.neq r122[0u32].index 0field into r319;
    mul r122[0u32].share_val r318 into r320;
    ternary r319 r320 0field into r321;
    add 0field r321 into r322;
    is.neq 1u8 0u8 into r323;
    is.neq r122[0u32].index 0field into r324;
    and r323 r324 into r325;
    sub r122[0u32].index r122[1u32].index into r326;
    is.eq r326 0field into r327;
    ternary r327 1field r326 into r328;
    inv r328 into r329;
    mul r122[0u32].index r329 into r330;
    ternary r325 r330 1field into r331;
    mul 1field r331 into r332;
    is.neq 1u8 1u8 into r333;
    is.neq r122[1u32].index 0field into r334;
    and r333 r334 into r335;
    sub r122[1u32].index r122[1u32].index into r336;
    is.eq r336 0field into r337;
    ternary r337 1field r336 into r338;
    inv r338 into r339;
    mul r122[1u32].index r339 into r340;
    ternary r335 r340 1field into r341;
    mul r332 r341 into r342;
    is.neq 1u8 2u8 into r343;
    is.neq r122[2u32].index 0field into r344;
    and r343 r344 into r345;
    sub r122[2u32].index r122[1u32].index into r346;
    is.eq r346 0field into r347;
    ternary r347 1field r346 into r348;
    inv r348 into r349;
    mul r122[2u32].index r349 into r350;
    ternary r345 r350 1field into r351;
    mul r342 r351 into r352;
    is.neq 1u8 3u8 into r353;
    is.neq r122[3u32].index 0field into r354;
    and r353 r354 into r355;
    sub r122[3u32].index r122[1u32].index into r356;
    is.eq r356 0field into r357;
    ternary r357 1field r356 into r358;
    inv r358 into r359;
    mul r122[3u32].index r359 into r360;
    ternary r355 r360 1field into r361;
    mul r352 r361 into r362;
    is.neq 1u8 4u8 into r363;
    is.neq r122[4u32].index 0field into r364;
    and r363 r364 into r365;
    sub r122[4u32].index r122[1u32].index into r366;
    is.eq r366 0field into r367;
    ternary r367 1field r366 into r368;
    inv r368 into r369;
    mul r122[4u32].index r369 into r370;
    ternary r365 r370 1field into r371;
    mul r362 r371 into r372;
    is.neq 1u8 5u8 into r373;
    is.neq r122[5u32].index 0field into r374;
    and r373 r374 into r375;
    sub r122[5u32].index r122[1u32].index into r376;
    is.eq r376 0field into r377;
    ternary r377 1field r376 into r378;
    inv r378 into r379;
    mul r122[5u32].index r379 into r380;
    ternary r375 r380 1field into r381;
    mul r372 r381 into r382;
    is.neq 1u8 6u8 into r383;
    is.neq r122[6u32].index 0field into r384;
    and r383 r384 into r385;
    sub r122[6u32].index r122[1u32].index into r386;
    is.eq r386 0field into r387;
    ternary r387 1field r386 into r388;
    inv r388 into r389;
    mul r122[6u32].index r389 into r390;
    ternary r385 r390 1field into r391;
    mul r382 r391 into r392;
    is.neq 1u8 7u8 into r393;
    is.neq r122[7u32].index 0field into r394;
    and r393 r394 into r395;
    sub r122[7u32].index r122[1u32].index into r396;
    is.eq r396 0field into r397;
    ternary r397 1field r396 into r398;
    inv r398 into r399;
    mul r122[7u32].index r399 into r400;
    ternary r395 r400 1field into r401;
    mul r392 r401 into r402;
    is.neq 1u8 8u8 into r403;
    is.neq r122[8u32].index 0field into r404;
    and r403 r404 into r405;
    sub r122[8u32].index r122[1u32].index into r406;
    is.eq r406 0field into r407;
    ternary r407 1field r406 into r408;
    inv r408 into r409;
    mul r122[8u32].index r409 into r410;
    ternary r405 r410 1field into r411;
    mul r402 r411 into r412;
    is.neq 1u8 9u8 into r413;
    is.neq r122[9u32].index 0field into r414;
    and r413 r414 into r415;
    sub r122[9u32].index r122[1u32].index into r416;
    is.eq r416 0field into r417;
    ternary r417 1field r416 into r418;
    inv r418 into r419;
    mul r122[9u32].index r419 into r420;
    ternary r415 r420 1field into r421;
    mul r412 r421 into r422;
    is.neq 1u8 10u8 into r423;
    is.neq r122[10u32].index 0field into r424;
    and r423 r424 into r425;
    sub r122[10u32].index r122[1u32].index into r426;
    is.eq r426 0field into r427;
    ternary r427 1field r426 into r428;
    inv r428 into r429;
    mul r122[10u32].index r429 into r430;
    ternary r425 r430 1field into r431;
    mul r422 r431 into r432;
    is.neq 1u8 11u8 into r433;
    is.neq r122[11u32].index 0field into r434;
    and r433 r434 into r435;
    sub r122[11u32].index r122[1u32].index into r436;
    is.eq r436 0field into r437;
    ternary r437 1field r436 into r438;
    inv r438 into r439;
    mul r122[11u32].index r439 into r440;
    ternary r435 r440 1field into r441;
    mul r432 r441 into r442;
    is.neq 1u8 12u8 into r443;
    is.neq r122[12u32].index 0field into r444;
    and r443 r444 into r445;
    sub r122[12u32].index r122[1u32].index into r446;
    is.eq r446 0field into r447;
    ternary r447 1field r446 into r448;
    inv r448 into r449;
    mul r122[12u32].index r449 into r450;
    ternary r445 r450 1field into r451;
    mul r442 r451 into r452;
    is.neq 1u8 13u8 into r453;
    is.neq r122[13u32].index 0field into r454;
    and r453 r454 into r455;
    sub r122[13u32].index r122[1u32].index into r456;
    is.eq r456 0field into r457;
    ternary r457 1field r456 into r458;
    inv r458 into r459;
    mul r122[13u32].index r459 into r460;
    ternary r455 r460 1field into r461;
    mul r452 r461 into r462;
    is.neq 1u8 14u8 into r463;
    is.neq r122[14u32].index 0field into r464;
    and r463 r464 into r465;
    sub r122[14u32].index r122[1u32].index into r466;
    is.eq r466 0field into r467;
    ternary r467 1field r466 into r468;
    inv r468 into r469;
    mul r122[14u32].index r469 into r470;
    ternary r465 r470 1field into r471;
    mul r462 r471 into r472;
    is.neq r122[1u32].index 0field into r473;
    mul r122[1u32].share_val r472 into r474;
    ternary r473 r474 0field into r475;
    add r322 r475 into r476;
    is.neq 2u8 0u8 into r477;
    is.neq r122[0u32].index 0field into r478;
    and r477 r478 into r479;
    sub r122[0u32].index r122[2u32].index into r480;
    is.eq r480 0field into r481;
    ternary r481 1field r480 into r482;
    inv r482 into r483;
    mul r122[0u32].index r483 into r484;
    ternary r479 r484 1field into r485;
    mul 1field r485 into r486;
    is.neq 2u8 1u8 into r487;
    is.neq r122[1u32].index 0field into r488;
    and r487 r488 into r489;
    sub r122[1u32].index r122[2u32].index into r490;
    is.eq r490 0field into r491;
    ternary r491 1field r490 into r492;
    inv r492 into r493;
    mul r122[1u32].index r493 into r494;
    ternary r489 r494 1field into r495;
    mul r486 r495 into r496;
    is.neq 2u8 2u8 into r497;
    is.neq r122[2u32].index 0field into r498;
    and r497 r498 into r499;
    sub r122[2u32].index r122[2u32].index into r500;
    is.eq r500 0field into r501;
    ternary r501 1field r500 into r502;
    inv r502 into r503;
    mul r122[2u32].index r503 into r504;
    ternary r499 r504 1field into r505;
    mul r496 r505 into r506;
    is.neq 2u8 3u8 into r507;
    is.neq r122[3u32].index 0field into r508;
    and r507 r508 into r509;
    sub r122[3u32].index r122[2u32].index into r510;
    is.eq r510 0field into r511;
    ternary r511 1field r510 into r512;
    inv r512 into r513;
    mul r122[3u32].index r513 into r514;
    ternary r509 r514 1field into r515;
    mul r506 r515 into r516;
    is.neq 2u8 4u8 into r517;
    is.neq r122[4u32].index 0field into r518;
    and r517 r518 into r519;
    sub r122[4u32].index r122[2u32].index into r520;
    is.eq r520 0field into r521;
    ternary r521 1field r520 into r522;
    inv r522 into r523;
    mul r122[4u32].index r523 into r524;
    ternary r519 r524 1field into r525;
    mul r516 r525 into r526;
    is.neq 2u8 5u8 into r527;
    is.neq r122[5u32].index 0field into r528;
    and r527 r528 into r529;
    sub r122[5u32].index r122[2u32].index into r530;
    is.eq r530 0field into r531;
    ternary r531 1field r530 into r532;
    inv r532 into r533;
    mul r122[5u32].index r533 into r534;
    ternary r529 r534 1field into r535;
    mul r526 r535 into r536;
    is.neq 2u8 6u8 into r537;
    is.neq r122[6u32].index 0field into r538;
    and r537 r538 into r539;
    sub r122[6u32].index r122[2u32].index into r540;
    is.eq r540 0field into r541;
    ternary r541 1field r540 into r542;
    inv r542 into r543;
    mul r122[6u32].index r543 into r544;
    ternary r539 r544 1field into r545;
    mul r536 r545 into r546;
    is.neq 2u8 7u8 into r547;
    is.neq r122[7u32].index 0field into r548;
    and r547 r548 into r549;
    sub r122[7u32].index r122[2u32].index into r550;
    is.eq r550 0field into r551;
    ternary r551 1field r550 into r552;
    inv r552 into r553;
    mul r122[7u32].index r553 into r554;
    ternary r549 r554 1field into r555;
    mul r546 r555 into r556;
    is.neq 2u8 8u8 into r557;
    is.neq r122[8u32].index 0field into r558;
    and r557 r558 into r559;
    sub r122[8u32].index r122[2u32].index into r560;
    is.eq r560 0field into r561;
    ternary r561 1field r560 into r562;
    inv r562 into r563;
    mul r122[8u32].index r563 into r564;
    ternary r559 r564 1field into r565;
    mul r556 r565 into r566;
    is.neq 2u8 9u8 into r567;
    is.neq r122[9u32].index 0field into r568;
    and r567 r568 into r569;
    sub r122[9u32].index r122[2u32].index into r570;
    is.eq r570 0field into r571;
    ternary r571 1field r570 into r572;
    inv r572 into r573;
    mul r122[9u32].index r573 into r574;
    ternary r569 r574 1field into r575;
    mul r566 r575 into r576;
    is.neq 2u8 10u8 into r577;
    is.neq r122[10u32].index 0field into r578;
    and r577 r578 into r579;
    sub r122[10u32].index r122[2u32].index into r580;
    is.eq r580 0field into r581;
    ternary r581 1field r580 into r582;
    inv r582 into r583;
    mul r122[10u32].index r583 into r584;
    ternary r579 r584 1field into r585;
    mul r576 r585 into r586;
    is.neq 2u8 11u8 into r587;
    is.neq r122[11u32].index 0field into r588;
    and r587 r588 into r589;
    sub r122[11u32].index r122[2u32].index into r590;
    is.eq r590 0field into r591;
    ternary r591 1field r590 into r592;
    inv r592 into r593;
    mul r122[11u32].index r593 into r594;
    ternary r589 r594 1field into r595;
    mul r586 r595 into r596;
    is.neq 2u8 12u8 into r597;
    is.neq r122[12u32].index 0field into r598;
    and r597 r598 into r599;
    sub r122[12u32].index r122[2u32].index into r600;
    is.eq r600 0field into r601;
    ternary r601 1field r600 into r602;
    inv r602 into r603;
    mul r122[12u32].index r603 into r604;
    ternary r599 r604 1field into r605;
    mul r596 r605 into r606;
    is.neq 2u8 13u8 into r607;
    is.neq r122[13u32].index 0field into r608;
    and r607 r608 into r609;
    sub r122[13u32].index r122[2u32].index into r610;
    is.eq r610 0field into r611;
    ternary r611 1field r610 into r612;
    inv r612 into r613;
    mul r122[13u32].index r613 into r614;
    ternary r609 r614 1field into r615;
    mul r606 r615 into r616;
    is.neq 2u8 14u8 into r617;
    is.neq r122[14u32].index 0field into r618;
    and r617 r618 into r619;
    sub r122[14u32].index r122[2u32].index into r620;
    is.eq r620 0field into r621;
    ternary r621 1field r620 into r622;
    inv r622 into r623;
    mul r122[14u32].index r623 into r624;
    ternary r619 r624 1field into r625;
    mul r616 r625 into r626;
    is.neq r122[2u32].index 0field into r627;
    mul r122[2u32].share_val r626 into r628;
    ternary r627 r628 0field into r629;
    add r476 r629 into r630;
    is.neq 3u8 0u8 into r631;
    is.neq r122[0u32].index 0field into r632;
    and r631 r632 into r633;
    sub r122[0u32].index r122[3u32].index into r634;
    is.eq r634 0field into r635;
    ternary r635 1field r634 into r636;
    inv r636 into r637;
    mul r122[0u32].index r637 into r638;
    ternary r633 r638 1field into r639;
    mul 1field r639 into r640;
    is.neq 3u8 1u8 into r641;
    is.neq r122[1u32].index 0field into r642;
    and r641 r642 into r643;
    sub r122[1u32].index r122[3u32].index into r644;
    is.eq r644 0field into r645;
    ternary r645 1field r644 into r646;
    inv r646 into r647;
    mul r122[1u32].index r647 into r648;
    ternary r643 r648 1field into r649;
    mul r640 r649 into r650;
    is.neq 3u8 2u8 into r651;
    is.neq r122[2u32].index 0field into r652;
    and r651 r652 into r653;
    sub r122[2u32].index r122[3u32].index into r654;
    is.eq r654 0field into r655;
    ternary r655 1field r654 into r656;
    inv r656 into r657;
    mul r122[2u32].index r657 into r658;
    ternary r653 r658 1field into r659;
    mul r650 r659 into r660;
    is.neq 3u8 3u8 into r661;
    is.neq r122[3u32].index 0field into r662;
    and r661 r662 into r663;
    sub r122[3u32].index r122[3u32].index into r664;
    is.eq r664 0field into r665;
    ternary r665 1field r664 into r666;
    inv r666 into r667;
    mul r122[3u32].index r667 into r668;
    ternary r663 r668 1field into r669;
    mul r660 r669 into r670;
    is.neq 3u8 4u8 into r671;
    is.neq r122[4u32].index 0field into r672;
    and r671 r672 into r673;
    sub r122[4u32].index r122[3u32].index into r674;
    is.eq r674 0field into r675;
    ternary r675 1field r674 into r676;
    inv r676 into r677;
    mul r122[4u32].index r677 into r678;
    ternary r673 r678 1field into r679;
    mul r670 r679 into r680;
    is.neq 3u8 5u8 into r681;
    is.neq r122[5u32].index 0field into r682;
    and r681 r682 into r683;
    sub r122[5u32].index r122[3u32].index into r684;
    is.eq r684 0field into r685;
    ternary r685 1field r684 into r686;
    inv r686 into r687;
    mul r122[5u32].index r687 into r688;
    ternary r683 r688 1field into r689;
    mul r680 r689 into r690;
    is.neq 3u8 6u8 into r691;
    is.neq r122[6u32].index 0field into r692;
    and r691 r692 into r693;
    sub r122[6u32].index r122[3u32].index into r694;
    is.eq r694 0field into r695;
    ternary r695 1field r694 into r696;
    inv r696 into r697;
    mul r122[6u32].index r697 into r698;
    ternary r693 r698 1field into r699;
    mul r690 r699 into r700;
    is.neq 3u8 7u8 into r701;
    is.neq r122[7u32].index 0field into r702;
    and r701 r702 into r703;
    sub r122[7u32].index r122[3u32].index into r704;
    is.eq r704 0field into r705;
    ternary r705 1field r704 into r706;
    inv r706 into r707;
    mul r122[7u32].index r707 into r708;
    ternary r703 r708 1field into r709;
    mul r700 r709 into r710;
    is.neq 3u8 8u8 into r711;
    is.neq r122[8u32].index 0field into r712;
    and r711 r712 into r713;
    sub r122[8u32].index r122[3u32].index into r714;
    is.eq r714 0field into r715;
    ternary r715 1field r714 into r716;
    inv r716 into r717;
    mul r122[8u32].index r717 into r718;
    ternary r713 r718 1field into r719;
    mul r710 r719 into r720;
    is.neq 3u8 9u8 into r721;
    is.neq r122[9u32].index 0field into r722;
    and r721 r722 into r723;
    sub r122[9u32].index r122[3u32].index into r724;
    is.eq r724 0field into r725;
    ternary r725 1field r724 into r726;
    inv r726 into r727;
    mul r122[9u32].index r727 into r728;
    ternary r723 r728 1field into r729;
    mul r720 r729 into r730;
    is.neq 3u8 10u8 into r731;
    is.neq r122[10u32].index 0field into r732;
    and r731 r732 into r733;
    sub r122[10u32].index r122[3u32].index into r734;
    is.eq r734 0field into r735;
    ternary r735 1field r734 into r736;
    inv r736 into r737;
    mul r122[10u32].index r737 into r738;
    ternary r733 r738 1field into r739;
    mul r730 r739 into r740;
    is.neq 3u8 11u8 into r741;
    is.neq r122[11u32].index 0field into r742;
    and r741 r742 into r743;
    sub r122[11u32].index r122[3u32].index into r744;
    is.eq r744 0field into r745;
    ternary r745 1field r744 into r746;
    inv r746 into r747;
    mul r122[11u32].index r747 into r748;
    ternary r743 r748 1field into r749;
    mul r740 r749 into r750;
    is.neq 3u8 12u8 into r751;
    is.neq r122[12u32].index 0field into r752;
    and r751 r752 into r753;
    sub r122[12u32].index r122[3u32].index into r754;
    is.eq r754 0field into r755;
    ternary r755 1field r754 into r756;
    inv r756 into r757;
    mul r122[12u32].index r757 into r758;
    ternary r753 r758 1field into r759;
    mul r750 r759 into r760;
    is.neq 3u8 13u8 into r761;
    is.neq r122[13u32].index 0field into r762;
    and r761 r762 into r763;
    sub r122[13u32].index r122[3u32].index into r764;
    is.eq r764 0field into r765;
    ternary r765 1field r764 into r766;
    inv r766 into r767;
    mul r122[13u32].index r767 into r768;
    ternary r763 r768 1field into r769;
    mul r760 r769 into r770;
    is.neq 3u8 14u8 into r771;
    is.neq r122[14u32].index 0field into r772;
    and r771 r772 into r773;
    sub r122[14u32].index r122[3u32].index into r774;
    is.eq r774 0field into r775;
    ternary r775 1field r774 into r776;
    inv r776 into r777;
    mul r122[14u32].index r777 into r778;
    ternary r773 r778 1field into r779;
    mul r770 r779 into r780;
    is.neq r122[3u32].index 0field into r781;
    mul r122[3u32].share_val r780 into r782;
    ternary r781 r782 0field into r783;
    add r630 r783 into r784;
    is.neq 4u8 0u8 into r785;
    is.neq r122[0u32].index 0field into r786;
    and r785 r786 into r787;
    sub r122[0u32].index r122[4u32].index into r788;
    is.eq r788 0field into r789;
    ternary r789 1field r788 into r790;
    inv r790 into r791;
    mul r122[0u32].index r791 into r792;
    ternary r787 r792 1field into r793;
    mul 1field r793 into r794;
    is.neq 4u8 1u8 into r795;
    is.neq r122[1u32].index 0field into r796;
    and r795 r796 into r797;
    sub r122[1u32].index r122[4u32].index into r798;
    is.eq r798 0field into r799;
    ternary r799 1field r798 into r800;
    inv r800 into r801;
    mul r122[1u32].index r801 into r802;
    ternary r797 r802 1field into r803;
    mul r794 r803 into r804;
    is.neq 4u8 2u8 into r805;
    is.neq r122[2u32].index 0field into r806;
    and r805 r806 into r807;
    sub r122[2u32].index r122[4u32].index into r808;
    is.eq r808 0field into r809;
    ternary r809 1field r808 into r810;
    inv r810 into r811;
    mul r122[2u32].index r811 into r812;
    ternary r807 r812 1field into r813;
    mul r804 r813 into r814;
    is.neq 4u8 3u8 into r815;
    is.neq r122[3u32].index 0field into r816;
    and r815 r816 into r817;
    sub r122[3u32].index r122[4u32].index into r818;
    is.eq r818 0field into r819;
    ternary r819 1field r818 into r820;
    inv r820 into r821;
    mul r122[3u32].index r821 into r822;
    ternary r817 r822 1field into r823;
    mul r814 r823 into r824;
    is.neq 4u8 4u8 into r825;
    is.neq r122[4u32].index 0field into r826;
    and r825 r826 into r827;
    sub r122[4u32].index r122[4u32].index into r828;
    is.eq r828 0field into r829;
    ternary r829 1field r828 into r830;
    inv r830 into r831;
    mul r122[4u32].index r831 into r832;
    ternary r827 r832 1field into r833;
    mul r824 r833 into r834;
    is.neq 4u8 5u8 into r835;
    is.neq r122[5u32].index 0field into r836;
    and r835 r836 into r837;
    sub r122[5u32].index r122[4u32].index into r838;
    is.eq r838 0field into r839;
    ternary r839 1field r838 into r840;
    inv r840 into r841;
    mul r122[5u32].index r841 into r842;
    ternary r837 r842 1field into r843;
    mul r834 r843 into r844;
    is.neq 4u8 6u8 into r845;
    is.neq r122[6u32].index 0field into r846;
    and r845 r846 into r847;
    sub r122[6u32].index r122[4u32].index into r848;
    is.eq r848 0field into r849;
    ternary r849 1field r848 into r850;
    inv r850 into r851;
    mul r122[6u32].index r851 into r852;
    ternary r847 r852 1field into r853;
    mul r844 r853 into r854;
    is.neq 4u8 7u8 into r855;
    is.neq r122[7u32].index 0field into r856;
    and r855 r856 into r857;
    sub r122[7u32].index r122[4u32].index into r858;
    is.eq r858 0field into r859;
    ternary r859 1field r858 into r860;
    inv r860 into r861;
    mul r122[7u32].index r861 into r862;
    ternary r857 r862 1field into r863;
    mul r854 r863 into r864;
    is.neq 4u8 8u8 into r865;
    is.neq r122[8u32].index 0field into r866;
    and r865 r866 into r867;
    sub r122[8u32].index r122[4u32].index into r868;
    is.eq r868 0field into r869;
    ternary r869 1field r868 into r870;
    inv r870 into r871;
    mul r122[8u32].index r871 into r872;
    ternary r867 r872 1field into r873;
    mul r864 r873 into r874;
    is.neq 4u8 9u8 into r875;
    is.neq r122[9u32].index 0field into r876;
    and r875 r876 into r877;
    sub r122[9u32].index r122[4u32].index into r878;
    is.eq r878 0field into r879;
    ternary r879 1field r878 into r880;
    inv r880 into r881;
    mul r122[9u32].index r881 into r882;
    ternary r877 r882 1field into r883;
    mul r874 r883 into r884;
    is.neq 4u8 10u8 into r885;
    is.neq r122[10u32].index 0field into r886;
    and r885 r886 into r887;
    sub r122[10u32].index r122[4u32].index into r888;
    is.eq r888 0field into r889;
    ternary r889 1field r888 into r890;
    inv r890 into r891;
    mul r122[10u32].index r891 into r892;
    ternary r887 r892 1field into r893;
    mul r884 r893 into r894;
    is.neq 4u8 11u8 into r895;
    is.neq r122[11u32].index 0field into r896;
    and r895 r896 into r897;
    sub r122[11u32].index r122[4u32].index into r898;
    is.eq r898 0field into r899;
    ternary r899 1field r898 into r900;
    inv r900 into r901;
    mul r122[11u32].index r901 into r902;
    ternary r897 r902 1field into r903;
    mul r894 r903 into r904;
    is.neq 4u8 12u8 into r905;
    is.neq r122[12u32].index 0field into r906;
    and r905 r906 into r907;
    sub r122[12u32].index r122[4u32].index into r908;
    is.eq r908 0field into r909;
    ternary r909 1field r908 into r910;
    inv r910 into r911;
    mul r122[12u32].index r911 into r912;
    ternary r907 r912 1field into r913;
    mul r904 r913 into r914;
    is.neq 4u8 13u8 into r915;
    is.neq r122[13u32].index 0field into r916;
    and r915 r916 into r917;
    sub r122[13u32].index r122[4u32].index into r918;
    is.eq r918 0field into r919;
    ternary r919 1field r918 into r920;
    inv r920 into r921;
    mul r122[13u32].index r921 into r922;
    ternary r917 r922 1field into r923;
    mul r914 r923 into r924;
    is.neq 4u8 14u8 into r925;
    is.neq r122[14u32].index 0field into r926;
    and r925 r926 into r927;
    sub r122[14u32].index r122[4u32].index into r928;
    is.eq r928 0field into r929;
    ternary r929 1field r928 into r930;
    inv r930 into r931;
    mul r122[14u32].index r931 into r932;
    ternary r927 r932 1field into r933;
    mul r924 r933 into r934;
    is.neq r122[4u32].index 0field into r935;
    mul r122[4u32].share_val r934 into r936;
    ternary r935 r936 0field into r937;
    add r784 r937 into r938;
    is.neq 5u8 0u8 into r939;
    is.neq r122[0u32].index 0field into r940;
    and r939 r940 into r941;
    sub r122[0u32].index r122[5u32].index into r942;
    is.eq r942 0field into r943;
    ternary r943 1field r942 into r944;
    inv r944 into r945;
    mul r122[0u32].index r945 into r946;
    ternary r941 r946 1field into r947;
    mul 1field r947 into r948;
    is.neq 5u8 1u8 into r949;
    is.neq r122[1u32].index 0field into r950;
    and r949 r950 into r951;
    sub r122[1u32].index r122[5u32].index into r952;
    is.eq r952 0field into r953;
    ternary r953 1field r952 into r954;
    inv r954 into r955;
    mul r122[1u32].index r955 into r956;
    ternary r951 r956 1field into r957;
    mul r948 r957 into r958;
    is.neq 5u8 2u8 into r959;
    is.neq r122[2u32].index 0field into r960;
    and r959 r960 into r961;
    sub r122[2u32].index r122[5u32].index into r962;
    is.eq r962 0field into r963;
    ternary r963 1field r962 into r964;
    inv r964 into r965;
    mul r122[2u32].index r965 into r966;
    ternary r961 r966 1field into r967;
    mul r958 r967 into r968;
    is.neq 5u8 3u8 into r969;
    is.neq r122[3u32].index 0field into r970;
    and r969 r970 into r971;
    sub r122[3u32].index r122[5u32].index into r972;
    is.eq r972 0field into r973;
    ternary r973 1field r972 into r974;
    inv r974 into r975;
    mul r122[3u32].index r975 into r976;
    ternary r971 r976 1field into r977;
    mul r968 r977 into r978;
    is.neq 5u8 4u8 into r979;
    is.neq r122[4u32].index 0field into r980;
    and r979 r980 into r981;
    sub r122[4u32].index r122[5u32].index into r982;
    is.eq r982 0field into r983;
    ternary r983 1field r982 into r984;
    inv r984 into r985;
    mul r122[4u32].index r985 into r986;
    ternary r981 r986 1field into r987;
    mul r978 r987 into r988;
    is.neq 5u8 5u8 into r989;
    is.neq r122[5u32].index 0field into r990;
    and r989 r990 into r991;
    sub r122[5u32].index r122[5u32].index into r992;
    is.eq r992 0field into r993;
    ternary r993 1field r992 into r994;
    inv r994 into r995;
    mul r122[5u32].index r995 into r996;
    ternary r991 r996 1field into r997;
    mul r988 r997 into r998;
    is.neq 5u8 6u8 into r999;
    is.neq r122[6u32].index 0field into r1000;
    and r999 r1000 into r1001;
    sub r122[6u32].index r122[5u32].index into r1002;
    is.eq r1002 0field into r1003;
    ternary r1003 1field r1002 into r1004;
    inv r1004 into r1005;
    mul r122[6u32].index r1005 into r1006;
    ternary r1001 r1006 1field into r1007;
    mul r998 r1007 into r1008;
    is.neq 5u8 7u8 into r1009;
    is.neq r122[7u32].index 0field into r1010;
    and r1009 r1010 into r1011;
    sub r122[7u32].index r122[5u32].index into r1012;
    is.eq r1012 0field into r1013;
    ternary r1013 1field r1012 into r1014;
    inv r1014 into r1015;
    mul r122[7u32].index r1015 into r1016;
    ternary r1011 r1016 1field into r1017;
    mul r1008 r1017 into r1018;
    is.neq 5u8 8u8 into r1019;
    is.neq r122[8u32].index 0field into r1020;
    and r1019 r1020 into r1021;
    sub r122[8u32].index r122[5u32].index into r1022;
    is.eq r1022 0field into r1023;
    ternary r1023 1field r1022 into r1024;
    inv r1024 into r1025;
    mul r122[8u32].index r1025 into r1026;
    ternary r1021 r1026 1field into r1027;
    mul r1018 r1027 into r1028;
    is.neq 5u8 9u8 into r1029;
    is.neq r122[9u32].index 0field into r1030;
    and r1029 r1030 into r1031;
    sub r122[9u32].index r122[5u32].index into r1032;
    is.eq r1032 0field into r1033;
    ternary r1033 1field r1032 into r1034;
    inv r1034 into r1035;
    mul r122[9u32].index r1035 into r1036;
    ternary r1031 r1036 1field into r1037;
    mul r1028 r1037 into r1038;
    is.neq 5u8 10u8 into r1039;
    is.neq r122[10u32].index 0field into r1040;
    and r1039 r1040 into r1041;
    sub r122[10u32].index r122[5u32].index into r1042;
    is.eq r1042 0field into r1043;
    ternary r1043 1field r1042 into r1044;
    inv r1044 into r1045;
    mul r122[10u32].index r1045 into r1046;
    ternary r1041 r1046 1field into r1047;
    mul r1038 r1047 into r1048;
    is.neq 5u8 11u8 into r1049;
    is.neq r122[11u32].index 0field into r1050;
    and r1049 r1050 into r1051;
    sub r122[11u32].index r122[5u32].index into r1052;
    is.eq r1052 0field into r1053;
    ternary r1053 1field r1052 into r1054;
    inv r1054 into r1055;
    mul r122[11u32].index r1055 into r1056;
    ternary r1051 r1056 1field into r1057;
    mul r1048 r1057 into r1058;
    is.neq 5u8 12u8 into r1059;
    is.neq r122[12u32].index 0field into r1060;
    and r1059 r1060 into r1061;
    sub r122[12u32].index r122[5u32].index into r1062;
    is.eq r1062 0field into r1063;
    ternary r1063 1field r1062 into r1064;
    inv r1064 into r1065;
    mul r122[12u32].index r1065 into r1066;
    ternary r1061 r1066 1field into r1067;
    mul r1058 r1067 into r1068;
    is.neq 5u8 13u8 into r1069;
    is.neq r122[13u32].index 0field into r1070;
    and r1069 r1070 into r1071;
    sub r122[13u32].index r122[5u32].index into r1072;
    is.eq r1072 0field into r1073;
    ternary r1073 1field r1072 into r1074;
    inv r1074 into r1075;
    mul r122[13u32].index r1075 into r1076;
    ternary r1071 r1076 1field into r1077;
    mul r1068 r1077 into r1078;
    is.neq 5u8 14u8 into r1079;
    is.neq r122[14u32].index 0field into r1080;
    and r1079 r1080 into r1081;
    sub r122[14u32].index r122[5u32].index into r1082;
    is.eq r1082 0field into r1083;
    ternary r1083 1field r1082 into r1084;
    inv r1084 into r1085;
    mul r122[14u32].index r1085 into r1086;
    ternary r1081 r1086 1field into r1087;
    mul r1078 r1087 into r1088;
    is.neq r122[5u32].index 0field into r1089;
    mul r122[5u32].share_val r1088 into r1090;
    ternary r1089 r1090 0field into r1091;
    add r938 r1091 into r1092;
    is.neq 6u8 0u8 into r1093;
    is.neq r122[0u32].index 0field into r1094;
    and r1093 r1094 into r1095;
    sub r122[0u32].index r122[6u32].index into r1096;
    is.eq r1096 0field into r1097;
    ternary r1097 1field r1096 into r1098;
    inv r1098 into r1099;
    mul r122[0u32].index r1099 into r1100;
    ternary r1095 r1100 1field into r1101;
    mul 1field r1101 into r1102;
    is.neq 6u8 1u8 into r1103;
    is.neq r122[1u32].index 0field into r1104;
    and r1103 r1104 into r1105;
    sub r122[1u32].index r122[6u32].index into r1106;
    is.eq r1106 0field into r1107;
    ternary r1107 1field r1106 into r1108;
    inv r1108 into r1109;
    mul r122[1u32].index r1109 into r1110;
    ternary r1105 r1110 1field into r1111;
    mul r1102 r1111 into r1112;
    is.neq 6u8 2u8 into r1113;
    is.neq r122[2u32].index 0field into r1114;
    and r1113 r1114 into r1115;
    sub r122[2u32].index r122[6u32].index into r1116;
    is.eq r1116 0field into r1117;
    ternary r1117 1field r1116 into r1118;
    inv r1118 into r1119;
    mul r122[2u32].index r1119 into r1120;
    ternary r1115 r1120 1field into r1121;
    mul r1112 r1121 into r1122;
    is.neq 6u8 3u8 into r1123;
    is.neq r122[3u32].index 0field into r1124;
    and r1123 r1124 into r1125;
    sub r122[3u32].index r122[6u32].index into r1126;
    is.eq r1126 0field into r1127;
    ternary r1127 1field r1126 into r1128;
    inv r1128 into r1129;
    mul r122[3u32].index r1129 into r1130;
    ternary r1125 r1130 1field into r1131;
    mul r1122 r1131 into r1132;
    is.neq 6u8 4u8 into r1133;
    is.neq r122[4u32].index 0field into r1134;
    and r1133 r1134 into r1135;
    sub r122[4u32].index r122[6u32].index into r1136;
    is.eq r1136 0field into r1137;
    ternary r1137 1field r1136 into r1138;
    inv r1138 into r1139;
    mul r122[4u32].index r1139 into r1140;
    ternary r1135 r1140 1field into r1141;
    mul r1132 r1141 into r1142;
    is.neq 6u8 5u8 into r1143;
    is.neq r122[5u32].index 0field into r1144;
    and r1143 r1144 into r1145;
    sub r122[5u32].index r122[6u32].index into r1146;
    is.eq r1146 0field into r1147;
    ternary r1147 1field r1146 into r1148;
    inv r1148 into r1149;
    mul r122[5u32].index r1149 into r1150;
    ternary r1145 r1150 1field into r1151;
    mul r1142 r1151 into r1152;
    is.neq 6u8 6u8 into r1153;
    is.neq r122[6u32].index 0field into r1154;
    and r1153 r1154 into r1155;
    sub r122[6u32].index r122[6u32].index into r1156;
    is.eq r1156 0field into r1157;
    ternary r1157 1field r1156 into r1158;
    inv r1158 into r1159;
    mul r122[6u32].index r1159 into r1160;
    ternary r1155 r1160 1field into r1161;
    mul r1152 r1161 into r1162;
    is.neq 6u8 7u8 into r1163;
    is.neq r122[7u32].index 0field into r1164;
    and r1163 r1164 into r1165;
    sub r122[7u32].index r122[6u32].index into r1166;
    is.eq r1166 0field into r1167;
    ternary r1167 1field r1166 into r1168;
    inv r1168 into r1169;
    mul r122[7u32].index r1169 into r1170;
    ternary r1165 r1170 1field into r1171;
    mul r1162 r1171 into r1172;
    is.neq 6u8 8u8 into r1173;
    is.neq r122[8u32].index 0field into r1174;
    and r1173 r1174 into r1175;
    sub r122[8u32].index r122[6u32].index into r1176;
    is.eq r1176 0field into r1177;
    ternary r1177 1field r1176 into r1178;
    inv r1178 into r1179;
    mul r122[8u32].index r1179 into r1180;
    ternary r1175 r1180 1field into r1181;
    mul r1172 r1181 into r1182;
    is.neq 6u8 9u8 into r1183;
    is.neq r122[9u32].index 0field into r1184;
    and r1183 r1184 into r1185;
    sub r122[9u32].index r122[6u32].index into r1186;
    is.eq r1186 0field into r1187;
    ternary r1187 1field r1186 into r1188;
    inv r1188 into r1189;
    mul r122[9u32].index r1189 into r1190;
    ternary r1185 r1190 1field into r1191;
    mul r1182 r1191 into r1192;
    is.neq 6u8 10u8 into r1193;
    is.neq r122[10u32].index 0field into r1194;
    and r1193 r1194 into r1195;
    sub r122[10u32].index r122[6u32].index into r1196;
    is.eq r1196 0field into r1197;
    ternary r1197 1field r1196 into r1198;
    inv r1198 into r1199;
    mul r122[10u32].index r1199 into r1200;
    ternary r1195 r1200 1field into r1201;
    mul r1192 r1201 into r1202;
    is.neq 6u8 11u8 into r1203;
    is.neq r122[11u32].index 0field into r1204;
    and r1203 r1204 into r1205;
    sub r122[11u32].index r122[6u32].index into r1206;
    is.eq r1206 0field into r1207;
    ternary r1207 1field r1206 into r1208;
    inv r1208 into r1209;
    mul r122[11u32].index r1209 into r1210;
    ternary r1205 r1210 1field into r1211;
    mul r1202 r1211 into r1212;
    is.neq 6u8 12u8 into r1213;
    is.neq r122[12u32].index 0field into r1214;
    and r1213 r1214 into r1215;
    sub r122[12u32].index r122[6u32].index into r1216;
    is.eq r1216 0field into r1217;
    ternary r1217 1field r1216 into r1218;
    inv r1218 into r1219;
    mul r122[12u32].index r1219 into r1220;
    ternary r1215 r1220 1field into r1221;
    mul r1212 r1221 into r1222;
    is.neq 6u8 13u8 into r1223;
    is.neq r122[13u32].index 0field into r1224;
    and r1223 r1224 into r1225;
    sub r122[13u32].index r122[6u32].index into r1226;
    is.eq r1226 0field into r1227;
    ternary r1227 1field r1226 into r1228;
    inv r1228 into r1229;
    mul r122[13u32].index r1229 into r1230;
    ternary r1225 r1230 1field into r1231;
    mul r1222 r1231 into r1232;
    is.neq 6u8 14u8 into r1233;
    is.neq r122[14u32].index 0field into r1234;
    and r1233 r1234 into r1235;
    sub r122[14u32].index r122[6u32].index into r1236;
    is.eq r1236 0field into r1237;
    ternary r1237 1field r1236 into r1238;
    inv r1238 into r1239;
    mul r122[14u32].index r1239 into r1240;
    ternary r1235 r1240 1field into r1241;
    mul r1232 r1241 into r1242;
    is.neq r122[6u32].index 0field into r1243;
    mul r122[6u32].share_val r1242 into r1244;
    ternary r1243 r1244 0field into r1245;
    add r1092 r1245 into r1246;
    is.neq 7u8 0u8 into r1247;
    is.neq r122[0u32].index 0field into r1248;
    and r1247 r1248 into r1249;
    sub r122[0u32].index r122[7u32].index into r1250;
    is.eq r1250 0field into r1251;
    ternary r1251 1field r1250 into r1252;
    inv r1252 into r1253;
    mul r122[0u32].index r1253 into r1254;
    ternary r1249 r1254 1field into r1255;
    mul 1field r1255 into r1256;
    is.neq 7u8 1u8 into r1257;
    is.neq r122[1u32].index 0field into r1258;
    and r1257 r1258 into r1259;
    sub r122[1u32].index r122[7u32].index into r1260;
    is.eq r1260 0field into r1261;
    ternary r1261 1field r1260 into r1262;
    inv r1262 into r1263;
    mul r122[1u32].index r1263 into r1264;
    ternary r1259 r1264 1field into r1265;
    mul r1256 r1265 into r1266;
    is.neq 7u8 2u8 into r1267;
    is.neq r122[2u32].index 0field into r1268;
    and r1267 r1268 into r1269;
    sub r122[2u32].index r122[7u32].index into r1270;
    is.eq r1270 0field into r1271;
    ternary r1271 1field r1270 into r1272;
    inv r1272 into r1273;
    mul r122[2u32].index r1273 into r1274;
    ternary r1269 r1274 1field into r1275;
    mul r1266 r1275 into r1276;
    is.neq 7u8 3u8 into r1277;
    is.neq r122[3u32].index 0field into r1278;
    and r1277 r1278 into r1279;
    sub r122[3u32].index r122[7u32].index into r1280;
    is.eq r1280 0field into r1281;
    ternary r1281 1field r1280 into r1282;
    inv r1282 into r1283;
    mul r122[3u32].index r1283 into r1284;
    ternary r1279 r1284 1field into r1285;
    mul r1276 r1285 into r1286;
    is.neq 7u8 4u8 into r1287;
    is.neq r122[4u32].index 0field into r1288;
    and r1287 r1288 into r1289;
    sub r122[4u32].index r122[7u32].index into r1290;
    is.eq r1290 0field into r1291;
    ternary r1291 1field r1290 into r1292;
    inv r1292 into r1293;
    mul r122[4u32].index r1293 into r1294;
    ternary r1289 r1294 1field into r1295;
    mul r1286 r1295 into r1296;
    is.neq 7u8 5u8 into r1297;
    is.neq r122[5u32].index 0field into r1298;
    and r1297 r1298 into r1299;
    sub r122[5u32].index r122[7u32].index into r1300;
    is.eq r1300 0field into r1301;
    ternary r1301 1field r1300 into r1302;
    inv r1302 into r1303;
    mul r122[5u32].index r1303 into r1304;
    ternary r1299 r1304 1field into r1305;
    mul r1296 r1305 into r1306;
    is.neq 7u8 6u8 into r1307;
    is.neq r122[6u32].index 0field into r1308;
    and r1307 r1308 into r1309;
    sub r122[6u32].index r122[7u32].index into r1310;
    is.eq r1310 0field into r1311;
    ternary r1311 1field r1310 into r1312;
    inv r1312 into r1313;
    mul r122[6u32].index r1313 into r1314;
    ternary r1309 r1314 1field into r1315;
    mul r1306 r1315 into r1316;
    is.neq 7u8 7u8 into r1317;
    is.neq r122[7u32].index 0field into r1318;
    and r1317 r1318 into r1319;
    sub r122[7u32].index r122[7u32].index into r1320;
    is.eq r1320 0field into r1321;
    ternary r1321 1field r1320 into r1322;
    inv r1322 into r1323;
    mul r122[7u32].index r1323 into r1324;
    ternary r1319 r1324 1field into r1325;
    mul r1316 r1325 into r1326;
    is.neq 7u8 8u8 into r1327;
    is.neq r122[8u32].index 0field into r1328;
    and r1327 r1328 into r1329;
    sub r122[8u32].index r122[7u32].index into r1330;
    is.eq r1330 0field into r1331;
    ternary r1331 1field r1330 into r1332;
    inv r1332 into r1333;
    mul r122[8u32].index r1333 into r1334;
    ternary r1329 r1334 1field into r1335;
    mul r1326 r1335 into r1336;
    is.neq 7u8 9u8 into r1337;
    is.neq r122[9u32].index 0field into r1338;
    and r1337 r1338 into r1339;
    sub r122[9u32].index r122[7u32].index into r1340;
    is.eq r1340 0field into r1341;
    ternary r1341 1field r1340 into r1342;
    inv r1342 into r1343;
    mul r122[9u32].index r1343 into r1344;
    ternary r1339 r1344 1field into r1345;
    mul r1336 r1345 into r1346;
    is.neq 7u8 10u8 into r1347;
    is.neq r122[10u32].index 0field into r1348;
    and r1347 r1348 into r1349;
    sub r122[10u32].index r122[7u32].index into r1350;
    is.eq r1350 0field into r1351;
    ternary r1351 1field r1350 into r1352;
    inv r1352 into r1353;
    mul r122[10u32].index r1353 into r1354;
    ternary r1349 r1354 1field into r1355;
    mul r1346 r1355 into r1356;
    is.neq 7u8 11u8 into r1357;
    is.neq r122[11u32].index 0field into r1358;
    and r1357 r1358 into r1359;
    sub r122[11u32].index r122[7u32].index into r1360;
    is.eq r1360 0field into r1361;
    ternary r1361 1field r1360 into r1362;
    inv r1362 into r1363;
    mul r122[11u32].index r1363 into r1364;
    ternary r1359 r1364 1field into r1365;
    mul r1356 r1365 into r1366;
    is.neq 7u8 12u8 into r1367;
    is.neq r122[12u32].index 0field into r1368;
    and r1367 r1368 into r1369;
    sub r122[12u32].index r122[7u32].index into r1370;
    is.eq r1370 0field into r1371;
    ternary r1371 1field r1370 into r1372;
    inv r1372 into r1373;
    mul r122[12u32].index r1373 into r1374;
    ternary r1369 r1374 1field into r1375;
    mul r1366 r1375 into r1376;
    is.neq 7u8 13u8 into r1377;
    is.neq r122[13u32].index 0field into r1378;
    and r1377 r1378 into r1379;
    sub r122[13u32].index r122[7u32].index into r1380;
    is.eq r1380 0field into r1381;
    ternary r1381 1field r1380 into r1382;
    inv r1382 into r1383;
    mul r122[13u32].index r1383 into r1384;
    ternary r1379 r1384 1field into r1385;
    mul r1376 r1385 into r1386;
    is.neq 7u8 14u8 into r1387;
    is.neq r122[14u32].index 0field into r1388;
    and r1387 r1388 into r1389;
    sub r122[14u32].index r122[7u32].index into r1390;
    is.eq r1390 0field into r1391;
    ternary r1391 1field r1390 into r1392;
    inv r1392 into r1393;
    mul r122[14u32].index r1393 into r1394;
    ternary r1389 r1394 1field into r1395;
    mul r1386 r1395 into r1396;
    is.neq r122[7u32].index 0field into r1397;
    mul r122[7u32].share_val r1396 into r1398;
    ternary r1397 r1398 0field into r1399;
    add r1246 r1399 into r1400;
    is.neq 8u8 0u8 into r1401;
    is.neq r122[0u32].index 0field into r1402;
    and r1401 r1402 into r1403;
    sub r122[0u32].index r122[8u32].index into r1404;
    is.eq r1404 0field into r1405;
    ternary r1405 1field r1404 into r1406;
    inv r1406 into r1407;
    mul r122[0u32].index r1407 into r1408;
    ternary r1403 r1408 1field into r1409;
    mul 1field r1409 into r1410;
    is.neq 8u8 1u8 into r1411;
    is.neq r122[1u32].index 0field into r1412;
    and r1411 r1412 into r1413;
    sub r122[1u32].index r122[8u32].index into r1414;
    is.eq r1414 0field into r1415;
    ternary r1415 1field r1414 into r1416;
    inv r1416 into r1417;
    mul r122[1u32].index r1417 into r1418;
    ternary r1413 r1418 1field into r1419;
    mul r1410 r1419 into r1420;
    is.neq 8u8 2u8 into r1421;
    is.neq r122[2u32].index 0field into r1422;
    and r1421 r1422 into r1423;
    sub r122[2u32].index r122[8u32].index into r1424;
    is.eq r1424 0field into r1425;
    ternary r1425 1field r1424 into r1426;
    inv r1426 into r1427;
    mul r122[2u32].index r1427 into r1428;
    ternary r1423 r1428 1field into r1429;
    mul r1420 r1429 into r1430;
    is.neq 8u8 3u8 into r1431;
    is.neq r122[3u32].index 0field into r1432;
    and r1431 r1432 into r1433;
    sub r122[3u32].index r122[8u32].index into r1434;
    is.eq r1434 0field into r1435;
    ternary r1435 1field r1434 into r1436;
    inv r1436 into r1437;
    mul r122[3u32].index r1437 into r1438;
    ternary r1433 r1438 1field into r1439;
    mul r1430 r1439 into r1440;
    is.neq 8u8 4u8 into r1441;
    is.neq r122[4u32].index 0field into r1442;
    and r1441 r1442 into r1443;
    sub r122[4u32].index r122[8u32].index into r1444;
    is.eq r1444 0field into r1445;
    ternary r1445 1field r1444 into r1446;
    inv r1446 into r1447;
    mul r122[4u32].index r1447 into r1448;
    ternary r1443 r1448 1field into r1449;
    mul r1440 r1449 into r1450;
    is.neq 8u8 5u8 into r1451;
    is.neq r122[5u32].index 0field into r1452;
    and r1451 r1452 into r1453;
    sub r122[5u32].index r122[8u32].index into r1454;
    is.eq r1454 0field into r1455;
    ternary r1455 1field r1454 into r1456;
    inv r1456 into r1457;
    mul r122[5u32].index r1457 into r1458;
    ternary r1453 r1458 1field into r1459;
    mul r1450 r1459 into r1460;
    is.neq 8u8 6u8 into r1461;
    is.neq r122[6u32].index 0field into r1462;
    and r1461 r1462 into r1463;
    sub r122[6u32].index r122[8u32].index into r1464;
    is.eq r1464 0field into r1465;
    ternary r1465 1field r1464 into r1466;
    inv r1466 into r1467;
    mul r122[6u32].index r1467 into r1468;
    ternary r1463 r1468 1field into r1469;
    mul r1460 r1469 into r1470;
    is.neq 8u8 7u8 into r1471;
    is.neq r122[7u32].index 0field into r1472;
    and r1471 r1472 into r1473;
    sub r122[7u32].index r122[8u32].index into r1474;
    is.eq r1474 0field into r1475;
    ternary r1475 1field r1474 into r1476;
    inv r1476 into r1477;
    mul r122[7u32].index r1477 into r1478;
    ternary r1473 r1478 1field into r1479;
    mul r1470 r1479 into r1480;
    is.neq 8u8 8u8 into r1481;
    is.neq r122[8u32].index 0field into r1482;
    and r1481 r1482 into r1483;
    sub r122[8u32].index r122[8u32].index into r1484;
    is.eq r1484 0field into r1485;
    ternary r1485 1field r1484 into r1486;
    inv r1486 into r1487;
    mul r122[8u32].index r1487 into r1488;
    ternary r1483 r1488 1field into r1489;
    mul r1480 r1489 into r1490;
    is.neq 8u8 9u8 into r1491;
    is.neq r122[9u32].index 0field into r1492;
    and r1491 r1492 into r1493;
    sub r122[9u32].index r122[8u32].index into r1494;
    is.eq r1494 0field into r1495;
    ternary r1495 1field r1494 into r1496;
    inv r1496 into r1497;
    mul r122[9u32].index r1497 into r1498;
    ternary r1493 r1498 1field into r1499;
    mul r1490 r1499 into r1500;
    is.neq 8u8 10u8 into r1501;
    is.neq r122[10u32].index 0field into r1502;
    and r1501 r1502 into r1503;
    sub r122[10u32].index r122[8u32].index into r1504;
    is.eq r1504 0field into r1505;
    ternary r1505 1field r1504 into r1506;
    inv r1506 into r1507;
    mul r122[10u32].index r1507 into r1508;
    ternary r1503 r1508 1field into r1509;
    mul r1500 r1509 into r1510;
    is.neq 8u8 11u8 into r1511;
    is.neq r122[11u32].index 0field into r1512;
    and r1511 r1512 into r1513;
    sub r122[11u32].index r122[8u32].index into r1514;
    is.eq r1514 0field into r1515;
    ternary r1515 1field r1514 into r1516;
    inv r1516 into r1517;
    mul r122[11u32].index r1517 into r1518;
    ternary r1513 r1518 1field into r1519;
    mul r1510 r1519 into r1520;
    is.neq 8u8 12u8 into r1521;
    is.neq r122[12u32].index 0field into r1522;
    and r1521 r1522 into r1523;
    sub r122[12u32].index r122[8u32].index into r1524;
    is.eq r1524 0field into r1525;
    ternary r1525 1field r1524 into r1526;
    inv r1526 into r1527;
    mul r122[12u32].index r1527 into r1528;
    ternary r1523 r1528 1field into r1529;
    mul r1520 r1529 into r1530;
    is.neq 8u8 13u8 into r1531;
    is.neq r122[13u32].index 0field into r1532;
    and r1531 r1532 into r1533;
    sub r122[13u32].index r122[8u32].index into r1534;
    is.eq r1534 0field into r1535;
    ternary r1535 1field r1534 into r1536;
    inv r1536 into r1537;
    mul r122[13u32].index r1537 into r1538;
    ternary r1533 r1538 1field into r1539;
    mul r1530 r1539 into r1540;
    is.neq 8u8 14u8 into r1541;
    is.neq r122[14u32].index 0field into r1542;
    and r1541 r1542 into r1543;
    sub r122[14u32].index r122[8u32].index into r1544;
    is.eq r1544 0field into r1545;
    ternary r1545 1field r1544 into r1546;
    inv r1546 into r1547;
    mul r122[14u32].index r1547 into r1548;
    ternary r1543 r1548 1field into r1549;
    mul r1540 r1549 into r1550;
    is.neq r122[8u32].index 0field into r1551;
    mul r122[8u32].share_val r1550 into r1552;
    ternary r1551 r1552 0field into r1553;
    add r1400 r1553 into r1554;
    is.neq 9u8 0u8 into r1555;
    is.neq r122[0u32].index 0field into r1556;
    and r1555 r1556 into r1557;
    sub r122[0u32].index r122[9u32].index into r1558;
    is.eq r1558 0field into r1559;
    ternary r1559 1field r1558 into r1560;
    inv r1560 into r1561;
    mul r122[0u32].index r1561 into r1562;
    ternary r1557 r1562 1field into r1563;
    mul 1field r1563 into r1564;
    is.neq 9u8 1u8 into r1565;
    is.neq r122[1u32].index 0field into r1566;
    and r1565 r1566 into r1567;
    sub r122[1u32].index r122[9u32].index into r1568;
    is.eq r1568 0field into r1569;
    ternary r1569 1field r1568 into r1570;
    inv r1570 into r1571;
    mul r122[1u32].index r1571 into r1572;
    ternary r1567 r1572 1field into r1573;
    mul r1564 r1573 into r1574;
    is.neq 9u8 2u8 into r1575;
    is.neq r122[2u32].index 0field into r1576;
    and r1575 r1576 into r1577;
    sub r122[2u32].index r122[9u32].index into r1578;
    is.eq r1578 0field into r1579;
    ternary r1579 1field r1578 into r1580;
    inv r1580 into r1581;
    mul r122[2u32].index r1581 into r1582;
    ternary r1577 r1582 1field into r1583;
    mul r1574 r1583 into r1584;
    is.neq 9u8 3u8 into r1585;
    is.neq r122[3u32].index 0field into r1586;
    and r1585 r1586 into r1587;
    sub r122[3u32].index r122[9u32].index into r1588;
    is.eq r1588 0field into r1589;
    ternary r1589 1field r1588 into r1590;
    inv r1590 into r1591;
    mul r122[3u32].index r1591 into r1592;
    ternary r1587 r1592 1field into r1593;
    mul r1584 r1593 into r1594;
    is.neq 9u8 4u8 into r1595;
    is.neq r122[4u32].index 0field into r1596;
    and r1595 r1596 into r1597;
    sub r122[4u32].index r122[9u32].index into r1598;
    is.eq r1598 0field into r1599;
    ternary r1599 1field r1598 into r1600;
    inv r1600 into r1601;
    mul r122[4u32].index r1601 into r1602;
    ternary r1597 r1602 1field into r1603;
    mul r1594 r1603 into r1604;
    is.neq 9u8 5u8 into r1605;
    is.neq r122[5u32].index 0field into r1606;
    and r1605 r1606 into r1607;
    sub r122[5u32].index r122[9u32].index into r1608;
    is.eq r1608 0field into r1609;
    ternary r1609 1field r1608 into r1610;
    inv r1610 into r1611;
    mul r122[5u32].index r1611 into r1612;
    ternary r1607 r1612 1field into r1613;
    mul r1604 r1613 into r1614;
    is.neq 9u8 6u8 into r1615;
    is.neq r122[6u32].index 0field into r1616;
    and r1615 r1616 into r1617;
    sub r122[6u32].index r122[9u32].index into r1618;
    is.eq r1618 0field into r1619;
    ternary r1619 1field r1618 into r1620;
    inv r1620 into r1621;
    mul r122[6u32].index r1621 into r1622;
    ternary r1617 r1622 1field into r1623;
    mul r1614 r1623 into r1624;
    is.neq 9u8 7u8 into r1625;
    is.neq r122[7u32].index 0field into r1626;
    and r1625 r1626 into r1627;
    sub r122[7u32].index r122[9u32].index into r1628;
    is.eq r1628 0field into r1629;
    ternary r1629 1field r1628 into r1630;
    inv r1630 into r1631;
    mul r122[7u32].index r1631 into r1632;
    ternary r1627 r1632 1field into r1633;
    mul r1624 r1633 into r1634;
    is.neq 9u8 8u8 into r1635;
    is.neq r122[8u32].index 0field into r1636;
    and r1635 r1636 into r1637;
    sub r122[8u32].index r122[9u32].index into r1638;
    is.eq r1638 0field into r1639;
    ternary r1639 1field r1638 into r1640;
    inv r1640 into r1641;
    mul r122[8u32].index r1641 into r1642;
    ternary r1637 r1642 1field into r1643;
    mul r1634 r1643 into r1644;
    is.neq 9u8 9u8 into r1645;
    is.neq r122[9u32].index 0field into r1646;
    and r1645 r1646 into r1647;
    sub r122[9u32].index r122[9u32].index into r1648;
    is.eq r1648 0field into r1649;
    ternary r1649 1field r1648 into r1650;
    inv r1650 into r1651;
    mul r122[9u32].index r1651 into r1652;
    ternary r1647 r1652 1field into r1653;
    mul r1644 r1653 into r1654;
    is.neq 9u8 10u8 into r1655;
    is.neq r122[10u32].index 0field into r1656;
    and r1655 r1656 into r1657;
    sub r122[10u32].index r122[9u32].index into r1658;
    is.eq r1658 0field into r1659;
    ternary r1659 1field r1658 into r1660;
    inv r1660 into r1661;
    mul r122[10u32].index r1661 into r1662;
    ternary r1657 r1662 1field into r1663;
    mul r1654 r1663 into r1664;
    is.neq 9u8 11u8 into r1665;
    is.neq r122[11u32].index 0field into r1666;
    and r1665 r1666 into r1667;
    sub r122[11u32].index r122[9u32].index into r1668;
    is.eq r1668 0field into r1669;
    ternary r1669 1field r1668 into r1670;
    inv r1670 into r1671;
    mul r122[11u32].index r1671 into r1672;
    ternary r1667 r1672 1field into r1673;
    mul r1664 r1673 into r1674;
    is.neq 9u8 12u8 into r1675;
    is.neq r122[12u32].index 0field into r1676;
    and r1675 r1676 into r1677;
    sub r122[12u32].index r122[9u32].index into r1678;
    is.eq r1678 0field into r1679;
    ternary r1679 1field r1678 into r1680;
    inv r1680 into r1681;
    mul r122[12u32].index r1681 into r1682;
    ternary r1677 r1682 1field into r1683;
    mul r1674 r1683 into r1684;
    is.neq 9u8 13u8 into r1685;
    is.neq r122[13u32].index 0field into r1686;
    and r1685 r1686 into r1687;
    sub r122[13u32].index r122[9u32].index into r1688;
    is.eq r1688 0field into r1689;
    ternary r1689 1field r1688 into r1690;
    inv r1690 into r1691;
    mul r122[13u32].index r1691 into r1692;
    ternary r1687 r1692 1field into r1693;
    mul r1684 r1693 into r1694;
    is.neq 9u8 14u8 into r1695;
    is.neq r122[14u32].index 0field into r1696;
    and r1695 r1696 into r1697;
    sub r122[14u32].index r122[9u32].index into r1698;
    is.eq r1698 0field into r1699;
    ternary r1699 1field r1698 into r1700;
    inv r1700 into r1701;
    mul r122[14u32].index r1701 into r1702;
    ternary r1697 r1702 1field into r1703;
    mul r1694 r1703 into r1704;
    is.neq r122[9u32].index 0field into r1705;
    mul r122[9u32].share_val r1704 into r1706;
    ternary r1705 r1706 0field into r1707;
    add r1554 r1707 into r1708;
    is.neq 10u8 0u8 into r1709;
    is.neq r122[0u32].index 0field into r1710;
    and r1709 r1710 into r1711;
    sub r122[0u32].index r122[10u32].index into r1712;
    is.eq r1712 0field into r1713;
    ternary r1713 1field r1712 into r1714;
    inv r1714 into r1715;
    mul r122[0u32].index r1715 into r1716;
    ternary r1711 r1716 1field into r1717;
    mul 1field r1717 into r1718;
    is.neq 10u8 1u8 into r1719;
    is.neq r122[1u32].index 0field into r1720;
    and r1719 r1720 into r1721;
    sub r122[1u32].index r122[10u32].index into r1722;
    is.eq r1722 0field into r1723;
    ternary r1723 1field r1722 into r1724;
    inv r1724 into r1725;
    mul r122[1u32].index r1725 into r1726;
    ternary r1721 r1726 1field into r1727;
    mul r1718 r1727 into r1728;
    is.neq 10u8 2u8 into r1729;
    is.neq r122[2u32].index 0field into r1730;
    and r1729 r1730 into r1731;
    sub r122[2u32].index r122[10u32].index into r1732;
    is.eq r1732 0field into r1733;
    ternary r1733 1field r1732 into r1734;
    inv r1734 into r1735;
    mul r122[2u32].index r1735 into r1736;
    ternary r1731 r1736 1field into r1737;
    mul r1728 r1737 into r1738;
    is.neq 10u8 3u8 into r1739;
    is.neq r122[3u32].index 0field into r1740;
    and r1739 r1740 into r1741;
    sub r122[3u32].index r122[10u32].index into r1742;
    is.eq r1742 0field into r1743;
    ternary r1743 1field r1742 into r1744;
    inv r1744 into r1745;
    mul r122[3u32].index r1745 into r1746;
    ternary r1741 r1746 1field into r1747;
    mul r1738 r1747 into r1748;
    is.neq 10u8 4u8 into r1749;
    is.neq r122[4u32].index 0field into r1750;
    and r1749 r1750 into r1751;
    sub r122[4u32].index r122[10u32].index into r1752;
    is.eq r1752 0field into r1753;
    ternary r1753 1field r1752 into r1754;
    inv r1754 into r1755;
    mul r122[4u32].index r1755 into r1756;
    ternary r1751 r1756 1field into r1757;
    mul r1748 r1757 into r1758;
    is.neq 10u8 5u8 into r1759;
    is.neq r122[5u32].index 0field into r1760;
    and r1759 r1760 into r1761;
    sub r122[5u32].index r122[10u32].index into r1762;
    is.eq r1762 0field into r1763;
    ternary r1763 1field r1762 into r1764;
    inv r1764 into r1765;
    mul r122[5u32].index r1765 into r1766;
    ternary r1761 r1766 1field into r1767;
    mul r1758 r1767 into r1768;
    is.neq 10u8 6u8 into r1769;
    is.neq r122[6u32].index 0field into r1770;
    and r1769 r1770 into r1771;
    sub r122[6u32].index r122[10u32].index into r1772;
    is.eq r1772 0field into r1773;
    ternary r1773 1field r1772 into r1774;
    inv r1774 into r1775;
    mul r122[6u32].index r1775 into r1776;
    ternary r1771 r1776 1field into r1777;
    mul r1768 r1777 into r1778;
    is.neq 10u8 7u8 into r1779;
    is.neq r122[7u32].index 0field into r1780;
    and r1779 r1780 into r1781;
    sub r122[7u32].index r122[10u32].index into r1782;
    is.eq r1782 0field into r1783;
    ternary r1783 1field r1782 into r1784;
    inv r1784 into r1785;
    mul r122[7u32].index r1785 into r1786;
    ternary r1781 r1786 1field into r1787;
    mul r1778 r1787 into r1788;
    is.neq 10u8 8u8 into r1789;
    is.neq r122[8u32].index 0field into r1790;
    and r1789 r1790 into r1791;
    sub r122[8u32].index r122[10u32].index into r1792;
    is.eq r1792 0field into r1793;
    ternary r1793 1field r1792 into r1794;
    inv r1794 into r1795;
    mul r122[8u32].index r1795 into r1796;
    ternary r1791 r1796 1field into r1797;
    mul r1788 r1797 into r1798;
    is.neq 10u8 9u8 into r1799;
    is.neq r122[9u32].index 0field into r1800;
    and r1799 r1800 into r1801;
    sub r122[9u32].index r122[10u32].index into r1802;
    is.eq r1802 0field into r1803;
    ternary r1803 1field r1802 into r1804;
    inv r1804 into r1805;
    mul r122[9u32].index r1805 into r1806;
    ternary r1801 r1806 1field into r1807;
    mul r1798 r1807 into r1808;
    is.neq 10u8 10u8 into r1809;
    is.neq r122[10u32].index 0field into r1810;
    and r1809 r1810 into r1811;
    sub r122[10u32].index r122[10u32].index into r1812;
    is.eq r1812 0field into r1813;
    ternary r1813 1field r1812 into r1814;
    inv r1814 into r1815;
    mul r122[10u32].index r1815 into r1816;
    ternary r1811 r1816 1field into r1817;
    mul r1808 r1817 into r1818;
    is.neq 10u8 11u8 into r1819;
    is.neq r122[11u32].index 0field into r1820;
    and r1819 r1820 into r1821;
    sub r122[11u32].index r122[10u32].index into r1822;
    is.eq r1822 0field into r1823;
    ternary r1823 1field r1822 into r1824;
    inv r1824 into r1825;
    mul r122[11u32].index r1825 into r1826;
    ternary r1821 r1826 1field into r1827;
    mul r1818 r1827 into r1828;
    is.neq 10u8 12u8 into r1829;
    is.neq r122[12u32].index 0field into r1830;
    and r1829 r1830 into r1831;
    sub r122[12u32].index r122[10u32].index into r1832;
    is.eq r1832 0field into r1833;
    ternary r1833 1field r1832 into r1834;
    inv r1834 into r1835;
    mul r122[12u32].index r1835 into r1836;
    ternary r1831 r1836 1field into r1837;
    mul r1828 r1837 into r1838;
    is.neq 10u8 13u8 into r1839;
    is.neq r122[13u32].index 0field into r1840;
    and r1839 r1840 into r1841;
    sub r122[13u32].index r122[10u32].index into r1842;
    is.eq r1842 0field into r1843;
    ternary r1843 1field r1842 into r1844;
    inv r1844 into r1845;
    mul r122[13u32].index r1845 into r1846;
    ternary r1841 r1846 1field into r1847;
    mul r1838 r1847 into r1848;
    is.neq 10u8 14u8 into r1849;
    is.neq r122[14u32].index 0field into r1850;
    and r1849 r1850 into r1851;
    sub r122[14u32].index r122[10u32].index into r1852;
    is.eq r1852 0field into r1853;
    ternary r1853 1field r1852 into r1854;
    inv r1854 into r1855;
    mul r122[14u32].index r1855 into r1856;
    ternary r1851 r1856 1field into r1857;
    mul r1848 r1857 into r1858;
    is.neq r122[10u32].index 0field into r1859;
    mul r122[10u32].share_val r1858 into r1860;
    ternary r1859 r1860 0field into r1861;
    add r1708 r1861 into r1862;
    is.neq 11u8 0u8 into r1863;
    is.neq r122[0u32].index 0field into r1864;
    and r1863 r1864 into r1865;
    sub r122[0u32].index r122[11u32].index into r1866;
    is.eq r1866 0field into r1867;
    ternary r1867 1field r1866 into r1868;
    inv r1868 into r1869;
    mul r122[0u32].index r1869 into r1870;
    ternary r1865 r1870 1field into r1871;
    mul 1field r1871 into r1872;
    is.neq 11u8 1u8 into r1873;
    is.neq r122[1u32].index 0field into r1874;
    and r1873 r1874 into r1875;
    sub r122[1u32].index r122[11u32].index into r1876;
    is.eq r1876 0field into r1877;
    ternary r1877 1field r1876 into r1878;
    inv r1878 into r1879;
    mul r122[1u32].index r1879 into r1880;
    ternary r1875 r1880 1field into r1881;
    mul r1872 r1881 into r1882;
    is.neq 11u8 2u8 into r1883;
    is.neq r122[2u32].index 0field into r1884;
    and r1883 r1884 into r1885;
    sub r122[2u32].index r122[11u32].index into r1886;
    is.eq r1886 0field into r1887;
    ternary r1887 1field r1886 into r1888;
    inv r1888 into r1889;
    mul r122[2u32].index r1889 into r1890;
    ternary r1885 r1890 1field into r1891;
    mul r1882 r1891 into r1892;
    is.neq 11u8 3u8 into r1893;
    is.neq r122[3u32].index 0field into r1894;
    and r1893 r1894 into r1895;
    sub r122[3u32].index r122[11u32].index into r1896;
    is.eq r1896 0field into r1897;
    ternary r1897 1field r1896 into r1898;
    inv r1898 into r1899;
    mul r122[3u32].index r1899 into r1900;
    ternary r1895 r1900 1field into r1901;
    mul r1892 r1901 into r1902;
    is.neq 11u8 4u8 into r1903;
    is.neq r122[4u32].index 0field into r1904;
    and r1903 r1904 into r1905;
    sub r122[4u32].index r122[11u32].index into r1906;
    is.eq r1906 0field into r1907;
    ternary r1907 1field r1906 into r1908;
    inv r1908 into r1909;
    mul r122[4u32].index r1909 into r1910;
    ternary r1905 r1910 1field into r1911;
    mul r1902 r1911 into r1912;
    is.neq 11u8 5u8 into r1913;
    is.neq r122[5u32].index 0field into r1914;
    and r1913 r1914 into r1915;
    sub r122[5u32].index r122[11u32].index into r1916;
    is.eq r1916 0field into r1917;
    ternary r1917 1field r1916 into r1918;
    inv r1918 into r1919;
    mul r122[5u32].index r1919 into r1920;
    ternary r1915 r1920 1field into r1921;
    mul r1912 r1921 into r1922;
    is.neq 11u8 6u8 into r1923;
    is.neq r122[6u32].index 0field into r1924;
    and r1923 r1924 into r1925;
    sub r122[6u32].index r122[11u32].index into r1926;
    is.eq r1926 0field into r1927;
    ternary r1927 1field r1926 into r1928;
    inv r1928 into r1929;
    mul r122[6u32].index r1929 into r1930;
    ternary r1925 r1930 1field into r1931;
    mul r1922 r1931 into r1932;
    is.neq 11u8 7u8 into r1933;
    is.neq r122[7u32].index 0field into r1934;
    and r1933 r1934 into r1935;
    sub r122[7u32].index r122[11u32].index into r1936;
    is.eq r1936 0field into r1937;
    ternary r1937 1field r1936 into r1938;
    inv r1938 into r1939;
    mul r122[7u32].index r1939 into r1940;
    ternary r1935 r1940 1field into r1941;
    mul r1932 r1941 into r1942;
    is.neq 11u8 8u8 into r1943;
    is.neq r122[8u32].index 0field into r1944;
    and r1943 r1944 into r1945;
    sub r122[8u32].index r122[11u32].index into r1946;
    is.eq r1946 0field into r1947;
    ternary r1947 1field r1946 into r1948;
    inv r1948 into r1949;
    mul r122[8u32].index r1949 into r1950;
    ternary r1945 r1950 1field into r1951;
    mul r1942 r1951 into r1952;
    is.neq 11u8 9u8 into r1953;
    is.neq r122[9u32].index 0field into r1954;
    and r1953 r1954 into r1955;
    sub r122[9u32].index r122[11u32].index into r1956;
    is.eq r1956 0field into r1957;
    ternary r1957 1field r1956 into r1958;
    inv r1958 into r1959;
    mul r122[9u32].index r1959 into r1960;
    ternary r1955 r1960 1field into r1961;
    mul r1952 r1961 into r1962;
    is.neq 11u8 10u8 into r1963;
    is.neq r122[10u32].index 0field into r1964;
    and r1963 r1964 into r1965;
    sub r122[10u32].index r122[11u32].index into r1966;
    is.eq r1966 0field into r1967;
    ternary r1967 1field r1966 into r1968;
    inv r1968 into r1969;
    mul r122[10u32].index r1969 into r1970;
    ternary r1965 r1970 1field into r1971;
    mul r1962 r1971 into r1972;
    is.neq 11u8 11u8 into r1973;
    is.neq r122[11u32].index 0field into r1974;
    and r1973 r1974 into r1975;
    sub r122[11u32].index r122[11u32].index into r1976;
    is.eq r1976 0field into r1977;
    ternary r1977 1field r1976 into r1978;
    inv r1978 into r1979;
    mul r122[11u32].index r1979 into r1980;
    ternary r1975 r1980 1field into r1981;
    mul r1972 r1981 into r1982;
    is.neq 11u8 12u8 into r1983;
    is.neq r122[12u32].index 0field into r1984;
    and r1983 r1984 into r1985;
    sub r122[12u32].index r122[11u32].index into r1986;
    is.eq r1986 0field into r1987;
    ternary r1987 1field r1986 into r1988;
    inv r1988 into r1989;
    mul r122[12u32].index r1989 into r1990;
    ternary r1985 r1990 1field into r1991;
    mul r1982 r1991 into r1992;
    is.neq 11u8 13u8 into r1993;
    is.neq r122[13u32].index 0field into r1994;
    and r1993 r1994 into r1995;
    sub r122[13u32].index r122[11u32].index into r1996;
    is.eq r1996 0field into r1997;
    ternary r1997 1field r1996 into r1998;
    inv r1998 into r1999;
    mul r122[13u32].index r1999 into r2000;
    ternary r1995 r2000 1field into r2001;
    mul r1992 r2001 into r2002;
    is.neq 11u8 14u8 into r2003;
    is.neq r122[14u32].index 0field into r2004;
    and r2003 r2004 into r2005;
    sub r122[14u32].index r122[11u32].index into r2006;
    is.eq r2006 0field into r2007;
    ternary r2007 1field r2006 into r2008;
    inv r2008 into r2009;
    mul r122[14u32].index r2009 into r2010;
    ternary r2005 r2010 1field into r2011;
    mul r2002 r2011 into r2012;
    is.neq r122[11u32].index 0field into r2013;
    mul r122[11u32].share_val r2012 into r2014;
    ternary r2013 r2014 0field into r2015;
    add r1862 r2015 into r2016;
    is.neq 12u8 0u8 into r2017;
    is.neq r122[0u32].index 0field into r2018;
    and r2017 r2018 into r2019;
    sub r122[0u32].index r122[12u32].index into r2020;
    is.eq r2020 0field into r2021;
    ternary r2021 1field r2020 into r2022;
    inv r2022 into r2023;
    mul r122[0u32].index r2023 into r2024;
    ternary r2019 r2024 1field into r2025;
    mul 1field r2025 into r2026;
    is.neq 12u8 1u8 into r2027;
    is.neq r122[1u32].index 0field into r2028;
    and r2027 r2028 into r2029;
    sub r122[1u32].index r122[12u32].index into r2030;
    is.eq r2030 0field into r2031;
    ternary r2031 1field r2030 into r2032;
    inv r2032 into r2033;
    mul r122[1u32].index r2033 into r2034;
    ternary r2029 r2034 1field into r2035;
    mul r2026 r2035 into r2036;
    is.neq 12u8 2u8 into r2037;
    is.neq r122[2u32].index 0field into r2038;
    and r2037 r2038 into r2039;
    sub r122[2u32].index r122[12u32].index into r2040;
    is.eq r2040 0field into r2041;
    ternary r2041 1field r2040 into r2042;
    inv r2042 into r2043;
    mul r122[2u32].index r2043 into r2044;
    ternary r2039 r2044 1field into r2045;
    mul r2036 r2045 into r2046;
    is.neq 12u8 3u8 into r2047;
    is.neq r122[3u32].index 0field into r2048;
    and r2047 r2048 into r2049;
    sub r122[3u32].index r122[12u32].index into r2050;
    is.eq r2050 0field into r2051;
    ternary r2051 1field r2050 into r2052;
    inv r2052 into r2053;
    mul r122[3u32].index r2053 into r2054;
    ternary r2049 r2054 1field into r2055;
    mul r2046 r2055 into r2056;
    is.neq 12u8 4u8 into r2057;
    is.neq r122[4u32].index 0field into r2058;
    and r2057 r2058 into r2059;
    sub r122[4u32].index r122[12u32].index into r2060;
    is.eq r2060 0field into r2061;
    ternary r2061 1field r2060 into r2062;
    inv r2062 into r2063;
    mul r122[4u32].index r2063 into r2064;
    ternary r2059 r2064 1field into r2065;
    mul r2056 r2065 into r2066;
    is.neq 12u8 5u8 into r2067;
    is.neq r122[5u32].index 0field into r2068;
    and r2067 r2068 into r2069;
    sub r122[5u32].index r122[12u32].index into r2070;
    is.eq r2070 0field into r2071;
    ternary r2071 1field r2070 into r2072;
    inv r2072 into r2073;
    mul r122[5u32].index r2073 into r2074;
    ternary r2069 r2074 1field into r2075;
    mul r2066 r2075 into r2076;
    is.neq 12u8 6u8 into r2077;
    is.neq r122[6u32].index 0field into r2078;
    and r2077 r2078 into r2079;
    sub r122[6u32].index r122[12u32].index into r2080;
    is.eq r2080 0field into r2081;
    ternary r2081 1field r2080 into r2082;
    inv r2082 into r2083;
    mul r122[6u32].index r2083 into r2084;
    ternary r2079 r2084 1field into r2085;
    mul r2076 r2085 into r2086;
    is.neq 12u8 7u8 into r2087;
    is.neq r122[7u32].index 0field into r2088;
    and r2087 r2088 into r2089;
    sub r122[7u32].index r122[12u32].index into r2090;
    is.eq r2090 0field into r2091;
    ternary r2091 1field r2090 into r2092;
    inv r2092 into r2093;
    mul r122[7u32].index r2093 into r2094;
    ternary r2089 r2094 1field into r2095;
    mul r2086 r2095 into r2096;
    is.neq 12u8 8u8 into r2097;
    is.neq r122[8u32].index 0field into r2098;
    and r2097 r2098 into r2099;
    sub r122[8u32].index r122[12u32].index into r2100;
    is.eq r2100 0field into r2101;
    ternary r2101 1field r2100 into r2102;
    inv r2102 into r2103;
    mul r122[8u32].index r2103 into r2104;
    ternary r2099 r2104 1field into r2105;
    mul r2096 r2105 into r2106;
    is.neq 12u8 9u8 into r2107;
    is.neq r122[9u32].index 0field into r2108;
    and r2107 r2108 into r2109;
    sub r122[9u32].index r122[12u32].index into r2110;
    is.eq r2110 0field into r2111;
    ternary r2111 1field r2110 into r2112;
    inv r2112 into r2113;
    mul r122[9u32].index r2113 into r2114;
    ternary r2109 r2114 1field into r2115;
    mul r2106 r2115 into r2116;
    is.neq 12u8 10u8 into r2117;
    is.neq r122[10u32].index 0field into r2118;
    and r2117 r2118 into r2119;
    sub r122[10u32].index r122[12u32].index into r2120;
    is.eq r2120 0field into r2121;
    ternary r2121 1field r2120 into r2122;
    inv r2122 into r2123;
    mul r122[10u32].index r2123 into r2124;
    ternary r2119 r2124 1field into r2125;
    mul r2116 r2125 into r2126;
    is.neq 12u8 11u8 into r2127;
    is.neq r122[11u32].index 0field into r2128;
    and r2127 r2128 into r2129;
    sub r122[11u32].index r122[12u32].index into r2130;
    is.eq r2130 0field into r2131;
    ternary r2131 1field r2130 into r2132;
    inv r2132 into r2133;
    mul r122[11u32].index r2133 into r2134;
    ternary r2129 r2134 1field into r2135;
    mul r2126 r2135 into r2136;
    is.neq 12u8 12u8 into r2137;
    is.neq r122[12u32].index 0field into r2138;
    and r2137 r2138 into r2139;
    sub r122[12u32].index r122[12u32].index into r2140;
    is.eq r2140 0field into r2141;
    ternary r2141 1field r2140 into r2142;
    inv r2142 into r2143;
    mul r122[12u32].index r2143 into r2144;
    ternary r2139 r2144 1field into r2145;
    mul r2136 r2145 into r2146;
    is.neq 12u8 13u8 into r2147;
    is.neq r122[13u32].index 0field into r2148;
    and r2147 r2148 into r2149;
    sub r122[13u32].index r122[12u32].index into r2150;
    is.eq r2150 0field into r2151;
    ternary r2151 1field r2150 into r2152;
    inv r2152 into r2153;
    mul r122[13u32].index r2153 into r2154;
    ternary r2149 r2154 1field into r2155;
    mul r2146 r2155 into r2156;
    is.neq 12u8 14u8 into r2157;
    is.neq r122[14u32].index 0field into r2158;
    and r2157 r2158 into r2159;
    sub r122[14u32].index r122[12u32].index into r2160;
    is.eq r2160 0field into r2161;
    ternary r2161 1field r2160 into r2162;
    inv r2162 into r2163;
    mul r122[14u32].index r2163 into r2164;
    ternary r2159 r2164 1field into r2165;
    mul r2156 r2165 into r2166;
    is.neq r122[12u32].index 0field into r2167;
    mul r122[12u32].share_val r2166 into r2168;
    ternary r2167 r2168 0field into r2169;
    add r2016 r2169 into r2170;
    is.neq 13u8 0u8 into r2171;
    is.neq r122[0u32].index 0field into r2172;
    and r2171 r2172 into r2173;
    sub r122[0u32].index r122[13u32].index into r2174;
    is.eq r2174 0field into r2175;
    ternary r2175 1field r2174 into r2176;
    inv r2176 into r2177;
    mul r122[0u32].index r2177 into r2178;
    ternary r2173 r2178 1field into r2179;
    mul 1field r2179 into r2180;
    is.neq 13u8 1u8 into r2181;
    is.neq r122[1u32].index 0field into r2182;
    and r2181 r2182 into r2183;
    sub r122[1u32].index r122[13u32].index into r2184;
    is.eq r2184 0field into r2185;
    ternary r2185 1field r2184 into r2186;
    inv r2186 into r2187;
    mul r122[1u32].index r2187 into r2188;
    ternary r2183 r2188 1field into r2189;
    mul r2180 r2189 into r2190;
    is.neq 13u8 2u8 into r2191;
    is.neq r122[2u32].index 0field into r2192;
    and r2191 r2192 into r2193;
    sub r122[2u32].index r122[13u32].index into r2194;
    is.eq r2194 0field into r2195;
    ternary r2195 1field r2194 into r2196;
    inv r2196 into r2197;
    mul r122[2u32].index r2197 into r2198;
    ternary r2193 r2198 1field into r2199;
    mul r2190 r2199 into r2200;
    is.neq 13u8 3u8 into r2201;
    is.neq r122[3u32].index 0field into r2202;
    and r2201 r2202 into r2203;
    sub r122[3u32].index r122[13u32].index into r2204;
    is.eq r2204 0field into r2205;
    ternary r2205 1field r2204 into r2206;
    inv r2206 into r2207;
    mul r122[3u32].index r2207 into r2208;
    ternary r2203 r2208 1field into r2209;
    mul r2200 r2209 into r2210;
    is.neq 13u8 4u8 into r2211;
    is.neq r122[4u32].index 0field into r2212;
    and r2211 r2212 into r2213;
    sub r122[4u32].index r122[13u32].index into r2214;
    is.eq r2214 0field into r2215;
    ternary r2215 1field r2214 into r2216;
    inv r2216 into r2217;
    mul r122[4u32].index r2217 into r2218;
    ternary r2213 r2218 1field into r2219;
    mul r2210 r2219 into r2220;
    is.neq 13u8 5u8 into r2221;
    is.neq r122[5u32].index 0field into r2222;
    and r2221 r2222 into r2223;
    sub r122[5u32].index r122[13u32].index into r2224;
    is.eq r2224 0field into r2225;
    ternary r2225 1field r2224 into r2226;
    inv r2226 into r2227;
    mul r122[5u32].index r2227 into r2228;
    ternary r2223 r2228 1field into r2229;
    mul r2220 r2229 into r2230;
    is.neq 13u8 6u8 into r2231;
    is.neq r122[6u32].index 0field into r2232;
    and r2231 r2232 into r2233;
    sub r122[6u32].index r122[13u32].index into r2234;
    is.eq r2234 0field into r2235;
    ternary r2235 1field r2234 into r2236;
    inv r2236 into r2237;
    mul r122[6u32].index r2237 into r2238;
    ternary r2233 r2238 1field into r2239;
    mul r2230 r2239 into r2240;
    is.neq 13u8 7u8 into r2241;
    is.neq r122[7u32].index 0field into r2242;
    and r2241 r2242 into r2243;
    sub r122[7u32].index r122[13u32].index into r2244;
    is.eq r2244 0field into r2245;
    ternary r2245 1field r2244 into r2246;
    inv r2246 into r2247;
    mul r122[7u32].index r2247 into r2248;
    ternary r2243 r2248 1field into r2249;
    mul r2240 r2249 into r2250;
    is.neq 13u8 8u8 into r2251;
    is.neq r122[8u32].index 0field into r2252;
    and r2251 r2252 into r2253;
    sub r122[8u32].index r122[13u32].index into r2254;
    is.eq r2254 0field into r2255;
    ternary r2255 1field r2254 into r2256;
    inv r2256 into r2257;
    mul r122[8u32].index r2257 into r2258;
    ternary r2253 r2258 1field into r2259;
    mul r2250 r2259 into r2260;
    is.neq 13u8 9u8 into r2261;
    is.neq r122[9u32].index 0field into r2262;
    and r2261 r2262 into r2263;
    sub r122[9u32].index r122[13u32].index into r2264;
    is.eq r2264 0field into r2265;
    ternary r2265 1field r2264 into r2266;
    inv r2266 into r2267;
    mul r122[9u32].index r2267 into r2268;
    ternary r2263 r2268 1field into r2269;
    mul r2260 r2269 into r2270;
    is.neq 13u8 10u8 into r2271;
    is.neq r122[10u32].index 0field into r2272;
    and r2271 r2272 into r2273;
    sub r122[10u32].index r122[13u32].index into r2274;
    is.eq r2274 0field into r2275;
    ternary r2275 1field r2274 into r2276;
    inv r2276 into r2277;
    mul r122[10u32].index r2277 into r2278;
    ternary r2273 r2278 1field into r2279;
    mul r2270 r2279 into r2280;
    is.neq 13u8 11u8 into r2281;
    is.neq r122[11u32].index 0field into r2282;
    and r2281 r2282 into r2283;
    sub r122[11u32].index r122[13u32].index into r2284;
    is.eq r2284 0field into r2285;
    ternary r2285 1field r2284 into r2286;
    inv r2286 into r2287;
    mul r122[11u32].index r2287 into r2288;
    ternary r2283 r2288 1field into r2289;
    mul r2280 r2289 into r2290;
    is.neq 13u8 12u8 into r2291;
    is.neq r122[12u32].index 0field into r2292;
    and r2291 r2292 into r2293;
    sub r122[12u32].index r122[13u32].index into r2294;
    is.eq r2294 0field into r2295;
    ternary r2295 1field r2294 into r2296;
    inv r2296 into r2297;
    mul r122[12u32].index r2297 into r2298;
    ternary r2293 r2298 1field into r2299;
    mul r2290 r2299 into r2300;
    is.neq 13u8 13u8 into r2301;
    is.neq r122[13u32].index 0field into r2302;
    and r2301 r2302 into r2303;
    sub r122[13u32].index r122[13u32].index into r2304;
    is.eq r2304 0field into r2305;
    ternary r2305 1field r2304 into r2306;
    inv r2306 into r2307;
    mul r122[13u32].index r2307 into r2308;
    ternary r2303 r2308 1field into r2309;
    mul r2300 r2309 into r2310;
    is.neq 13u8 14u8 into r2311;
    is.neq r122[14u32].index 0field into r2312;
    and r2311 r2312 into r2313;
    sub r122[14u32].index r122[13u32].index into r2314;
    is.eq r2314 0field into r2315;
    ternary r2315 1field r2314 into r2316;
    inv r2316 into r2317;
    mul r122[14u32].index r2317 into r2318;
    ternary r2313 r2318 1field into r2319;
    mul r2310 r2319 into r2320;
    is.neq r122[13u32].index 0field into r2321;
    mul r122[13u32].share_val r2320 into r2322;
    ternary r2321 r2322 0field into r2323;
    add r2170 r2323 into r2324;
    is.neq 14u8 0u8 into r2325;
    is.neq r122[0u32].index 0field into r2326;
    and r2325 r2326 into r2327;
    sub r122[0u32].index r122[14u32].index into r2328;
    is.eq r2328 0field into r2329;
    ternary r2329 1field r2328 into r2330;
    inv r2330 into r2331;
    mul r122[0u32].index r2331 into r2332;
    ternary r2327 r2332 1field into r2333;
    mul 1field r2333 into r2334;
    is.neq 14u8 1u8 into r2335;
    is.neq r122[1u32].index 0field into r2336;
    and r2335 r2336 into r2337;
    sub r122[1u32].index r122[14u32].index into r2338;
    is.eq r2338 0field into r2339;
    ternary r2339 1field r2338 into r2340;
    inv r2340 into r2341;
    mul r122[1u32].index r2341 into r2342;
    ternary r2337 r2342 1field into r2343;
    mul r2334 r2343 into r2344;
    is.neq 14u8 2u8 into r2345;
    is.neq r122[2u32].index 0field into r2346;
    and r2345 r2346 into r2347;
    sub r122[2u32].index r122[14u32].index into r2348;
    is.eq r2348 0field into r2349;
    ternary r2349 1field r2348 into r2350;
    inv r2350 into r2351;
    mul r122[2u32].index r2351 into r2352;
    ternary r2347 r2352 1field into r2353;
    mul r2344 r2353 into r2354;
    is.neq 14u8 3u8 into r2355;
    is.neq r122[3u32].index 0field into r2356;
    and r2355 r2356 into r2357;
    sub r122[3u32].index r122[14u32].index into r2358;
    is.eq r2358 0field into r2359;
    ternary r2359 1field r2358 into r2360;
    inv r2360 into r2361;
    mul r122[3u32].index r2361 into r2362;
    ternary r2357 r2362 1field into r2363;
    mul r2354 r2363 into r2364;
    is.neq 14u8 4u8 into r2365;
    is.neq r122[4u32].index 0field into r2366;
    and r2365 r2366 into r2367;
    sub r122[4u32].index r122[14u32].index into r2368;
    is.eq r2368 0field into r2369;
    ternary r2369 1field r2368 into r2370;
    inv r2370 into r2371;
    mul r122[4u32].index r2371 into r2372;
    ternary r2367 r2372 1field into r2373;
    mul r2364 r2373 into r2374;
    is.neq 14u8 5u8 into r2375;
    is.neq r122[5u32].index 0field into r2376;
    and r2375 r2376 into r2377;
    sub r122[5u32].index r122[14u32].index into r2378;
    is.eq r2378 0field into r2379;
    ternary r2379 1field r2378 into r2380;
    inv r2380 into r2381;
    mul r122[5u32].index r2381 into r2382;
    ternary r2377 r2382 1field into r2383;
    mul r2374 r2383 into r2384;
    is.neq 14u8 6u8 into r2385;
    is.neq r122[6u32].index 0field into r2386;
    and r2385 r2386 into r2387;
    sub r122[6u32].index r122[14u32].index into r2388;
    is.eq r2388 0field into r2389;
    ternary r2389 1field r2388 into r2390;
    inv r2390 into r2391;
    mul r122[6u32].index r2391 into r2392;
    ternary r2387 r2392 1field into r2393;
    mul r2384 r2393 into r2394;
    is.neq 14u8 7u8 into r2395;
    is.neq r122[7u32].index 0field into r2396;
    and r2395 r2396 into r2397;
    sub r122[7u32].index r122[14u32].index into r2398;
    is.eq r2398 0field into r2399;
    ternary r2399 1field r2398 into r2400;
    inv r2400 into r2401;
    mul r122[7u32].index r2401 into r2402;
    ternary r2397 r2402 1field into r2403;
    mul r2394 r2403 into r2404;
    is.neq 14u8 8u8 into r2405;
    is.neq r122[8u32].index 0field into r2406;
    and r2405 r2406 into r2407;
    sub r122[8u32].index r122[14u32].index into r2408;
    is.eq r2408 0field into r2409;
    ternary r2409 1field r2408 into r2410;
    inv r2410 into r2411;
    mul r122[8u32].index r2411 into r2412;
    ternary r2407 r2412 1field into r2413;
    mul r2404 r2413 into r2414;
    is.neq 14u8 9u8 into r2415;
    is.neq r122[9u32].index 0field into r2416;
    and r2415 r2416 into r2417;
    sub r122[9u32].index r122[14u32].index into r2418;
    is.eq r2418 0field into r2419;
    ternary r2419 1field r2418 into r2420;
    inv r2420 into r2421;
    mul r122[9u32].index r2421 into r2422;
    ternary r2417 r2422 1field into r2423;
    mul r2414 r2423 into r2424;
    is.neq 14u8 10u8 into r2425;
    is.neq r122[10u32].index 0field into r2426;
    and r2425 r2426 into r2427;
    sub r122[10u32].index r122[14u32].index into r2428;
    is.eq r2428 0field into r2429;
    ternary r2429 1field r2428 into r2430;
    inv r2430 into r2431;
    mul r122[10u32].index r2431 into r2432;
    ternary r2427 r2432 1field into r2433;
    mul r2424 r2433 into r2434;
    is.neq 14u8 11u8 into r2435;
    is.neq r122[11u32].index 0field into r2436;
    and r2435 r2436 into r2437;
    sub r122[11u32].index r122[14u32].index into r2438;
    is.eq r2438 0field into r2439;
    ternary r2439 1field r2438 into r2440;
    inv r2440 into r2441;
    mul r122[11u32].index r2441 into r2442;
    ternary r2437 r2442 1field into r2443;
    mul r2434 r2443 into r2444;
    is.neq 14u8 12u8 into r2445;
    is.neq r122[12u32].index 0field into r2446;
    and r2445 r2446 into r2447;
    sub r122[12u32].index r122[14u32].index into r2448;
    is.eq r2448 0field into r2449;
    ternary r2449 1field r2448 into r2450;
    inv r2450 into r2451;
    mul r122[12u32].index r2451 into r2452;
    ternary r2447 r2452 1field into r2453;
    mul r2444 r2453 into r2454;
    is.neq 14u8 13u8 into r2455;
    is.neq r122[13u32].index 0field into r2456;
    and r2455 r2456 into r2457;
    sub r122[13u32].index r122[14u32].index into r2458;
    is.eq r2458 0field into r2459;
    ternary r2459 1field r2458 into r2460;
    inv r2460 into r2461;
    mul r122[13u32].index r2461 into r2462;
    ternary r2457 r2462 1field into r2463;
    mul r2454 r2463 into r2464;
    is.neq 14u8 14u8 into r2465;
    is.neq r122[14u32].index 0field into r2466;
    and r2465 r2466 into r2467;
    sub r122[14u32].index r122[14u32].index into r2468;
    is.eq r2468 0field into r2469;
    ternary r2469 1field r2468 into r2470;
    inv r2470 into r2471;
    mul r122[14u32].index r2471 into r2472;
    ternary r2467 r2472 1field into r2473;
    mul r2464 r2473 into r2474;
    is.neq r122[14u32].index 0field into r2475;
    mul r122[14u32].share_val r2474 into r2476;
    ternary r2475 r2476 0field into r2477;
    add r2324 r2477 into r2478;
    set r2478 into reconstructed_secrets[r0];



